# based on x360_imports.idc by xorloser

# work out which name generating function to use
# 
# args:  name of the library to get name from
#       version of the library to get name from
#       id that represents the function/data in the library
# returns:  generated name
def DoNameGen(libName, version, id):
  # remove the extension from the library name
  libName = libName.rsplit('.', 1)[0]
  
  funcName = ""
  if "connectx" == libName:
    funcName = connectxNameGen(libName, version, id)
  elif "createprofile" == libName:
    funcName = createprofileNameGen(libName, version, id)
  elif "vk" == libName:
    funcName = vkNameGen(libName, version, id)
  elif "xam" == libName:
    funcName = xamNameGen(libName, version, id)
  elif "xapi" == libName:
    funcName = xapiNameGen(libName, version, id)
  elif "xbdm" == libName:
    funcName = xbdmNameGen(libName, version, id)
  elif "xboxkrnl" == libName:
    funcName = xboxkrnlNameGen(libName, version, id)
  elif "syscall" == libName:
    funcName = syscallNameGen(libName, version, id)
  else:
    funcName = unknownNameGen(libName, version, id)
  
  return funcName

def connectxNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000001: funcName = "CxGetVersion"
  elif id == 0x00000002: funcName = "NbtNetbios"
  elif id == 0x00000003: funcName = "SmbCloseHandle"
  elif id == 0x00000004: funcName = "SmbCreateDirectoryW"
  elif id == 0x00000005: funcName = "SmbCreateFileW"
  elif id == 0x00000006: funcName = "SmbDeleteFileW"
  elif id == 0x00000007: funcName = "SmbFindClose"
  elif id == 0x00000008: funcName = "SmbFindFirstFileW"
  elif id == 0x00000009: funcName = "SmbFindNextFile"
  elif id == 0x0000000A: funcName = "SmbFlushFileBuffers"
  elif id == 0x0000000B: funcName = "SmbGetDiskFreeSpaceW"
  elif id == 0x0000000C: funcName = "SmbGetFileAttributesW"
  elif id == 0x0000000D: funcName = "SmbGetFileInformationByHandle"
  elif id == 0x0000000E: funcName = "SmbGetFileSize"
  elif id == 0x0000000F: funcName = "SmbGetFileTime"
  elif id == 0x00000010: funcName = "SmbMoveFileW"
  elif id == 0x00000011: funcName = "SmbReadFile"
  elif id == 0x00000012: funcName = "SmbRemoveDirectoryW"
  elif id == 0x00000013: funcName = "SmbSetEndOfFile"
  elif id == 0x00000014: funcName = "SmbSetFileAttributesW"
  elif id == 0x00000015: funcName = "SmbSetFilePointer"
  elif id == 0x00000016: funcName = "SmbSetFileTime"
  elif id == 0x00000017: funcName = "SmbStartup"
  elif id == 0x00000018: funcName = "SmbWriteFile"
  
  return funcName
  
def createprofileNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000001: funcName = "CreateProfile_Register"
  elif id == 0x00000002: funcName = "CreateProfile_Unregister"
  
  return funcName
  
def vkNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000001: funcName = "RegisterXuiClasses"
  elif id == 0x00000002: funcName = "VK_UnInit"
  elif id == 0x00000003: funcName = "VK_CreateScene"
  elif id == 0x00000004: funcName = "VK_GetUserCancelled"
  
  return funcName
  
def xamNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000001: funcName = "NetDll_WSAStartup"
  elif id == 0x00000002: funcName = "NetDll_WSACleanup"
  elif id == 0x00000003: funcName = "NetDll_socket"
  elif id == 0x00000004: funcName = "NetDll_closesocket"
  elif id == 0x00000005: funcName = "NetDll_shutdown"
  elif id == 0x00000006: funcName = "NetDll_ioctlsocket"
  elif id == 0x00000007: funcName = "NetDll_setsockopt"
  elif id == 0x00000008: funcName = "NetDll_getsockopt"
  elif id == 0x00000009: funcName = "NetDll_getsockname"
  elif id == 0x0000000A: funcName = "NetDll_getpeername"
  elif id == 0x0000000B: funcName = "NetDll_bind"
  elif id == 0x0000000C: funcName = "NetDll_connect"
  elif id == 0x0000000D: funcName = "NetDll_listen"
  elif id == 0x0000000E: funcName = "NetDll_accept"
  elif id == 0x0000000F: funcName = "NetDll_select"
  elif id == 0x00000010: funcName = "NetDll_WSAGetOverlappedResult"
  elif id == 0x00000011: funcName = "NetDll_WSACancelOverlappedIO"
  elif id == 0x00000012: funcName = "NetDll_recv"
  elif id == 0x00000013: funcName = "NetDll_WSARecv"
  elif id == 0x00000014: funcName = "NetDll_recvfrom"
  elif id == 0x00000015: funcName = "NetDll_WSARecvFrom"
  elif id == 0x00000016: funcName = "NetDll_send"
  elif id == 0x00000017: funcName = "NetDll_WSASend"
  elif id == 0x00000018: funcName = "NetDll_sendto"
  elif id == 0x00000019: funcName = "NetDll_WSASendTo"
  elif id == 0x0000001A: funcName = "NetDll_inet_addr"
  elif id == 0x0000001B: funcName = "NetDll_WSAGetLastError"
  elif id == 0x0000001C: funcName = "NetDll_WSASetLastError"
  elif id == 0x0000001D: funcName = "NetDll_WSACreateEvent"
  elif id == 0x0000001E: funcName = "NetDll_WSACloseEvent"
  elif id == 0x0000001F: funcName = "NetDll_WSASetEvent"
  elif id == 0x00000020: funcName = "NetDll_WSAResetEvent"
  elif id == 0x00000021: funcName = "NetDll_WSAWaitForMultipleEvents"
  elif id == 0x00000022: funcName = "NetDll___WSAFDIsSet"
  elif id == 0x00000023: funcName = "NetDll_WSAEventSelect"
  elif id == 0x00000024: funcName = "NetDll_WSAStartupEx"
  elif id == 0x00000033: funcName = "NetDll_XNetStartup"
  elif id == 0x00000034: funcName = "NetDll_XNetCleanup"
  elif id == 0x00000035: funcName = "NetDll_XNetRandom"
  elif id == 0x00000036: funcName = "NetDll_XNetCreateKey"
  elif id == 0x00000037: funcName = "NetDll_XNetRegisterKey"
  elif id == 0x00000038: funcName = "NetDll_XNetUnregisterKey"
  elif id == 0x00000039: funcName = "NetDll_XNetXnAddrToInAddr"
  elif id == 0x0000003A: funcName = "NetDll_XNetServerToInAddr"
  elif id == 0x0000003B: funcName = "NetDll_XNetTsAddrToInAddr"
  elif id == 0x0000003C: funcName = "NetDll_XNetInAddrToXnAddr"
  elif id == 0x0000003D: funcName = "NetDll_XNetInAddrToServer"
  elif id == 0x0000003E: funcName = "NetDll_XNetInAddrToString"
  elif id == 0x0000003F: funcName = "NetDll_XNetUnregisterInAddr"
  elif id == 0x00000040: funcName = "NetDll_XNetXnAddrToMachineId"
  elif id == 0x00000041: funcName = "NetDll_XNetConnect"
  elif id == 0x00000042: funcName = "NetDll_XNetGetConnectStatus"
  elif id == 0x00000043: funcName = "NetDll_XNetDnsLookup"
  elif id == 0x00000044: funcName = "NetDll_XNetDnsRelease"
  elif id == 0x00000045: funcName = "NetDll_XNetQosListen"
  elif id == 0x00000046: funcName = "NetDll_XNetQosLookup"
  elif id == 0x00000047: funcName = "NetDll_XNetQosServiceLookup"
  elif id == 0x00000048: funcName = "NetDll_XNetQosRelease"
  elif id == 0x00000049: funcName = "NetDll_XNetGetTitleXnAddr"
  elif id == 0x0000004A: funcName = "NetDll_XNetGetDebugXnAddr"
  elif id == 0x0000004B: funcName = "NetDll_XNetGetEthernetLinkStatus"
  elif id == 0x0000004C: funcName = "NetDll_XNetGetBroadcastVersionStatus"
  elif id == 0x0000004D: funcName = "NetDll_XNetQosGetListenStats"
  elif id == 0x0000004E: funcName = "NetDll_XNetGetOpt"
  elif id == 0x0000004F: funcName = "NetDll_XNetSetOpt"
  elif id == 0x00000050: funcName = "NetDll_XNetStartupEx"
  elif id == 0x00000051: funcName = "NetDll_XNetReplaceKey"
  elif id == 0x00000052: funcName = "NetDll_XNetGetXnAddrPlatform"
  elif id == 0x00000053: funcName = "NetDll_XNetGetSystemLinkPort"
  elif id == 0x00000054: funcName = "NetDll_XNetSetSystemLinkPort"
  elif id == 0x00000065: funcName = "NetDll_XnpLoadConfigParams"
  elif id == 0x00000066: funcName = "NetDll_XnpSaveConfigParams"
  elif id == 0x00000067: funcName = "NetDll_XnpConfigUPnP"
  elif id == 0x00000068: funcName = "NetDll_XnpConfig"
  elif id == 0x00000069: funcName = "NetDll_XnpGetConfigStatus"
  elif id == 0x0000006A: funcName = "NetDll_XnpLoadMachineAccount"
  elif id == 0x0000006B: funcName = "NetDll_XnpSaveMachineAccount"
  elif id == 0x0000006C: funcName = "NetDll_XnpCapture"
  elif id == 0x0000006D: funcName = "NetDll_XnpEthernetInterceptSetCallbacks"
  elif id == 0x0000006E: funcName = "NetDll_XnpEthernetInterceptXmit"
  elif id == 0x0000006F: funcName = "NetDll_XnpEthernetInterceptRecv"
  elif id == 0x00000070: funcName = "NetDll_XnpLogonGetStatus"
  elif id == 0x00000071: funcName = "NetDll_XnpLogonGetQFlags"
  elif id == 0x00000072: funcName = "NetDll_XnpLogonSetQFlags"
  elif id == 0x00000073: funcName = "NetDll_XnpLogonSetQEvent"
  elif id == 0x00000074: funcName = "NetDll_XnpLogonClearQEvent"
  elif id == 0x00000075: funcName = "NetDll_XnpLogonGetQVals"
  elif id == 0x00000076: funcName = "NetDll_XnpLogonSetQVals"
  elif id == 0x00000077: funcName = "NetDll_XnpLogonSetPState"
  elif id == 0x00000078: funcName = "NetDll_XnpGetVlanXboxName"
  elif id == 0x00000079: funcName = "NetDll_XnpSetVlanXboxName"
  elif id == 0x0000007A: funcName = "NetDll_XnpGetActiveSocketList"
  elif id == 0x0000007B: funcName = "NetDll_XnpNoteSystemTime"
  elif id == 0x0000007C: funcName = "NetDll_XnpRegisterKeyForCallerType"
  elif id == 0x0000007D: funcName = "NetDll_XnpUnregisterKeyForCallerType"
  elif id == 0x0000007E: funcName = "NetDll_XnpLogonGetChallenge"
  elif id == 0x0000007F: funcName = "NetDll_XnpLogonClearChallenge"
  elif id == 0x00000080: funcName = "NetDll_XnpLogonSetChallengeResponse"
  elif id == 0x00000081: funcName = "NetDll_XnpGetSecAssocList"
  elif id == 0x00000082: funcName = "NetDll_XnpGetKeyList"
  elif id == 0x00000083: funcName = "NetDll_XnpGetQosLookupList"
  elif id == 0x00000084: funcName = "NetDll_XnpPersistTitleState"
  elif id == 0x00000085: funcName = "NetDll_XnpReplaceKeyForCallerType"
  elif id == 0x00000086: funcName = "NetDll_XnpEthernetInterceptSetExtendedReceiveCallback"
  elif id == 0x00000087: funcName = "NetDll_XnpQosHistoryLoad"
  elif id == 0x00000088: funcName = "NetDll_XnpQosHistorySaveMeasurements"
  elif id == 0x00000089: funcName = "NetDll_XnpQosHistoryGetEntries"
  elif id == 0x0000008A: funcName = "NetDll_XnpQosHistoryGetAggregateMeasurement"
  elif id == 0x0000008B: funcName = "NetDll_XnpToolSetCallbacks"
  elif id == 0x0000008C: funcName = "NetDll_XnpToolIpProxyInject"
  elif id == 0x0000008D: funcName = "NetDll_XnpUpdateConfigParams"
  elif id == 0x0000008E: funcName = "NetDll_XnpEthernetInterceptXmitAsIp"
  elif id == 0x00000097: funcName = "NetDll_XmlDownloadStart"
  elif id == 0x00000098: funcName = "NetDll_XmlDownloadContinue"
  elif id == 0x00000099: funcName = "NetDll_XmlDownloadStop"
  elif id == 0x0000009A: funcName = "NetDll_XmlDownloadGetParseTime"
  elif id == 0x0000009B: funcName = "NetDll_XmlDownloadGetReceivedDataSize"
  elif id == 0x000000C6: funcName = "XnpGetXwppMemoryLogSnapshot"
  elif id == 0x000000C7: funcName = "XnpGetXwppRuntimeFilter"
  elif id == 0x000000C9: funcName = "NetDll_XHttpStartup"
  elif id == 0x000000CA: funcName = "NetDll_XHttpShutdown"
  elif id == 0x000000CB: funcName = "NetDll_XHttpOpen"
  elif id == 0x000000CC: funcName = "NetDll_XHttpCloseHandle"
  elif id == 0x000000CD: funcName = "NetDll_XHttpConnect"
  elif id == 0x000000CE: funcName = "NetDll_XHttpSetStatusCallback"
  elif id == 0x000000CF: funcName = "NetDll_XHttpOpenRequest"
  elif id == 0x000000D0: funcName = "NetDll_XHttpOpenRequestUsingMemory"
  elif id == 0x000000D1: funcName = "NetDll_XHttpSendRequest"
  elif id == 0x000000D2: funcName = "NetDll_XHttpReceiveResponse"
  elif id == 0x000000D3: funcName = "NetDll_XHttpQueryHeaders"
  elif id == 0x000000D4: funcName = "NetDll_XHttpReadData"
  elif id == 0x000000D5: funcName = "NetDll_XHttpWriteData"
  elif id == 0x000000D6: funcName = "NetDll_XHttpQueryOption"
  elif id == 0x000000D7: funcName = "NetDll_XHttpSetOption"
  elif id == 0x000000D8: funcName = "NetDll_XHttpDoWork"
  elif id == 0x000000D9: funcName = "NetDll_XHttpSetCredentials"
  elif id == 0x000000DA: funcName = "NetDll_XHttpQueryAuthSchemes"
  elif id == 0x000000DB: funcName = "NetDll_XHttpCrackUrl"
  elif id == 0x000000FB: funcName = "NetDll_UpnpStartup"
  elif id == 0x000000FC: funcName = "NetDll_UpnpCleanup"
  elif id == 0x000000FD: funcName = "NetDll_UpnpSearchCreate"
  elif id == 0x000000FE: funcName = "NetDll_UpnpSearchGetDevices"
  elif id == 0x000000FF: funcName = "NetDll_UpnpDescribeCreate"
  elif id == 0x00000100: funcName = "NetDll_UpnpDescribeGetResults"
  elif id == 0x00000101: funcName = "NetDll_UpnpActionCalculateWorkBufferSize"
  elif id == 0x00000102: funcName = "NetDll_UpnpActionCreate"
  elif id == 0x00000103: funcName = "NetDll_UpnpActionGetResults"
  elif id == 0x00000104: funcName = "NetDll_UpnpEventCreate"
  elif id == 0x00000105: funcName = "NetDll_UpnpEventGetCurrentState"
  elif id == 0x00000106: funcName = "NetDll_UpnpEventUnsubscribe"
  elif id == 0x00000107: funcName = "NetDll_UpnpDoWork"
  elif id == 0x00000108: funcName = "NetDll_UpnpCloseHandle"
  elif id == 0x0000012D: funcName = "XNetLogonGetLoggedOnUsers"
  elif id == 0x0000012E: funcName = "XNetLogonGetNatType"
  elif id == 0x0000012F: funcName = "XNetLogonTaskStart"
  elif id == 0x00000130: funcName = "XNetLogonTaskClose"
  elif id == 0x00000131: funcName = "XNetLogonTaskContinue"
  elif id == 0x00000132: funcName = "XNetLogonGetServiceInfo"
  elif id == 0x00000133: funcName = "XNetLogonGetUserPrivileges"
  elif id == 0x00000134: funcName = "XNetLogonSetConsoleCertificate"
  elif id == 0x00000135: funcName = "XNetLogonGetMachineID"
  elif id == 0x00000136: funcName = "XNetLogonGetTitleID"
  elif id == 0x00000137: funcName = "XNetLogonGetTitleVersion"
  elif id == 0x00000138: funcName = "XNetLogonGetServiceNetworkID"
  elif id == 0x00000139: funcName = "XNetLogonGetDnsString"
  elif id == 0x0000013A: funcName = "XNetLogonSetTitleID"
  elif id == 0x0000013B: funcName = "XNetLogonGetExtendedStatus"
  elif id == 0x0000013C: funcName = "XNetLogonClearTicketCaches"
  elif id == 0x0000013D: funcName = "XNetLogonInitOverrideInfo"
  elif id == 0x0000013E: funcName = "XNetLogonGetLastUPnPStatus"
  elif id == 0x0000013F: funcName = "XNetLogonGetFlowToken"
  elif id == 0x00000140: funcName = "XNetLogonGetTicketOpt"
  elif id == 0x00000141: funcName = "XNetLogonSetTicketOpt"
  elif id == 0x00000190: funcName = "XamInputGetCapabilities"
  elif id == 0x00000191: funcName = "XamInputGetState"
  elif id == 0x00000192: funcName = "XamInputSetState"
  elif id == 0x00000193: funcName = "XamInputGetKeystroke"
  elif id == 0x00000194: funcName = "XamInputEnableAutobind"
  elif id == 0x00000195: funcName = "XamInputRawState"
  elif id == 0x00000196: funcName = "XamEnableSystemAppInput"
  elif id == 0x00000197: funcName = "XamInputGetDeviceStats"
  elif id == 0x00000198: funcName = "XamInputGetKeystrokeEx"
  elif id == 0x00000199: funcName = "XamInputGetKeystrokeHud"
  elif id == 0x0000019A: funcName = "XamInputSetLayoutKeyboard"
  elif id == 0x0000019B: funcName = "XamInputToggleKeyLocks"
  elif id == 0x0000019C: funcName = "XamInputResetLayoutKeyboard"
  elif id == 0x0000019D: funcName = "XamInputGetKeystrokeHudEx"
  elif id == 0x0000019E: funcName = "XamInputSetKeyboardTranslationHud"
  elif id == 0x0000019F: funcName = "XamSetInactivityTime"
  elif id == 0x000001A0: funcName = "XamEnableInactivityProcessing"
  elif id == 0x000001A1: funcName = "XamResetInactivity"
  elif id == 0x000001A2: funcName = "XamSetInactivityTimeFromConfig"
  elif id == 0x000001A3: funcName = "XamLoaderGetMediaInfo"
  elif id == 0x000001A4: funcName = "XamLoaderLaunchTitle"
  elif id == 0x000001A5: funcName = "XamLoaderLaunchTitleEx"
  elif id == 0x000001A6: funcName = "XamLoaderSetLaunchData"
  elif id == 0x000001A7: funcName = "XamLoaderGetLaunchDataSize"
  elif id == 0x000001A8: funcName = "XamLoaderGetLaunchData"
  elif id == 0x000001A9: funcName = "XamLoaderTerminateTitle"
  elif id == 0x000001AA: funcName = "XamLoaderGetDvdTrayState"
  elif id == 0x000001AB: funcName = "XamLoaderGetGameInfo"
  elif id == 0x000001AC: funcName = "XamLoaderLaunchTitleOnDvd"
  elif id == 0x000001AD: funcName = "XamLoaderSetSpindleSpeed"
  elif id == 0x000001AE: funcName = "XamTaskCreateQueue"
  elif id == 0x000001AF: funcName = "XamTaskSchedule"
  elif id == 0x000001B0: funcName = "XamTaskReschedule"
  elif id == 0x000001B1: funcName = "XamTaskCloseHandle"
  elif id == 0x000001B2: funcName = "XamTaskCancel"
  elif id == 0x000001B3: funcName = "XamTaskShouldExit"
  elif id == 0x000001B4: funcName = "XamTaskWaitOnCompletion"
  elif id == 0x000001B5: funcName = "XamTaskModify"
  elif id == 0x000001B6: funcName = "XamTaskGetCurrentTask"
  elif id == 0x000001B7: funcName = "XamTaskGetAttributes"
  elif id == 0x000001B8: funcName = "XamExecutingOnBehalfOfTitle"
  elif id == 0x000001B9: funcName = "XamInputSendStayAliveRequest"
  elif id == 0x000001BA: funcName = "XamInputGetUserVibrationLevel"
  elif id == 0x000001BB: funcName = "XamIsSystemTitleId"
  elif id == 0x000001BC: funcName = "XamLoaderIsTitleTerminatePending"
  elif id == 0x000001BD: funcName = "XamInputSetTextMessengerIndicator"
  elif id == 0x000001BE: funcName = "XamLoaderGetPriorTitleId"
  elif id == 0x000001BF: funcName = "XamIsXbox1TitleId"
  elif id == 0x000001C0: funcName = "XamInputSetKeyLocks"
  elif id == 0x000001C1: funcName = "XamInputGetKeyLocks"
  elif id == 0x000001C2: funcName = "XamTaskGetStatus"
  elif id == 0x000001C3: funcName = "XamGetRootObj"
  elif id == 0x000001C4: funcName = "XamDevAuthSetFault"
  elif id == 0x000001C5: funcName = "XamGetDefaultSystemImage"
  elif id == 0x000001C6: funcName = "XamGetWCNConfigFile"
  elif id == 0x000001C7: funcName = "XamSetPowerMode"
  elif id == 0x000001C8: funcName = "XamExecuteChallenge"
  elif id == 0x000001C9: funcName = "XamGetDefaultImage"
  elif id == 0x000001CA: funcName = "XamMuteSound"
  elif id == 0x000001CB: funcName = "XamGetOnlineSchema"
  elif id == 0x000001CC: funcName = "XamSetDashContext"
  elif id == 0x000001CD: funcName = "XamGetDashContext"
  elif id == 0x000001CE: funcName = "XamIsCurrentTitleDash"
  elif id == 0x000001CF: funcName = "XamGetCurrentTitleId"
  elif id == 0x000001D0: funcName = "XamSetCurrentTitleDash"
  elif id == 0x000001D1: funcName = "XamAllocHeapFreeSpace"
  elif id == 0x000001D2: funcName = "XamSetDashContextEx"
  elif id == 0x000001D3: funcName = "XamGetDashContextEx"
  elif id == 0x000001D4: funcName = "XamSetHudContext"
  elif id == 0x000001D5: funcName = "XamGetHudContext"
  elif id == 0x000001D6: funcName = "XCustomGetBannerImage"
  elif id == 0x000001D7: funcName = "Refresh"
  elif id == 0x000001D8: funcName = "XCustomSetAction"
  elif id == 0x000001D9: funcName = "XCustomGetLastActionPress"
  elif id == 0x000001DA: funcName = "XCustomSetDynamicActions"
  elif id == 0x000001DB: funcName = "XCustomBroadcastActionEvent"
  elif id == 0x000001DC: funcName = "XCustomGetLastActionPressEx"
  elif id == 0x000001DD: funcName = "XCustomRegisterDynamicActions"
  elif id == 0x000001DE: funcName = "XCustomUnregisterDynamicActions"
  elif id == 0x000001DF: funcName = "XCustomGetCurrentGamercard"
  elif id == 0x000001E0: funcName = "XamDbgPrint"
  elif id == 0x000001E1: funcName = "XamDbgSetOutputLevel"
  elif id == 0x000001E2: funcName = "XamDbgSetBreakLevel"
  elif id == 0x000001E3: funcName = "XamLoaderGetMediaInfoEx"
  elif id == 0x000001E4: funcName = "XamLoaderSetGameInfo"
  elif id == 0x000001E5: funcName = "XamFormatMessage"
  elif id == 0x000001E6: funcName = "XamUniSortCmpString"
  elif id == 0x000001E7: funcName = "XamFormatTimeString"
  elif id == 0x000001E8: funcName = "XamFormatDateString"
  elif id == 0x000001E9: funcName = "XamGetLocaleDateFormat"
  elif id == 0x000001EA: funcName = "XamAlloc"
  elif id == 0x000001EB: funcName = "XamAllocEx"
  elif id == 0x000001EC: funcName = "XamFree"
  elif id == 0x000001ED: funcName = "XamAllocSize"
  elif id == 0x000001EE: funcName = "XamAllocMountIPTVHeap"
  elif id == 0x000001EF: funcName = "XamAllocUnmountIPTVHeap"
  elif id == 0x000001F0: funcName = "XamAllocFreeIPTVHeap"
  elif id == 0x000001F1: funcName = "XamDeviceRemap"
  elif id == 0x000001F2: funcName = "XamLoaderGetClearCache"
  elif id == 0x000001F3: funcName = "XamLoaderSetClearCache"
  elif id == 0x000001F4: funcName = "XMsgInProcessCall"
  elif id == 0x000001F5: funcName = "XMsgCompleteIORequest"
  elif id == 0x000001F6: funcName = "XMsgSystemProcessCall"
  elif id == 0x000001F7: funcName = "XMsgStartIORequest"
  elif id == 0x000001F8: funcName = "XMsgCancelIORequest"
  elif id == 0x000001F9: funcName = "XMsgAcquireAsyncMessageFromOverlapped"
  elif id == 0x000001FA: funcName = "XMsgReleaseAsyncMessageToOverlapped"
  elif id == 0x000001FB: funcName = "XamGetOverlappedResult"
  elif id == 0x000001FC: funcName = "XMsgStartIORequestEx"
  elif id == 0x000001FD: funcName = "XamAppAllocateInterappWorkspace"
  elif id == 0x000001FE: funcName = "XamAppGetInterappWorkspace"
  elif id == 0x000001FF: funcName = "XamAppFreeInterappWorkspace"
  elif id == 0x00000200: funcName = "XamFeatureEnabled"
  elif id == 0x00000201: funcName = "XamFeatureEnforceImageBudget"
  elif id == 0x00000202: funcName = "XamFeatureSetMask"
  elif id == 0x00000203: funcName = "XamFeatureEnableDisable"
  elif id == 0x00000204: funcName = "XuiControlSetItemAssociation"
  elif id == 0x00000205: funcName = "XamGetTitleGlobalStorageValue"
  elif id == 0x00000206: funcName = "XamSetTitleGlobalStorageValue"
  elif id == 0x00000207: funcName = "XamUserValidateAvatarManifest"
  elif id == 0x00000208: funcName = "XamUserGetDeviceContext"
  elif id == 0x00000209: funcName = "XamUserLookupDevice"
  elif id == 0x0000020A: funcName = "XamUserGetXUID"
  elif id == 0x0000020B: funcName = "XamUserLogon"
  elif id == 0x0000020C: funcName = "XamUserGetGamerTag"
  elif id == 0x0000020D: funcName = "XamUserGetUserIndexMask"
  elif id == 0x0000020E: funcName = "XamUserGetName"
  elif id == 0x0000020F: funcName = "XamLookupCommonStringByIndex"
  elif id == 0x00000210: funcName = "XamUserGetSigninState"
  elif id == 0x00000211: funcName = "XamUserGetIndexFromXUID"
  elif id == 0x00000212: funcName = "XamUserCheckPrivilege"
  elif id == 0x00000213: funcName = "XamUserAreUsersFriends"
  elif id == 0x00000214: funcName = "XamSetUserPresetPresenceState"
  elif id == 0x00000215: funcName = "XamGetUserPresetPresenceState"
  elif id == 0x00000216: funcName = "XamUserGetUserFlagsFromXUID"
  elif id == 0x00000217: funcName = "XamUserGetMembershipTierFromXUID"
  elif id == 0x00000218: funcName = "XamUserGetOnlineCountryFromXUID"
  elif id == 0x00000219: funcName = "XamUserReadProfileSettings"
  elif id == 0x0000021A: funcName = "XamUserWriteProfileSettings"
  elif id == 0x0000021B: funcName = "XamUserGetMembershipTier"
  elif id == 0x0000021C: funcName = "XamUserGetUserFlags"
  elif id == 0x0000021D: funcName = "XamUserGetRequestedUserIndexMask"
  elif id == 0x0000021E: funcName = "XamUserIsGuest"
  elif id == 0x0000021F: funcName = "XamUserProfileSync"
  elif id == 0x00000220: funcName = "XamUserFlushLogonQueue"
  elif id == 0x00000221: funcName = "XamUserIsOnlineEnabled"
  elif id == 0x00000222: funcName = "XamUserGetCachedUserFlags"
  elif id == 0x00000223: funcName = "XamAreMixedAccountsSignedIn"
  elif id == 0x00000224: funcName = "XamUserLogonEx"
  elif id == 0x00000225: funcName = "XamSetUserShowMessengerFriends"
  elif id == 0x00000226: funcName = "XamGetUserShowMessengerFriends"
  elif id == 0x00000227: funcName = "XamUserGetSigninInfo"
  elif id == 0x00000228: funcName = "XamUserIsPartial"
  elif id == 0x00000229: funcName = "XamUserGetOnlineLanguageFromXUID"
  elif id == 0x0000022A: funcName = "XamUserReadProfileSettingsEx"
  elif id == 0x0000022B: funcName = "XamSystemUpdaterLogon"
  elif id == 0x0000022C: funcName = "XamUserGetUsersMissingAvatars"
  elif id == 0x0000022D: funcName = "XamIsChildAccountSignedIn"
  elif id == 0x0000022E: funcName = "XamUserPrefetchProfileSettings"
  elif id == 0x0000022F: funcName = "XamUserInvalidateProfileSetting"
  elif id == 0x00000230: funcName = "XamProfileCreate"
  elif id == 0x00000231: funcName = "XamProfileCreateEnumerator"
  elif id == 0x00000232: funcName = "XamProfileEnumerate"
  elif id == 0x00000233: funcName = "XamProfileDelete"
  elif id == 0x00000234: funcName = "XamProfileGetCreationStatus"
  elif id == 0x00000235: funcName = "XamProfileFindAccount"
  elif id == 0x00000236: funcName = "XamProfileRenameAccount"
  elif id == 0x00000237: funcName = "XamProfileOpen"
  elif id == 0x00000238: funcName = "XamProfileClose"
  elif id == 0x00000239: funcName = "XamProfileSaveAccountInfo"
  elif id == 0x0000023A: funcName = "XamProfileLoadAccountInfo"
  elif id == 0x0000023B: funcName = "XamProfileRecoverTitle"
  elif id == 0x0000023C: funcName = "XamProfileSaveWindowsLiveCredentials"
  elif id == 0x0000023D: funcName = "XamProfileLoadWindowsLiveCredentials"
  elif id == 0x0000023E: funcName = "XamProfileIsSaveWindowsLiveCredsEnabled"
  elif id == 0x0000023F: funcName = "XamProfileSetSaveWindowsLiveCredsEnabled"
  elif id == 0x00000240: funcName = "XamSetProfileReadTestHook"
  elif id == 0x00000241: funcName = "XamProfileGetLastSync"
  elif id == 0x00000242: funcName = "XamAccountRecoveryRecoverTitle"
  elif id == 0x00000243: funcName = "XamProfileControlPec"
  elif id == 0x00000244: funcName = "XamAppLoad"
  elif id == 0x00000245: funcName = "XamAppUnloadSelf"
  elif id == 0x00000246: funcName = "XamAppUnloadStack"
  elif id == 0x00000247: funcName = "XamSendMessageToLoadedApps"
  elif id == 0x00000248: funcName = "XamAppRequestLoad"
  elif id == 0x00000249: funcName = "XamAppUnrequestLoad"
  elif id == 0x0000024A: funcName = "XamNavigate"
  elif id == 0x0000024B: funcName = "XamRegisterSysApp"
  elif id == 0x0000024C: funcName = "XamUnregisterSysApp"
  elif id == 0x0000024D: funcName = "XamAppReinitialize"
  elif id == 0x0000024E: funcName = "XamCreateEnumeratorHandle"
  elif id == 0x0000024F: funcName = "XamGetPrivateEnumStructureFromHandle"
  elif id == 0x00000250: funcName = "XamEnumerate"
  elif id == 0x00000251: funcName = "XamLoadSysApp"
  elif id == 0x00000252: funcName = "XamUnloadSysApp"
  elif id == 0x00000253: funcName = "XamReloadSysApp"
  elif id == 0x00000254: funcName = "XamAppLoadPass2SysApps"
  elif id == 0x00000255: funcName = "XamProfileGetLiveLegalLocale"
  elif id == 0x00000256: funcName = "XamUserIsParentalControlled"
  elif id == 0x00000257: funcName = "XamContentLaunchImageFromFileInternal"
  elif id == 0x00000258: funcName = "XamContentCreate"
  elif id == 0x00000259: funcName = "XamContentCreateEx"
  elif id == 0x0000025A: funcName = "XamContentClose"
  elif id == 0x0000025B: funcName = "XamContentDelete"
  elif id == 0x0000025C: funcName = "XamContentCreateEnumerator"
  elif id == 0x0000025D: funcName = "XamContentCreateDeviceEnumerator"
  elif id == 0x0000025E: funcName = "XamContentGetDeviceData"
  elif id == 0x0000025F: funcName = "XamContentGetDeviceName"
  elif id == 0x00000260: funcName = "XamContentSetThumbnail"
  elif id == 0x00000261: funcName = "XamContentGetThumbnail"
  elif id == 0x00000262: funcName = "XamContentGetCreator"
  elif id == 0x00000263: funcName = "XamContentLaunchImage"
  elif id == 0x00000264: funcName = "XamContentGetAttributes"
  elif id == 0x00000265: funcName = "XamContentGetDeviceState"
  elif id == 0x00000266: funcName = "XamContentGetLicenseMask"
  elif id == 0x00000267: funcName = "XamContentFlush"
  elif id == 0x00000268: funcName = "XamContentResolve"
  elif id == 0x00000269: funcName = "XamContentOpenFile"
  elif id == 0x0000026A: funcName = "XamContentInstall"
  elif id == 0x0000026B: funcName = "XamContentLockUnlockPackageHeaders"
  elif id == 0x0000026C: funcName = "XamContentCopyInternal"
  elif id == 0x0000026D: funcName = "XamContentMoveInternal"
  elif id == 0x0000026E: funcName = "XamContentGetMetaDataInternal"
  elif id == 0x0000026F: funcName = "XamContentCreateEnumeratorInternal"
  elif id == 0x00000270: funcName = "XamContentDeleteInternal"
  elif id == 0x00000271: funcName = "XamContentCreateInternal"
  elif id == 0x00000272: funcName = "XamContentSetThumbnailInternal"
  elif id == 0x00000273: funcName = "XamContentLaunchImageInternal"
  elif id == 0x00000274: funcName = "XamContentWritePackageHeader"
  elif id == 0x00000275: funcName = "XamContentDismountAndClosePackage"
  elif id == 0x00000276: funcName = "XamContentResolveInternal"
  elif id == 0x00000277: funcName = "XamContentGetAttributesInternal"
  elif id == 0x00000278: funcName = "XamContentOpenFileInternal"
  elif id == 0x00000279: funcName = "XamContentAggregateCreateEnumerator"
  elif id == 0x0000027A: funcName = "XamContentCreateAndMountPackage"
  elif id == 0x0000027B: funcName = "XamContentOpenPackageFile"
  elif id == 0x0000027C: funcName = "XamContentMountPackage"
  elif id == 0x0000027D: funcName = "XamContentFlushPackage"
  elif id == 0x0000027E: funcName = "XamContentClosePackageFile"
  elif id == 0x0000027F: funcName = "XamContentDuplicateFileHandle"
  elif id == 0x00000280: funcName = "XamGetExecutionId"
  elif id == 0x00000281: funcName = "XamGetGameRatings"
  elif id == 0x00000282: funcName = "XamGetSystemVersion"
  elif id == 0x00000283: funcName = "XamContentGetLocalizedString"
  elif id == 0x00000284: funcName = "XamContentGetDefaultDevice"
  elif id == 0x00000285: funcName = "XamContentInstallInternal"
  elif id == 0x00000286: funcName = "XamContentSetMediaMetaDataInternal"
  elif id == 0x00000287: funcName = "XamContentGetDeviceSerialNumber"
  elif id == 0x00000288: funcName = "XamContentGetMountedPackageByRootName"
  elif id == 0x00000289: funcName = "XamContentRegisterChangeCallback"
  elif id == 0x0000028A: funcName = "XamNotifyCreateListener"
  elif id == 0x0000028B: funcName = "XNotifyGetNext"
  elif id == 0x0000028C: funcName = "XNotifyPositionUI"
  elif id == 0x0000028D: funcName = "XNotifyDelayUI"
  elif id == 0x0000028E: funcName = "XNotifyBroadcast"
  elif id == 0x0000028F: funcName = "XNotifyRegisterArea"
  elif id == 0x00000290: funcName = "XNotifyQueueUI"
  elif id == 0x00000291: funcName = "XamNotifyCreateListenerInternal"
  elif id == 0x00000292: funcName = "XNotifyUISetOptions"
  elif id == 0x00000293: funcName = "XNotifyUIGetOptions"
  elif id == 0x00000294: funcName = "XamContentLaunchImageInternalEx"
  elif id == 0x00000295: funcName = "XamShutdown"
  elif id == 0x00000296: funcName = "XamAllocDevkitHeapAvailable"
  elif id == 0x00000297: funcName = "XamNotifyCreateListenerRangeInternal"
  elif id == 0x00000298: funcName = "XNotifyQueueUIEx"
  elif id == 0x00000299: funcName = "XamAppRequestLoadEx"
  elif id == 0x0000029A: funcName = "XuiPNGTextureLoader"
  elif id == 0x0000029B: funcName = "XuiRenderGetXuiDevice"
  elif id == 0x0000029C: funcName = "XuiDefault_False"
  elif id == 0x0000029D: funcName = "XamUserGetReportingInfo"
  elif id == 0x0000029E: funcName = "XamUpdateStart"
  elif id == 0x0000029F: funcName = "XamUpdateGetProgress"
  elif id == 0x000002A0: funcName = "XamUpdateGetExtenderInstance"
  elif id == 0x000002A1: funcName = "XamUpdateFinish"
  elif id == 0x000002A2: funcName = "XamUpdateAttachExtenderInstance"
  elif id == 0x000002A3: funcName = "XamUpdateAllocateExtenderBuffer"
  elif id == 0x000002A4: funcName = "XamRestartTitleLoadAfterUpdate"
  elif id == 0x000002A5: funcName = "XamUIThreadDisableFontPatching"
  elif id == 0x000002A6: funcName = "XamUpdateGetBaseSystemVersion"
  elif id == 0x000002A7: funcName = "XamUpdateGetCurrentSystemVersion"
  elif id == 0x000002A8: funcName = "XamUIThreadEnableFontPatching"
  elif id == 0x000002A9: funcName = "XamTerminateTitleForUpdate"
  elif id == 0x000002AA: funcName = "XamSystemUpdateInstallLocal"
  elif id == 0x000002AB: funcName = "XamUpdateChainPass3FromPass2"
  elif id == 0x000002AD: funcName = "XamInputGetCapabilitiesEx"
  elif id == 0x000002AE: funcName = "XamUserIsUnsafeProgrammingAllowed"
  elif id == 0x000002AF: funcName = "XamDevAuthSetFaultEx"
  elif id == 0x000002B0: funcName = "XamUpdateGetData"
  elif id == 0x000002B1: funcName = "XamCacheIntegrityCheck"
  elif id == 0x000002B2: funcName = "XamCacheStoreFile"
  elif id == 0x000002B3: funcName = "XamCacheFetchFile"
  elif id == 0x000002B4: funcName = "XamCacheOpenFile"
  elif id == 0x000002B5: funcName = "XamCacheCloseFile"
  elif id == 0x000002B6: funcName = "XamGetCachedTitleName"
  elif id == 0x000002B7: funcName = "XamCacheReset"
  elif id == 0x000002B8: funcName = "XamGetCachedGamerTag"
  elif id == 0x000002B9: funcName = "XamGetCachedGamerTagW"
  elif id == 0x000002BA: funcName = "XamCacheDeleteFile"
  elif id == 0x000002BB: funcName = "XamCacheRenameFile"
  elif id == 0x000002BC: funcName = "XamShowSigninUI"
  elif id == 0x000002BD: funcName = "XamShowSigninUIEx"
  elif id == 0x000002BE: funcName = "XamShowSigninUIp"
  elif id == 0x000002BF: funcName = "XamShowFriendsUI"
  elif id == 0x000002C0: funcName = "XamShowMessagesUI"
  elif id == 0x000002C1: funcName = "XamShowKeyboardUI"
  elif id == 0x000002C2: funcName = "XamShowQuickChatUI"
  elif id == 0x000002C3: funcName = "XamShowVoiceMailUI"
  elif id == 0x000002C4: funcName = "XamShowGamerCardUI"
  elif id == 0x000002C5: funcName = "XamShowAchievementsUI"
  elif id == 0x000002C6: funcName = "XamShowPlayerReviewUI"
  elif id == 0x000002C7: funcName = "XamShowMarketplaceUI"
  elif id == 0x000002C8: funcName = "XamShowPlayersUI"
  elif id == 0x000002C9: funcName = "XamShowUpdaterUI"
  elif id == 0x000002CA: funcName = "XamShowMessageBoxUI"
  elif id == 0x000002CB: funcName = "XamShowDeviceSelectorUI"
  elif id == 0x000002CC: funcName = "XamShowMessageComposeUI"
  elif id == 0x000002CD: funcName = "XamShowGameInviteUI"
  elif id == 0x000002CE: funcName = "XamShowFriendRequestUI"
  elif id == 0x000002CF: funcName = "XamShowCreateProfileUI"
  elif id == 0x000002D0: funcName = "XamShowGamesUI"
  elif id == 0x000002D1: funcName = "XamShowLiveSignupUI"
  elif id == 0x000002D2: funcName = "XamShowFriendsUIp"
  elif id == 0x000002D3: funcName = "XamShowComplaintUI"
  elif id == 0x000002D4: funcName = "XamShowReputationUI"
  elif id == 0x000002D5: funcName = "XamShowGamerCardUIForXUID"
  elif id == 0x000002D6: funcName = "XamShowForcedNameChangeUI"
  elif id == 0x000002D7: funcName = "XamShowLiveUpsellUI"
  elif id == 0x000002D8: funcName = "XamShowPasscodeVerifyUI"
  elif id == 0x000002D9: funcName = "XamShowDirtyDiscErrorUI"
  elif id == 0x000002DA: funcName = "XamShowSignupCreditCardUI"
  elif id == 0x000002DB: funcName = "XamShowPrivateChatInviteUI"
  elif id == 0x000002DC: funcName = "XamShowMessageBoxUIEx"
  elif id == 0x000002DD: funcName = "XamShowRecentMessageUI"
  elif id == 0x000002DE: funcName = "XamShowRecentMessageUIEx"
  elif id == 0x000002DF: funcName = "XamShowMessagesUIEx"
  elif id == 0x000002E0: funcName = "XamShowAchievementDetailsUI"
  elif id == 0x000002E1: funcName = "XamShowPersonalizationUI"
  elif id == 0x000002E2: funcName = "XamShowChangeGamerTileUI"
  elif id == 0x000002E3: funcName = "XamShowVoiceSettingsUI"
  elif id == 0x000002E4: funcName = "XamShowVideoChatInviteUI"
  elif id == 0x000002E5: funcName = "XamShowCustomMessageComposeUI"
  elif id == 0x000002E6: funcName = "XamShowCustomPlayerListUI"
  elif id == 0x000002E7: funcName = "XamShowMarketplaceDownloadItemsUI"
  elif id == 0x000002E8: funcName = "XamShowMarketplaceUIEx"
  elif id == 0x000002E9: funcName = "XamShowMessageBox"
  elif id == 0x000002EA: funcName = "XamIsSysUiInvokedByXenonButton"
  elif id == 0x000002EB: funcName = "XamIsSysUiInvokedByTitle"
  elif id == 0x000002EC: funcName = "XamIsUIActive"
  elif id == 0x000002ED: funcName = "XamSysUiDisableAutoClose"
  elif id == 0x000002EE: funcName = "XamUserCreateAchievementEnumerator"
  elif id == 0x000002EF: funcName = "XamReadTile"
  elif id == 0x000002F0: funcName = "XamWriteGamerTile"
  elif id == 0x000002F1: funcName = "XamWriteTile"
  elif id == 0x000002F2: funcName = "XamReadImage"
  elif id == 0x000002F3: funcName = "XamUserCreateTitlesPlayedEnumerator"
  elif id == 0x000002F4: funcName = "XamDecompressPNGToTexture"
  elif id == 0x000002F5: funcName = "XamReadTileToTexture"
  elif id == 0x000002F6: funcName = "XamReadString"
  elif id == 0x000002F7: funcName = "XamUserCreateStatsEnumerator"
  elif id == 0x000002F8: funcName = "XamPrepareGamerTiles"
  elif id == 0x000002F9: funcName = "XamClearTitle"
  elif id == 0x000002FA: funcName = "XamReadStrings"
  elif id == 0x000002FB: funcName = "XamWriteGamerTileEx"
  elif id == 0x000002FC: funcName = "XamReadTileEx"
  elif id == 0x000002FD: funcName = "XamReadTileToTextureEx"
  elif id == 0x000002FE: funcName = "XamShowMessengerUI"
  elif id == 0x000002FF: funcName = "XamShowKeyboardUIMessenger"
  elif id == 0x00000300: funcName = "XamShowLiveUpsellUIEx"
  elif id == 0x00000301: funcName = "XamShowJoinSessionInProgressUI"
  elif id == 0x00000302: funcName = "XamShowGraduateUserUI"
  elif id == 0x00000303: funcName = "XamShowGamerCardUIForXUIDp"
  elif id == 0x00000304: funcName = "XamShowGuideUI"
  elif id == 0x00000305: funcName = "XamShowPartyUI"
  elif id == 0x00000306: funcName = "XamShowPartyInviteUI"
  elif id == 0x00000307: funcName = "XamUserAddRecentPlayer"
  elif id == 0x00000308: funcName = "XamUserUpdateRecentPlayer"
  elif id == 0x00000309: funcName = "XamUserCreatePlayerEnumerator"
  elif id == 0x0000030A: funcName = "XamParseGamerTileKey"
  elif id == 0x0000030B: funcName = "XamShowCommunitySessionsUI"
  elif id == 0x0000030C: funcName = "XamVoiceCreate"
  elif id == 0x0000030D: funcName = "XamVoiceHeadsetPresent"
  elif id == 0x0000030E: funcName = "XamVoiceSubmitPacket"
  elif id == 0x0000030F: funcName = "XamVoiceClose"
  elif id == 0x00000310: funcName = "XamVoiceGetBatteryStatus"
  elif id == 0x00000311: funcName = "Refresh"
  elif id == 0x00000312: funcName = "Refresh"
  elif id == 0x00000313: funcName = "XamShowJoinSessionByIdInProgressUI"
  elif id == 0x00000314: funcName = "XamShowPartyJoinInProgressUI"
  elif id == 0x00000315: funcName = "XamBuildSharedSystemResourceLocator"
  elif id == 0x00000316: funcName = "XamSessionCreateHandle"
  elif id == 0x00000317: funcName = "XamSessionRefObjByHandle"
  elif id == 0x00000318: funcName = "XamVoiceGetMicArrayStatus"
  elif id == 0x00000319: funcName = "XamVoiceSetAudioCaptureRoutine"
  elif id == 0x0000031A: funcName = "XamVoiceGetDirectionalData"
  elif id == 0x0000031B: funcName = "XamBuildResourceLocator"
  elif id == 0x0000031C: funcName = "XamBuildSharedSystemResourceLocator"
  elif id == 0x0000031D: funcName = "XamBuildGamercardResourceLocator"
  elif id == 0x0000031E: funcName = "XamBuildDynamicResourceLocator"
  elif id == 0x0000031F: funcName = "XamBuildXamResourceLocator"
  elif id == 0x00000320: funcName = "XuiAnimRun"
  elif id == 0x00000321: funcName = "XuiApplyLocale"
  elif id == 0x00000322: funcName = "XuiBubbleMessage"
  elif id == 0x00000323: funcName = "XuiControlIsBackButton"
  elif id == 0x00000324: funcName = "XuiControlIsNavButton"
  elif id == 0x00000325: funcName = "XuiCreateObject"
  elif id == 0x00000326: funcName = "XuiDestroyObject"
  elif id == 0x00000327: funcName = "XuiDynamicCast"
  elif id == 0x00000328: funcName = "XuiElementAddChild"
  elif id == 0x00000329: funcName = "XuiElementFindNamedFrame"
  elif id == 0x0000032A: funcName = "XuiElementGetChildById"
  elif id == 0x0000032B: funcName = "XuiElementGetFirstChild"
  elif id == 0x0000032C: funcName = "XuiElementGetFocus"
  elif id == 0x0000032D: funcName = "XuiElementGetFocusUser"
  elif id == 0x0000032E: funcName = "XuiElementGetId"
  elif id == 0x0000032F: funcName = "XuiElementGetLastChild"
  elif id == 0x00000330: funcName = "XuiElementGetNext"
  elif id == 0x00000331: funcName = "XuiElementGetParent"
  elif id == 0x00000332: funcName = "XuiElementGetUserFocus"
  elif id == 0x00000333: funcName = "XuiElementInitFocus"
  elif id == 0x00000334: funcName = "XuiElementInitUserFocus"
  elif id == 0x00000335: funcName = "XuiElementPlayTimeline"
  elif id == 0x00000336: funcName = "XuiElementSetBounds"
  elif id == 0x00000337: funcName = "XuiElementSetFocus"
  elif id == 0x00000338: funcName = "XuiElementSetUserFocus"
  elif id == 0x00000339: funcName = "XuiElementTreeGetFocus"
  elif id == 0x0000033A: funcName = "XuiFindClass"
  elif id == 0x0000033B: funcName = "XuiFreeStringTable"
  elif id == 0x0000033C: funcName = "XuiGetBaseObject"
  elif id == 0x0000033D: funcName = "XuiGetClass"
  elif id == 0x0000033E: funcName = "XuiGetObjectClass"
  elif id == 0x0000033F: funcName = "XuiGetOuter"
  elif id == 0x00000340: funcName = "XuiInit"
  elif id == 0x00000341: funcName = "XuiLoadFromBinary"
  elif id == 0x00000342: funcName = "XuiLoadStringTableFromFile"
  elif id == 0x00000343: funcName = "XuiVisualGetBasePath"
  elif id == 0x00000344: funcName = "XuiLookupStringTable"
  elif id == 0x00000345: funcName = "XuiNavButtonGetPressPath"
  elif id == 0x00000346: funcName = "XuiObjectFromHandle"
  elif id == 0x00000347: funcName = "XuiObjectGetProperty"
  elif id == 0x00000348: funcName = "XuiObjectGetPropertyId"
  elif id == 0x00000349: funcName = "XuiProcessInput"
  elif id == 0x0000034A: funcName = "XuiRegisterClass"
  elif id == 0x0000034B: funcName = "XuiRenderBegin"
  elif id == 0x0000034C: funcName = "XuiRenderCreateDC"
  elif id == 0x0000034D: funcName = "XuiRenderDCDeviceChanged"
  elif id == 0x0000034E: funcName = "XuiRenderDestroyDC"
  elif id == 0x0000034F: funcName = "XuiRenderEnd"
  elif id == 0x00000350: funcName = "XuiRenderGetBackBufferSize"
  elif id == 0x00000351: funcName = "XuiRenderInit"
  elif id == 0x00000352: funcName = "XuiRenderInitShared"
  elif id == 0x00000353: funcName = "XuiRenderPresent"
  elif id == 0x00000354: funcName = "XuiRenderSetViewTransform"
  elif id == 0x00000355: funcName = "XuiRenderUninit"
  elif id == 0x00000356: funcName = "XamShowNuiGuideUI"
  elif id == 0x00000357: funcName = "XuiSceneCreate"
  elif id == 0x00000358: funcName = "XuiSceneNavigateBack"
  elif id == 0x00000359: funcName = "XuiSceneNavigateFirst"
  elif id == 0x0000035A: funcName = "XuiSceneNavigateForward"
  elif id == 0x0000035B: funcName = "XuiScenePlayBackFromTransition"
  elif id == 0x0000035C: funcName = "XuiScenePlayBackToTransition"
  elif id == 0x0000035D: funcName = "XuiScenePlayFromTransition"
  elif id == 0x0000035E: funcName = "XuiScenePlayToTransition"
  elif id == 0x0000035F: funcName = "XuiSendMessage"
  elif id == 0x00000360: funcName = "XuiSetLocale"
  elif id == 0x00000361: funcName = "XuiUninit"
  elif id == 0x00000362: funcName = "XuiUnregisterClass"
  elif id == 0x00000363: funcName = "XuiTextElementSetText"
  elif id == 0x00000364: funcName = "XuiSetTimer"
  elif id == 0x00000365: funcName = "XuiTimersRun"
  elif id == 0x00000366: funcName = "XuiTextElementGetText"
  elif id == 0x00000367: funcName = "XuiVisualSetBasePath"
  elif id == 0x00000368: funcName = "XuiHandleIsValid"
  elif id == 0x00000369: funcName = "XuiAlloc"
  elif id == 0x0000036A: funcName = "XuiFree"
  elif id == 0x0000036B: funcName = "XuiDefault_True"
  elif id == 0x0000036C: funcName = "XuiDefault_EmptyString"
  elif id == 0x0000036D: funcName = "XuiDefault_IntegerZero"
  elif id == 0x0000036E: funcName = "XuiCopyString"
  elif id == 0x0000036F: funcName = "XuiRealloc"
  elif id == 0x00000370: funcName = "XuiControlPlayOptionalVisual"
  elif id == 0x00000371: funcName = "XuiKillTimer"
  elif id == 0x00000372: funcName = "XuiElementEnableInput"
  elif id == 0x00000373: funcName = "XuiElementInputEnabled"
  elif id == 0x00000374: funcName = "XuiIsInstanceOf"
  elif id == 0x00000375: funcName = "XuiResourceComposeLocator"
  elif id == 0x00000376: funcName = "XuiResourceLocatorIsAbsolute"
  elif id == 0x00000377: funcName = "XuiBroadcastMessage"
  elif id == 0x00000378: funcName = "XuiElementDisallowRecursiveTimelineControl"
  elif id == 0x00000379: funcName = "XUIElementPropVal_Construct"
  elif id == 0x0000037A: funcName = "XUIElementPropVal_Destruct"
  elif id == 0x0000037B: funcName = "XUIElementPropVal_SetString"
  elif id == 0x0000037C: funcName = "XuiObjectSetProperty"
  elif id == 0x0000037D: funcName = "XuiElementGetOpacity"
  elif id == 0x0000037E: funcName = "XuiElementSetOpacity"
  elif id == 0x0000037F: funcName = "XuiEditSetTextLimit"
  elif id == 0x00000380: funcName = "XuiEditGetTextLimit"
  elif id == 0x00000381: funcName = "XuiSliderSetValue"
  elif id == 0x00000382: funcName = "XuiSliderGetValue"
  elif id == 0x00000383: funcName = "XuiSliderSetRange"
  elif id == 0x00000384: funcName = "XuiElementUnlink"
  elif id == 0x00000385: funcName = "XuiElementInsertChild"
  elif id == 0x00000386: funcName = "XuiSceneNavigateBackToFirst"
  elif id == 0x00000387: funcName = "XuiProgressBarSetRange"
  elif id == 0x00000388: funcName = "XuiProgressBarSetValue"
  elif id == 0x00000389: funcName = "XuiProgressBarGetValue"
  elif id == 0x0000038A: funcName = "XuiControlAttachVisual"
  elif id == 0x0000038B: funcName = "XuiCreateTextureBrush"
  elif id == 0x0000038C: funcName = "XuiDestroyBrush"
  elif id == 0x0000038D: funcName = "XUIElementPropVal_SetColorFromUint"
  elif id == 0x0000038E: funcName = "XuiFigureSetFill"
  elif id == 0x0000038F: funcName = "XuiSliderGetRange"
  elif id == 0x00000390: funcName = "XuiFigureSetTexture"
  elif id == 0x00000391: funcName = "XuiControlGetItemAssociation"
  elif id == 0x00000392: funcName = "XuiResourceLoadAll"
  elif id == 0x00000393: funcName = "XuiImageElementSetImagePath"
  elif id == 0x00000394: funcName = "XuiImageElementGetImagePath"
  elif id == 0x00000395: funcName = "XuiControlGetVisual"
  elif id == 0x00000396: funcName = "XuiControlGetNavigation"
  elif id == 0x00000397: funcName = "XuiLookupStringTableByIndex"
  elif id == 0x00000398: funcName = "XUIElementPropVal_SetBool"
  elif id == 0x00000399: funcName = "XuiElementHasFocus"
  elif id == 0x0000039A: funcName = "XUIElementPropVal_SetUint"
  elif id == 0x0000039B: funcName = "XUIElementPropVal_Clear"
  elif id == 0x0000039C: funcName = "XuiEditSetTextFormatInfo"
  elif id == 0x0000039D: funcName = "XuiCreateSolidBrush"
  elif id == 0x0000039E: funcName = "XuiSceneInterruptTransitions"
  elif id == 0x0000039F: funcName = "XuiResourceOpen"
  elif id == 0x000003A0: funcName = "XuiResourceRead"
  elif id == 0x000003A1: funcName = "XuiResourceClose"
  elif id == 0x000003A2: funcName = "XuiVisualCreateInstance"
  elif id == 0x000003A3: funcName = "XuiElementGetTimeline"
  elif id == 0x000003A4: funcName = "GetCodecVersion"
  elif id == 0x000003A5: funcName = "XuiElementIsDescendant"
  elif id == 0x000003A6: funcName = "XuiSetMessageFilter"
  elif id == 0x000003A7: funcName = "XuiAttachTextureBrush"
  elif id == 0x000003A8: funcName = "XuiElementBeginRender"
  elif id == 0x000003A9: funcName = "XuiElementEndRender"
  elif id == 0x000003AA: funcName = "XuiDrawShape"
  elif id == 0x000003AB: funcName = "XuiSelectBrushEx"
  elif id == 0x000003AC: funcName = "XuiFigureGetShape"
  elif id == 0x000003AD: funcName = "XuiFillRect"
  elif id == 0x000003AE: funcName = "XuiVec2TransformCoord"
  elif id == 0x000003AF: funcName = "XuiMatrixMultiply"
  elif id == 0x000003B0: funcName = "XuiElementGetXForm"
  elif id == 0x000003B1: funcName = "XuiElementSetPosition"
  elif id == 0x000003B2: funcName = "XuiSelectBrush"
  elif id == 0x000003B3: funcName = "XuiElementRenderChildren"
  elif id == 0x000003B4: funcName = "XuiFreeUnusedTextures"
  elif id == 0x000003B5: funcName = "XuiListEnableItemOverride"
  elif id == 0x000003B6: funcName = "XuiListGetDefaultItemSize"
  elif id == 0x000003B7: funcName = "XuiResourceSeek"
  elif id == 0x000003B8: funcName = "XuiElementDiscardResources"
  elif id == 0x000003B9: funcName = "XuiTabSceneGoto"
  elif id == 0x000003BA: funcName = "XuiTabSceneGetCurrentTab"
  elif id == 0x000003BB: funcName = "XamShowWhatsOnUI"
  elif id == 0x000003BC: funcName = "XamShowEditProfileUI"
  elif id == 0x000003BD: funcName = "XamShowStorePickerUI"
  elif id == 0x000003BE: funcName = "XamShowTermsOfUseUI"
  elif id == 0x000003BF: funcName = "XamShowJoinPartyUI"
  elif id == 0x000003C0: funcName = "XamShowWordRegisterUI"
  elif id == 0x000003C1: funcName = "XamOverrideHudOpenType"
  elif id == 0x000003C2: funcName = "XamShowAchievementsUIEx"
  elif id == 0x000003C3: funcName = "XamUserGetUserTenure"
  elif id == 0x000003C4: funcName = "XamUserGetSubscriptionType"
  elif id == 0x000003C5: funcName = "XamShowGameVoiceChannelUI"
  elif id == 0x000003C6: funcName = "XamShowAvatarAwardsUI"
  elif id == 0x000003C7: funcName = "XamShowAvatarAwardGamesUI"
  elif id == 0x000003C8: funcName = "XamShowVideoRichPresenceUI"
  elif id == 0x000003C9: funcName = "XamHudGetUserIndex"
  elif id == 0x000003CA: funcName = "XGetAudioFlags"
  elif id == 0x000003CB: funcName = "XGetAVPack"
  elif id == 0x000003CC: funcName = "XGetGameRegion"
  elif id == 0x000003CD: funcName = "XGetLanguage"
  elif id == 0x000003CE: funcName = "XapipGetLocale"
  elif id == 0x000003CF: funcName = "XGetVideoFlags"
  elif id == 0x000003D0: funcName = "XGetVideoStandard"
  elif id == 0x000003D1: funcName = "XGetVideoMode"
  elif id == 0x000003D2: funcName = "XamGetLanguage"
  elif id == 0x000003D3: funcName = "XUITimeline_Run"
  elif id == 0x000003D4: funcName = "XamSetAutomation"
  elif id == 0x000003D5: funcName = "XAutomationpBindController"
  elif id == 0x000003D6: funcName = "XAutomationpUnbindController"
  elif id == 0x000003D7: funcName = "XAutomationpInputXenonButton"
  elif id == 0x000003D8: funcName = "XAutomationpInputPress"
  elif id == 0x000003D9: funcName = "XAutomationpInputSetState"
  elif id == 0x000003DA: funcName = "XamEnableOverdraw"
  elif id == 0x000003DB: funcName = "g_XuiAutomation"
  elif id == 0x000003DC: funcName = "XamVoiceGetMicArrayAudio"
  elif id == 0x000003DD: funcName = "XampSystemInput"
  elif id == 0x000003DE: funcName = "XamInputControl"
  elif id == 0x000003DF: funcName = "XuiElementGetPosition"
  elif id == 0x000003E0: funcName = "XamIsMessageBoxActive"
  elif id == 0x000003E1: funcName = "XamIsBackgroundSceneInTransition"
  elif id == 0x000003E2: funcName = "XuiElementTreeHasFocus"
  elif id == 0x000003E3: funcName = "XuiFigureClose"
  elif id == 0x000003E4: funcName = "GamerCardStartup"
  elif id == 0x000003E5: funcName = "GamerCardCleanup"
  elif id == 0x000003E6: funcName = "GamerCardRegisterControls"
  elif id == 0x000003E7: funcName = "GamerCardUnregisterControls"
  elif id == 0x000003E8: funcName = "RtlFindFirstFile"
  elif id == 0x000003E9: funcName = "RtlFindNextFile"
  elif id == 0x000003EA: funcName = "RtlGetModuleFileName"
  elif id == 0x000003EB: funcName = "RtlOutputDebugString"
  elif id == 0x000003EC: funcName = "RtlRemoveDirectory"
  elif id == 0x000003ED: funcName = "RtlSleep"
  elif id == 0x000003EE: funcName = "RtlGetLastError"
  elif id == 0x000003EF: funcName = "RtlSetLastError"
  elif id == 0x000003F0: funcName = "RtlSetLastNTError"
  elif id == 0x000003F1: funcName = "RtlDebugPrint"
  elif id == 0x000003F2: funcName = "RtlDebugError"
  elif id == 0x000003F3: funcName = "XDebugWarning"
  elif id == 0x000003F4: funcName = "RtlDebugTrace"
  elif id == 0x000003F5: funcName = "RtlDebugEntry"
  elif id == 0x000003F6: funcName = "RtlDebugExit"
  elif id == 0x000003F7: funcName = "RtlGetAttributesOnHeapAlloc"
  elif id == 0x000003F8: funcName = "RtlSetAttributesOnHeapAlloc"
  elif id == 0x000003F9: funcName = "XuiFigureSetShape"
  elif id == 0x000003FA: funcName = "RtlCreateHeap"
  elif id == 0x000003FB: funcName = "RtlDestroyHeap"
  elif id == 0x000003FC: funcName = "RtlAllocateHeap"
  elif id == 0x000003FD: funcName = "RtlAllocateHeapSlowly"
  elif id == 0x000003FE: funcName = "RtlReAllocateHeap"
  elif id == 0x000003FF: funcName = "RtlFreeHeap"
  elif id == 0x00000400: funcName = "RtlFreeHeapSlowly"
  elif id == 0x00000401: funcName = "RtlSizeHeap"
  elif id == 0x00000402: funcName = "RtlZeroHeap"
  elif id == 0x00000403: funcName = "RtlDebugWalkHeap"
  elif id == 0x00000404: funcName = "RtlWalkHeap"
  elif id == 0x00000405: funcName = "RtlLockHeap"
  elif id == 0x00000406: funcName = "RtlUnlockHeap"
  elif id == 0x00000407: funcName = "RtlValidateHeap"
  elif id == 0x00000408: funcName = "RtlDebugCompactHeap"
  elif id == 0x00000409: funcName = "RtlCompactHeap"
  elif id == 0x0000040A: funcName = "XamAppSetTestOption"
  elif id == 0x0000040B: funcName = "XamAppReportError"
  elif id == 0x0000040C: funcName = "XamIsNuiUIActive"
  elif id == 0x0000040D: funcName = "XamVerifyPasscode"
  elif id == 0x0000040E: funcName = "OutputDebugStringA"
  elif id == 0x0000040F: funcName = "DebugBreak"
  elif id == 0x00000410: funcName = "GetCurrentThreadId"
  elif id == 0x00000411: funcName = "XDebugError"
  elif id == 0x00000412: funcName = "XDebugWarning"
  elif id == 0x00000413: funcName = "RtlDebugSetLevel"
  elif id == 0x00000414: funcName = "CloseHandle"
  elif id == 0x00000415: funcName = "GetTickCount"
  elif id == 0x00000416: funcName = "GetLastError"
  elif id == 0x00000417: funcName = "SetFilePointer"
  elif id == 0x00000418: funcName = "SetFilePointerEx"
  elif id == 0x00000419: funcName = "SetLastError"
  elif id == 0x0000041A: funcName = "MultiByteToWideChar"
  elif id == 0x0000041B: funcName = "WideCharToMultiByte"
  elif id == 0x0000041C: funcName = "ReadFile"
  elif id == 0x0000041D: funcName = "FlushFileBuffers"
  elif id == 0x0000041E: funcName = "WriteFile"
  elif id == 0x0000041F: funcName = "OutputDebugStringW"
  elif id == 0x00000420: funcName = "SetEvent"
  elif id == 0x00000421: funcName = "XapiFormatTimeOut"
  elif id == 0x00000422: funcName = "CreateMutexA"
  elif id == 0x00000423: funcName = "OpenMutexA"
  elif id == 0x00000424: funcName = "ReleaseMutex"
  elif id == 0x00000425: funcName = "WaitForSingleObject"
  elif id == 0x00000426: funcName = "WaitForSingleObjectEx"
  elif id == 0x00000427: funcName = "GetFileSize"
  elif id == 0x00000428: funcName = "GetFileSizeEx"
  elif id == 0x00000429: funcName = "XapiDirectoryInformationToFindData"
  elif id == 0x0000042A: funcName = "XapiFormatObjectAttributes"
  elif id == 0x0000042B: funcName = "ResetEvent"
  elif id == 0x0000042C: funcName = "wsprintfA"
  elif id == 0x0000042D: funcName = "wsprintfW"
  elif id == 0x0000042E: funcName = "GetOverlappedResult"
  elif id == 0x0000042F: funcName = "QueryPerformanceCounter"
  elif id == 0x00000430: funcName = "QueryPerformanceFrequency"
  elif id == 0x00000431: funcName = "LocalAlloc"
  elif id == 0x00000432: funcName = "LocalFree"
  elif id == 0x00000433: funcName = "RaiseException"
  elif id == 0x00000434: funcName = "RtlUniform"
  elif id == 0x00000435: funcName = "RtlRandom"
  elif id == 0x00000436: funcName = "Sleep"
  elif id == 0x00000437: funcName = "SleepEx"
  elif id == 0x00000438: funcName = "XMemSet"
  elif id == 0x00000439: funcName = "XRegisterThreadNotifyRoutine"
  elif id == 0x0000043A: funcName = "XGetOverlappedExtendedError"
  elif id == 0x0000043B: funcName = "XGetOverlappedResult"
  elif id == 0x0000043C: funcName = "CreateThread"
  elif id == 0x0000043D: funcName = "ResumeThread"
  elif id == 0x0000043E: funcName = "ExitThread"
  elif id == 0x0000043F: funcName = "GetTimeZoneInformation"
  elif id == 0x00000440: funcName = "GetSystemTimeAsFileTime"
  elif id == 0x00000441: funcName = "SystemTimeToFileTime"
  elif id == 0x00000442: funcName = "FileTimeToSystemTime"
  elif id == 0x00000443: funcName = "GetSystemTime"
  elif id == 0x00000444: funcName = "GetLocalTime"
  elif id == 0x00000445: funcName = "CreateDirectoryA"
  elif id == 0x00000446: funcName = "CreateEventA"
  elif id == 0x00000447: funcName = "CreateFileA"
  elif id == 0x00000448: funcName = "DeleteFileA"
  elif id == 0x00000449: funcName = "FindFirstFileA"
  elif id == 0x0000044A: funcName = "FindNextFileA"
  elif id == 0x0000044B: funcName = "GetFileAttributesA"
  elif id == 0x0000044C: funcName = "XamLoaderGetCurrentTitleD3DVersion"
  elif id == 0x0000044D: funcName = "GetFileAttributesExA"
  elif id == 0x0000044E: funcName = "GetModuleHandleA"
  elif id == 0x0000044F: funcName = "GetDiskFreeSpaceExA"
  elif id == 0x00000450: funcName = "CopyFileA"
  elif id == 0x00000451: funcName = "SetEndOfFile"
  elif id == 0x00000452: funcName = "XamFamilyAddParentalExemptionToList"
  elif id == 0x00000453: funcName = "XamFamilyIsParentalValidationRequired"
  elif id == 0x00000454: funcName = "PIXBeginCapture"
  elif id == 0x00000455: funcName = "PIXEndCapture"
  elif id == 0x00000456: funcName = "PIXAddCounter"
  elif id == 0x00000457: funcName = "PIXGetGPUSlot"
  elif id == 0x00000458: funcName = "SetWaitableTimer"
  elif id == 0x00000459: funcName = "CancelWaitableTimer"
  elif id == 0x0000045A: funcName = "CreateWaitableTimerA"
  elif id == 0x0000045B: funcName = "DuplicateHandle"
  elif id == 0x0000045C: funcName = "XapipCreateThread"
  elif id == 0x0000045D: funcName = "lstrcpyA"
  elif id == 0x0000045E: funcName = "lstrcpyW"
  elif id == 0x0000045F: funcName = "lstrcpynA"
  elif id == 0x00000460: funcName = "lstrcpynW"
  elif id == 0x00000461: funcName = "lstrcatA"
  elif id == 0x00000462: funcName = "lstrcatW"
  elif id == 0x00000463: funcName = "lstrlenA"
  elif id == 0x00000464: funcName = "lstrlenW"
  elif id == 0x00000465: funcName = "IsBadReadPtr"
  elif id == 0x00000466: funcName = "IsBadWritePtr"
  elif id == 0x00000467: funcName = "FileTimeToLocalFileTime"
  elif id == 0x00000468: funcName = "XMemCpy"
  elif id == 0x00000469: funcName = "XMemCpyStreaming"
  elif id == 0x0000046A: funcName = "XamHudSetUserIndex"
  elif id == 0x0000046B: funcName = "XamShowNuiTroubleshooterUI"
  elif id == 0x0000046C: funcName = "XamTestShowNuiTroubleshooterUI"
  elif id == 0x0000046D: funcName = "XamShowPasscodeVerifyUIEx"
  elif id == 0x0000046E: funcName = "XamShowNuiAchievementsUI"
  elif id == 0x0000046F: funcName = "XamShowNuiCommunitySessionsUI"
  elif id == 0x00000470: funcName = "XamShowNuiDeviceSelectorUI"
  elif id == 0x00000471: funcName = "XamShowNuiDirtyDiscErrorUI"
  elif id == 0x00000472: funcName = "XamShowNuiFriendsUI"
  elif id == 0x00000473: funcName = "XamShowNuiGameInviteUI"
  elif id == 0x00000474: funcName = "XamShowNuiGamerCardUIForXUID"
  elif id == 0x00000475: funcName = "XamShowNuiMarketplaceDownloadItemsUI"
  elif id == 0x00000476: funcName = "XamShowNuiMarketplaceUI"
  elif id == 0x00000477: funcName = "XamShowNuiMessageBoxUI"
  elif id == 0x00000478: funcName = "XamShowNuiPartyUI"
  elif id == 0x00000479: funcName = "XamShowNuiFriendRequestUI"
  elif id == 0x0000047A: funcName = "XamShowNuiSigninUI"
  elif id == 0x0000047B: funcName = "XamShowNuiControllerRequiredUI"
  elif id == 0x0000047C: funcName = "XamShowNuiGamesUI"
  elif id == 0x0000047D: funcName = "XamShowNuiHardwareRequiredUI"
  elif id == 0x0000047E: funcName = "XamCacheStoreFileByString"
  elif id == 0x0000047F: funcName = "XamCacheFetchFileByString"
  elif id == 0x00000480: funcName = "XamCacheDeleteFileByString"
  elif id == 0x00000481: funcName = "XamGetCachedTitleNameEx"
  elif id == 0x00000482: funcName = "XamXlfsInitializeUploadQueue"
  elif id == 0x00000483: funcName = "XamXlfsUninitializeUploadQueue"
  elif id == 0x00000484: funcName = "XamXlfsMountUploadQueueInstance"
  elif id == 0x00000485: funcName = "XamXlfsUnmountUploadQueueInstance"
  elif id == 0x00000486: funcName = "XamVoiceRecordUserPrivileges"
  elif id == 0x00000487: funcName = "XamXlfsInitializeUploadQueueWithTestHooks"
  elif id == 0x00000488: funcName = "XamXlfsNotifyContentDeletion"
  elif id == 0x00000489: funcName = "XMemAlloc"
  elif id == 0x0000048A: funcName = "XMemFree"
  elif id == 0x0000048B: funcName = "XMemSize"
  elif id == 0x0000048C: funcName = "XamVoiceSetMicArrayIdleUsers"
  elif id == 0x0000048D: funcName = "XamVoiceMuteMicArray"
  elif id == 0x0000048E: funcName = "XamVoiceGetMicArrayUnderrunStatus"
  elif id == 0x0000048F: funcName = "XuiSceneEnableTransitionDependency"
  elif id == 0x00000490: funcName = "XamVoiceGetMicArrayAudioEx"
  elif id == 0x00000491: funcName = "XamVoiceDisableMicArray"
  elif id == 0x00000497: funcName = "XamVoiceIsActiveProcess"
  elif id == 0x000004B0: funcName = "XMPRegisterCodec"
  elif id == 0x00000514: funcName = "XamIsCurrentTitleIptv"
  elif id == 0x00000515: funcName = "XamIsIptvEnabled"
  elif id == 0x00000516: funcName = "XamIsDvrRecording"
  elif id == 0x00000517: funcName = "XamIptvUninstall"
  elif id == 0x00000518: funcName = "XamGetDvrStorage"
  elif id == 0x00000519: funcName = "XamSetDvrStorage"
  elif id == 0x0000051A: funcName = "XamIptvGetServiceName"
  elif id == 0x0000051B: funcName = "XamNuiHudGetEngagedEnrollmentIndex"
  elif id == 0x00000578: funcName = "XamReminderGetItems"
  elif id == 0x00000579: funcName = "XamReminderClearItems"
  elif id == 0x0000057A: funcName = "XamReminderItemAdd"
  elif id == 0x0000057B: funcName = "XamReminderItemRemove"
  elif id == 0x0000057C: funcName = "XamReminderGetNextItem"
  elif id == 0x0000057D: funcName = "XamReminderGetModifiedTime"
  elif id == 0x0000057E: funcName = "XamReminderClearCache"
  elif id == 0x000005DC: funcName = "XamAvatarInitialize"
  elif id == 0x000005DD: funcName = "XamAvatarShutdown"
  elif id == 0x000005DE: funcName = "XamAvatarGetManifestLocalUser"
  elif id == 0x000005DF: funcName = "XamAvatarGetManifestsByXuid"
  elif id == 0x000005E0: funcName = "XamAvatarGetAssetsResultSize"
  elif id == 0x000005E1: funcName = "XamAvatarGetAssets"
  elif id == 0x000005E2: funcName = "XamAvatarGenerateMipMaps"
  elif id == 0x000005E3: funcName = "XamAvatarSetCustomAsset"
  elif id == 0x000005E4: funcName = "XamAvatarSetManifest"
  elif id == 0x000005E5: funcName = "EnumerateMediaObjects"
  elif id == 0x000005E6: funcName = "EnumerateMediaObjects"
  elif id == 0x000005E7: funcName = "XamAvatarLoadAnimation"
  elif id == 0x000005E8: funcName = "XamAvatarBeginEnumAssets"
  elif id == 0x000005E9: funcName = "XamAvatarEndEnumAssets"
  elif id == 0x000005EA: funcName = "XamAvatarEnumAssets"
  elif id == 0x000005EB: funcName = "XamAvatarGetMetadataRandom"
  elif id == 0x000005EC: funcName = "EnumerateMediaObjects"
  elif id == 0x000005ED: funcName = "EnumerateMediaObjects"
  elif id == 0x000005EE: funcName = "XamAvatarGetMetadataSignedOutProfileCount"
  elif id == 0x000005EF: funcName = "XamAvatarGetMetadataSignedOutProfile"
  elif id == 0x000005F0: funcName = "EnumerateMediaObjects"
  elif id == 0x000005F1: funcName = "XamAvatarManifestGetBodyType"
  elif id == 0x000005F2: funcName = "XamAvatarGetInstrumentation"
  elif id == 0x000005F3: funcName = "XamAvatarGetAssetIcon"
  elif id == 0x000005F4: funcName = "XamAvatarWearNow"
  elif id == 0x000005F5: funcName = "XamAvatarGetAssetBinary"
  elif id == 0x000005F6: funcName = "XamAvatarReinstallAwardedAsset"
  elif id == 0x000005F7: funcName = "XamAvatarGetInstalledAssetPackageDescription"
  elif id == 0x000005F8: funcName = "XamAvatarSetMocks"
  elif id == 0x0000060E: funcName = "XamContentMountInstalledGame"
  elif id == 0x0000060F: funcName = "XamContentIsGameInstalledToHDD"
  elif id == 0x00000610: funcName = "XamContentQueryLicenseInternal"
  elif id == 0x00000611: funcName = "XamContentGetDeviceVolumePath"
  elif id == 0x00000612: funcName = "XamContentDeviceCheckUpdates"
  elif id == 0x00000613: funcName = "XamContentGetHeaderInternal"
  elif id == 0x00000640: funcName = "XamPackageManagerFindPackageContainingIndexedXEX"
  elif id == 0x00000641: funcName = "XamPackageManagerReinitialize"
  elif id == 0x00000642: funcName = "XamPackageManagerGetAuthoritativeManifestVersion"
  elif id == 0x00000643: funcName = "XamGetCurrentSystemOnlineManifestRevision"
  elif id == 0x00000644: funcName = "XamPackageManagerDeleteExtendedPartition"
  elif id == 0x00000645: funcName = "XamPackageManagerHasExtendedPartition"
  elif id == 0x00000646: funcName = "XamPackageManagerGetExperienceMode"
  elif id == 0x00000647: funcName = "XamPackageManagerGetFeatureRequiresUpdateStrings"
  elif id == 0x00000648: funcName = "XamPackageManagerGetFileSize"
  elif id == 0x00000649: funcName = "XampDemandUpdateGetAttributes"
  elif id == 0x0000064A: funcName = "XampDemandUpdateGetExtendedAttributes"
  elif id == 0x0000064B: funcName = "XampDemandUpdateGetInstance"
  elif id == 0x0000064C: funcName = "XampDemandUpdateSetRefreshTestFlags"
  elif id == 0x0000064D: funcName = "XampDemandUpdateIsRefreshTestFlagSet"
  elif id == 0x0000064E: funcName = "XampDemandUpdateGetManifestLocalPath"
  elif id == 0x0000064F: funcName = "XampDemandUpdateRefreshManifest"
  elif id == 0x00000650: funcName = "XdfInitialize"
  elif id == 0x00000651: funcName = "XdfShutdown"
  elif id == 0x00000652: funcName = "XdfGetExpectedDownloadSize"
  elif id == 0x00000653: funcName = "XdfGetItem"
  elif id == 0x00000654: funcName = "XdfCacheItem"
  elif id == 0x00000655: funcName = "XdfLoadXexFromCache"
  elif id == 0x00000656: funcName = "XdfLoadXex"
  elif id == 0x00000657: funcName = "XdfCancelRequest"
  elif id == 0x00000658: funcName = "XdfResumeDelayedItem"
  elif id == 0x00000659: funcName = "XdfLaunchNewImageFromCache"
  elif id == 0x0000065A: funcName = "XampDemandUpdateRefreshManifestDuringLogon"
  elif id == 0x0000065B: funcName = "XampDemandUpdateCheckOnlineManifestChanged"
  elif id == 0x0000065C: funcName = "XampDemandUpdateRunCacheCleaner"
  elif id == 0x00000686: funcName = "XamXStudioRequest"
  elif id == 0x000006A4: funcName = "XamShowAvatarMiniCreatorUI"
  elif id == 0x000006A5: funcName = "XamShowGoldUpgradeUI"
  elif id == 0x000006A6: funcName = "XamResumeUpdaterUI"
  elif id == 0x000006A7: funcName = "XamShowDirectAcquireUI"
  elif id == 0x000006A8: funcName = "XamShowPaymentOptionsUI"
  elif id == 0x00000708: funcName = "XamGetLiveHiveValueA"
  elif id == 0x00000709: funcName = "XamGetLiveHiveValueW"
  elif id == 0x0000070A: funcName = "XamGetLiveHiveValueDuringLogonAttemptA"
  elif id == 0x0000076C: funcName = "XamDownloadMarketplaceStoresList"
  elif id == 0x0000076D: funcName = "XamGetStoreFront"
  elif id == 0x0000076E: funcName = "XamSetStagingMode"
  elif id == 0x0000076F: funcName = "XamGetStagingMode"
  elif id == 0x00000770: funcName = "XamAppGetSessionId"
  elif id == 0x000007D0: funcName = "XamDoesOmniNeedConfiguration"
  elif id == 0x000007D1: funcName = "XamFirstRunExperienceShouldRun"
  elif id == 0x000007D2: funcName = "GetProcessHeap"
  elif id == 0x000007D3: funcName = "UnhandledExceptionFilter"
  elif id == 0x000007D4: funcName = "SetUnhandledExceptionFilter"
  elif id == 0x000007D5: funcName = "XamIsOptionalMediaUpdateInstalled"
  elif id == 0x000007D6: funcName = "XamShowOptionalMediaUpdateRequiredUI"
  elif id == 0x000007D7: funcName = "XamShowOptionalMediaUpdateRequiredUIEx"
  elif id == 0x000007D8: funcName = "XamShowFirstRunWelcomeUI"
  elif id == 0x000007D9: funcName = "XamTaskCreateQueueEx"
  elif id == 0x000007DA: funcName = "XamSetDashBackstackData"
  elif id == 0x000007DB: funcName = "XamLaunchAvatarEditor"
  elif id == 0x000007DC: funcName = "XamGetDashBackstackData"
  elif id == 0x000007DD: funcName = "XamGetDashBackstackNodesCount"
  elif id == 0x000007DE: funcName = "XamSetLastActiveUserData"
  elif id == 0x000007DF: funcName = "XamGetLastActiveUserData"
  elif id == 0x000007E0: funcName = "XamSetActiveDashAppInfo"
  elif id == 0x000007E1: funcName = "XamGetActiveDashAppInfo"
  elif id == 0x00000802: funcName = "XamUserCreateAvatarAssetEnumerator"
  elif id == 0x00000803: funcName = "XamInitializeGameTileCache"
  elif id == 0x00000804: funcName = "XamDestroyGameTileCache"
  elif id == 0x00000805: funcName = "XamReadGameTileImage"
  elif id == 0x00000806: funcName = "XamShouldThrottleAccountInfoCall"
  elif id == 0x00000807: funcName = "XuiClassDerivesFrom"
  elif id == 0x00000808: funcName = "XuiFreeVisuals"
  elif id == 0x00000809: funcName = "XuiGetBaseClass"
  elif id == 0x0000080A: funcName = "XuiLoadVisualFromBinary"
  elif id == 0x0000080B: funcName = "XuiResourceGetBuffer"
  elif id == 0x0000080C: funcName = "XuiResourceGetTotalSize"
  elif id == 0x0000080D: funcName = "XuiElementGetUserData"
  elif id == 0x0000080E: funcName = "XuiElementSetUserData"
  elif id == 0x0000080F: funcName = "XuiTabSceneGetCount"
  elif id == 0x00000810: funcName = "XuiSliderGetStep"
  elif id == 0x00000811: funcName = "XuiSliderSetStep"
  elif id == 0x00000812: funcName = "XuiProgressBarGetRange"
  elif id == 0x00000813: funcName = "XuiElementSetHittable"
  elif id == 0x00000814: funcName = "XuiElementPlayNamedFrames"
  elif id == 0x00000815: funcName = "XuiElementGetPivot"
  elif id == 0x00000816: funcName = "XuiElementGetPrev"
  elif id == 0x00000817: funcName = "XuiElementGetScale"
  elif id == 0x00000818: funcName = "XuiElementSetPivot"
  elif id == 0x00000819: funcName = "XuiElementSetRotation"
  elif id == 0x0000081A: funcName = "XuiElementSetScale"
  elif id == 0x0000081B: funcName = "XuiControlWantsUnfocusedInput"
  elif id == 0x0000081C: funcName = "XuiResourceOpenNoLoc"
  elif id == 0x0000081D: funcName = "XuiResourceReleasePackage"
  elif id == 0x0000081E: funcName = "XuiResourceGetPackageEntryInfo"
  elif id == 0x0000081F: funcName = "XuiResourceGetPackageEntryCount"
  elif id == 0x00000820: funcName = "XuiResourceOpenPackage"
  elif id == 0x00000821: funcName = "XamCodeCoverageFileOpen"
  elif id == 0x00000822: funcName = "XamCodeCoverageFileClose"
  elif id == 0x00000823: funcName = "XamCodeCoverageFileLseek"
  elif id == 0x00000824: funcName = "XamCodeCoverageFileRead"
  elif id == 0x00000825: funcName = "XamCodeCoverageFileWrite"
  elif id == 0x00000826: funcName = "Refresh"
  elif id == 0x00000827: funcName = "XampHeapGetInfo"
  elif id == 0x00000828: funcName = "XampHeapGetCount"
  elif id == 0x00000829: funcName = "XamShowPamUI"
  elif id == 0x0000082A: funcName = "XuiElementLayoutTree"
  elif id == 0x0000082B: funcName = "XamRegisterScreenSaverCallback"
  elif id == 0x0000082C: funcName = "XUIElementPropVal_SetInt"
  elif id == 0x0000082D: funcName = "XUIElementPropVal_SetFloat"
  elif id == 0x0000082E: funcName = "XuiObjectGetPropertyDef"
  elif id == 0x0000082F: funcName = "XuiRenderGetDevice"
  elif id == 0x00000830: funcName = "XuiRenderRestoreState"
  elif id == 0x00000831: funcName = "XuiElementGetFullXForm"
  elif id == 0x00000832: funcName = "XuiRenderGetViewTransform"
  elif id == 0x00000833: funcName = "XuiRenderGetColorSpace"
  elif id == 0x00000834: funcName = "XamPngEncode"
  elif id == 0x00000835: funcName = "XamPngDecode"
  elif id == 0x00000836: funcName = "XamPngEncodeEx"
  elif id == 0x00000837: funcName = "XuiTextElementMeasureText"
  elif id == 0x00000838: funcName = "XamLoaderShouldConfirmReboot"
  elif id == 0x00000839: funcName = "XamLoaderRebootToDash"
  elif id == 0x0000083A: funcName = "XamNuiHudGetEngagedTrackingID"
  elif id == 0x0000083B: funcName = "XamLoaderLaunchTitleForReason"
  elif id == 0x0000083C: funcName = "XamNuiHudSetEngagedTrackingID"
  elif id == 0x0000083E: funcName = "XamSetupTexture"
  elif id == 0x00000841: funcName = "XamSetupCameraPreviewStuff"
  elif id == 0x00000842: funcName = "XamReleaseCameraPreviewStuff"
  elif id == 0x00000843: funcName = "XamRenderCameraPreviewStuff"
  elif id == 0x00000848: funcName = "XamAccountRecoveryGetSetTitleSyncTime"
  elif id == 0x00000849: funcName = "XamReadBiometricData"
  elif id == 0x0000084A: funcName = "XamWriteBiometricData"
  elif id == 0x0000084B: funcName = "XamD3DResourceDescriptorCreate"
  elif id == 0x0000084C: funcName = "XamD3DResourceDescriptorAddRef"
  elif id == 0x0000084D: funcName = "XamD3DResourceDescriptorRelease"
  elif id == 0x0000084E: funcName = "XamD3DResourceAddRef"
  elif id == 0x0000084F: funcName = "XamD3DResourceSet"
  elif id == 0x00000850: funcName = "XamD3DResourceIsBusy"
  elif id == 0x00000851: funcName = "XamD3DResourceRelease"
  elif id == 0x0000085E: funcName = "XamNuiEnableChatMic"
  elif id == 0x0000085F: funcName = "XamNuiIsChatMicEnabled"
  elif id == 0x00000860: funcName = "XamNuiGetDepthCalibration"
  elif id == 0x00000861: funcName = "XamNuiStoreDepthCalibration"
  elif id == 0x00000862: funcName = "XamUserNuiIsBiometricEnabled"
  elif id == 0x00000863: funcName = "XamUserNuiEnableBiometric"
  elif id == 0x00000864: funcName = "XamNuiCameraSetFlags"
  elif id == 0x00000865: funcName = "XamNuiCameraRememberFloor"
  elif id == 0x00000866: funcName = "XamUserNuiGetUserIndexForBind"
  elif id == 0x00000867: funcName = "XamUserNuiGetUserIndexForSignin"
  elif id == 0x00000868: funcName = "XamUserNuiBind"
  elif id == 0x00000869: funcName = "XamUserNuiGetUserIndex"
  elif id == 0x0000086A: funcName = "XamUserNuiGetEnrollmentIndex"
  elif id == 0x0000086B: funcName = "XamUserNuiUnbind"
  elif id == 0x0000086C: funcName = "XamNuiIdentityGetQualityFlagsMessage"
  elif id == 0x0000086D: funcName = "XamNuiCameraTiltSetCallback"
  elif id == 0x0000086E: funcName = "XamNuiHudIsEnabled"
  elif id == 0x0000086F: funcName = "XamNuiCameraGetTiltControllerType"
  elif id == 0x00000870: funcName = "XamNuiCameraTiltGetStatus"
  elif id == 0x00000871: funcName = "XamNuiIdentityGetQualityFlags"
  elif id == 0x00000872: funcName = "XamNuiIdentityEnrollForSignIn"
  elif id == 0x00000873: funcName = "XamNuiIdentityGetSessionId"
  elif id == 0x00000874: funcName = "XamNuiIdentityIdentifyWithBiometric"
  elif id == 0x00000875: funcName = "ControlPackGetHandleManager"
  elif id == 0x00000876: funcName = "XamEnableNuiAutomation"
  elif id == 0x00000877: funcName = "XamNuiGetSystemGestureControl"
  elif id == 0x00000878: funcName = "XamGetPasscodeKeyFromVirtualKey"
  elif id == 0x00000879: funcName = "XamEnableNatalPlayback"
  elif id == 0x0000087A: funcName = "XamIsNuiAutomationEnabled"
  elif id == 0x0000087B: funcName = "XamIsNatalPlaybackEnabled"
  elif id == 0x0000087C: funcName = "XamNuiHudInterpretFrame"
  elif id == 0x0000087D: funcName = "XamNuiHudEnableInputFilter"
  elif id == 0x0000087E: funcName = "ControlpackNuiCursorSetTrackingId"
  elif id == 0x0000087F: funcName = "XamNuiHudGetInitializeFlags"
  elif id == 0x00000880: funcName = "XamNuiCameraElevationSetAngle"
  elif id == 0x00000881: funcName = "XamNuiCameraElevationGetAngle"
  elif id == 0x00000882: funcName = "XamNuiCameraElevationAutoTilt"
  elif id == 0x00000883: funcName = "XamNuiCameraElevationStopMovement"
  elif id == 0x00000884: funcName = "XamNuiCameraElevationSetCallback"
  elif id == 0x00000885: funcName = "XamNuiGetDeviceStatus"
  elif id == 0x00000886: funcName = "XamNuiNatalCameraUpdateStarting"
  elif id == 0x00000887: funcName = "XamNuiNatalCameraUpdateComplete"
  elif id == 0x00000888: funcName = "XamNuiHudGetVersions"
  elif id == 0x00000889: funcName = "XamGetHUDElementByPath"
  elif id == 0x0000088A: funcName = "XamGetHUDElementByAutoId"
  elif id == 0x0000088B: funcName = "XuiElementGetScreenPositionCenter"
  elif id == 0x0000088C: funcName = "XamNuiCameraElevationReverseAutoTilt"
  elif id == 0x0000088D: funcName = "ControlPackSimpleCursorGetRayFromScreenPosition"
  elif id == 0x0000088E: funcName = "ControlPackSideNavControlGetNuiHandle"
  elif id == 0x0000088F: funcName = "XamFindHUDElementByXuiId"
  elif id == 0x00000890: funcName = "XamNuiIsDeviceReady"
  elif id == 0x00000891: funcName = "XamNuiSetForceDeviceOff"
  elif id == 0x00000892: funcName = "XamNuiPlayerEngagementUpdate"
  elif id == 0x00000893: funcName = "XamNuiSkeletonGetBestSkeletonIndex"
  elif id == 0x00000894: funcName = "XamNuiSkeletonScoreUpdate"
  elif id == 0x00000895: funcName = "XamNuiCameraTiltReportStatus"
  elif id == 0x00000896: funcName = "XamNuiCameraAdjustTilt"
  elif id == 0x00000898: funcName = "D3DDevice_CreateVertexShader"
  elif id == 0x00000899: funcName = "D3DDevice_CreatePixelShader"
  elif id == 0x0000089A: funcName = "D3DDevice_CreateTexture"
  elif id == 0x0000089B: funcName = "D3DDevice_CreateVertexBuffer"
  elif id == 0x0000089C: funcName = "D3DDevice_CreateIndexBuffer"
  elif id == 0x0000089D: funcName = "D3DDevice_CreateVertexDeclaration"
  elif id == 0x0000089E: funcName = "D3DVertexBuffer_Unlock"
  elif id == 0x0000089F: funcName = "D3DVertexBuffer_Lock"
  elif id == 0x000008A0: funcName = "D3DIndexBuffer_Unlock"
  elif id == 0x000008A1: funcName = "D3DIndexBuffer_Lock"
  elif id == 0x000008A2: funcName = "D3DTexture_UnlockRect"
  elif id == 0x000008A3: funcName = "D3DTexture_LockRect"
  elif id == 0x000008A4: funcName = "D3DDevice_Clear"
  elif id == 0x000008A5: funcName = "D3DDevice_SetViewport"
  elif id == 0x000008A6: funcName = "D3DDevice_GetViewport"
  elif id == 0x000008A7: funcName = "D3DVertexShader_Release"
  elif id == 0x000008A8: funcName = "D3DPixelShader_Release"
  elif id == 0x000008A9: funcName = "D3DVertexDeclaration_Release"
  elif id == 0x000008AA: funcName = "D3DResource_Release"
  elif id == 0x000008AB: funcName = "D3DDevice_Release"
  elif id == 0x000008AC: funcName = "D3DDevice_SetVertexShader"
  elif id == 0x000008AD: funcName = "D3DDevice_SetPixelShader"
  elif id == 0x000008AE: funcName = "D3DDevice_SetTexture"
  elif id == 0x000008AF: funcName = "D3DDevice_SetVertexDeclaration"
  elif id == 0x000008B0: funcName = "D3DDevice_SetIndices"
  elif id == 0x000008B1: funcName = "D3DDevice_SetStreamSource"
  elif id == 0x000008B2: funcName = "D3DDevice_DrawVertices"
  elif id == 0x000008B3: funcName = "D3DDevice_DrawVerticesUP"
  elif id == 0x000008B4: funcName = "D3DDevice_DrawIndexedVertices"
  elif id == 0x000008B5: funcName = "D3DDevice_DrawIndexedVerticesUP"
  elif id == 0x000008B6: funcName = "D3DDevice_SetVertexShaderConstantF_ParameterCheck"
  elif id == 0x000008B7: funcName = "D3DDevice_SetPixelShaderConstantF_ParameterCheck"
  elif id == 0x000008B8: funcName = "D3DDevice_SetSamplerState_ParameterCheck"
  elif id == 0x000008B9: funcName = "D3DDevice_SetRenderState_ParameterCheck"
  elif id == 0x000008BA: funcName = "D3DDevice_GetRenderState_ParameterCheck"
  elif id == 0x000008BB: funcName = "D3DDevice_SetVertexShaderConstantFN"
  elif id == 0x000008BC: funcName = "D3DDevice_SetPixelShaderConstantFN"
  elif id == 0x000008BD: funcName = "D3DDevice_GetRenderState_ZEnable"
  elif id == 0x000008BE: funcName = "D3DDevice_GetRenderState_CullMode"
  elif id == 0x000008BF: funcName = "D3DDevice_GetRenderState_AlphaBlendEnable"
  elif id == 0x000008C0: funcName = "D3DDevice_GetRenderState_SrcBlendAlpha"
  elif id == 0x000008C1: funcName = "D3DDevice_GetRenderState_DestBlendAlpha"
  elif id == 0x000008C2: funcName = "D3DDevice_GetRenderState_BlendOp"
  elif id == 0x000008C3: funcName = "D3DDevice_GetRenderState_ViewportEnable"
  elif id == 0x000008C4: funcName = "D3DDevice_SetRenderState_ZEnable"
  elif id == 0x000008C5: funcName = "D3DDevice_SetRenderState_CullMode"
  elif id == 0x000008C6: funcName = "D3DDevice_SetRenderState_AlphaBlendEnable"
  elif id == 0x000008C7: funcName = "D3DDevice_SetRenderState_SrcBlendAlpha"
  elif id == 0x000008C8: funcName = "D3DDevice_SetRenderState_DestBlendAlpha"
  elif id == 0x000008C9: funcName = "D3DDevice_SetRenderState_BlendOp"
  elif id == 0x000008CA: funcName = "D3DDevice_SetRenderState_ViewportEnable"
  elif id == 0x000008CB: funcName = "D3DDevice_SetSamplerState_MagFilter"
  elif id == 0x000008CC: funcName = "D3DDevice_SetSamplerState_MinFilter"
  elif id == 0x000008CD: funcName = "D3DDevice_SetSamplerState_AddressU"
  elif id == 0x000008CE: funcName = "D3DDevice_SetSamplerState_AddressV"
  elif id == 0x000008CF: funcName = "XGSetTextureHeader"
  elif id == 0x000008D0: funcName = "XGGetTextureDesc"
  elif id == 0x000008D1: funcName = "XGOffsetResourceAddress"
  elif id == 0x000008D2: funcName = "D3DResource_AddRef"
  elif id == 0x000008D3: funcName = "D3DVertexShader_AddRef"
  elif id == 0x000008D4: funcName = "D3DPixelShader_AddRef"
  elif id == 0x000008D5: funcName = "D3DVertexDeclaration_AddRef"
  elif id == 0x000008D6: funcName = "XGSetTextureHeaderEx"
  elif id == 0x000008D7: funcName = "D3DDevice_GetRenderTarget"
  elif id == 0x000008D8: funcName = "D3DDevice_SetRenderTarget"
  elif id == 0x000008D9: funcName = "D3DDevice_GetDepthStencilSurface"
  elif id == 0x000008DA: funcName = "D3DDevice_SetDepthStencilSurface"
  elif id == 0x000008DB: funcName = "D3DDevice_Resolve"
  elif id == 0x000008DC: funcName = "D3DDevice_SetPixelShaderConstantB"
  elif id == 0x000008DD: funcName = "XamNuiGetDeviceSerialNumber"
  elif id == 0x000008FC: funcName = "XamXtwManagerGetVariableCount"
  elif id == 0x000008FD: funcName = "XamXtwManagerGetId"
  elif id == 0x000008FE: funcName = "XamXtwManagerGetValue"
  elif id == 0x000008FF: funcName = "XamXtwManagerSetValue"
  elif id == 0x00000900: funcName = "XamXtwManagerIncrement"
  elif id == 0x00000901: funcName = "XamXtwManagerDecrement"
  elif id == 0x00000902: funcName = "XamXtwManagerResetValue"
  elif id == 0x00000903: funcName = "XamXtwManagerResetAll"
  elif id == 0x00000904: funcName = "XamXtwManagerGetDataFilePath"
  elif id == 0x00000905: funcName = "XamXtwManagerDeleteDataFile"
  elif id == 0x00000906: funcName = "XamXtwManagerSave"
  elif id == 0x00000907: funcName = "XamXtwManagerLoad"
  elif id == 0x00000908: funcName = "XamGetXTweakManager"
  elif id == 0x000009C4: funcName = "XamBackgroundDownloadSetMode"
  elif id == 0x000009C5: funcName = "XamBackgroundDownloadIsEnabled"
  elif id == 0x000009C6: funcName = "XamBackgroundDownloadGetActiveItem"
  elif id == 0x000009C7: funcName = "XamBackgroundDownloadGetItems"
  elif id == 0x000009C8: funcName = "XamBackgroundDownloadClearItems"
  elif id == 0x000009C9: funcName = "XamBackgroundDownloadItemAdd"
  elif id == 0x000009CA: funcName = "XamBackgroundDownloadItemRemove"
  elif id == 0x000009CB: funcName = "XamBackgroundDownloadItemMakeFirst"
  elif id == 0x000009CC: funcName = "XamBackgroundDownloadSetForegroundPriority"
  elif id == 0x000009CD: funcName = "XamBackgroundDownloadGetForegroundPriority"
  elif id == 0x000009CE: funcName = "XamBackgroundDownloadItemToContentData"
  elif id == 0x000009CF: funcName = "XamBackgroundDownloadItemGetStatus"
  elif id == 0x000009D0: funcName = "XamBackgroundDownloadHistoryGetItem"
  elif id == 0x000009D1: funcName = "XamBackgroundDownloadItemGetHistoryStatus"
  elif id == 0x000009D2: funcName = "XamBackgroundDownloadItemSetHistoryStatus"
  elif id == 0x000009D3: funcName = "XamBackgroundDownloadItemGetStatusAsync"
  elif id == 0x000009D4: funcName = "XamBackgroundDownloadItemGetStatusEx"
  elif id == 0x000009D5: funcName = "XamBackgroundDownloadItemGetHistoryStatusEx"
  elif id == 0x000009D6: funcName = "XamBackgroundDownloadBindItems"
  elif id == 0x000009D7: funcName = "XamBackgroundDownloadSetPollingActive"
  elif id == 0x000009D8: funcName = "XamBackgroundDownloadGetPollingActive"
  elif id == 0x000009D9: funcName = "XamBackgroundDownloadGetMode"
  elif id == 0x000009DA: funcName = "XamBackgroundDownloadGetUnexpectedChangeCount"
  elif id == 0x000009DB: funcName = "XamBackgroundDownloadIsItemForThisConsole"
  elif id == 0x000009DC: funcName = "XamBackgroundDownloadSelectDevice"
  elif id == 0x000009DD: funcName = "XamBackgroundDownloadItemModify"
  elif id == 0x000009DE: funcName = "XamBackgroundDownloadCacheLegacyMappingInfo"
  elif id == 0x000009DF: funcName = "XamBackgroundDownloadGetLegacyMappingInfo"
  elif id == 0x000009E0: funcName = "XamBackgroundDownloadGetLegacyId"
  elif id == 0x000009E1: funcName = "XamBackgroundDownloadDoFail"
  elif id == 0x00000A28: funcName = "XamSwapDisc"
  elif id == 0x00000A29: funcName = "XamSwapDiscPatchAddress"
  elif id == 0x00000A2A: funcName = "XamSwapCancel"
  elif id == 0x00000A32: funcName = "XamRamDriveCreate"
  elif id == 0x00000A33: funcName = "XamRamDriveDestroy"
  elif id == 0x00000A5A: funcName = "XamPlayTimerGetData"
  elif id == 0x00000A5B: funcName = "XamPlayTimerSetData"
  elif id == 0x00000A5C: funcName = "XamPlayTimerResume"
  elif id == 0x00000A5D: funcName = "XamPlayTimerSuspend"
  elif id == 0x00000A5E: funcName = "XamPlayTimerIsRunning"
  elif id == 0x00000A5F: funcName = "XamPlayTimerIsEnabled"
  elif id == 0x00000A60: funcName = "XamPlayTimerGetNextResetDate"
  elif id == 0x00000A61: funcName = "XamPlayTimerFormatDurationString"
  elif id == 0x00000A62: funcName = "XamPlayTimerGetTimeRemaining"
  elif id == 0x00000A63: funcName = "XamPlayTimerUpdateTimeRemaining"
  elif id == 0x00000A64: funcName = "XamPlayTimerForceNotification"
  elif id == 0x00000A65: funcName = "XamPlayTimerRefreshResetDate"
  elif id == 0x00000A6E: funcName = "UpnpAVServerSearchInitialize"
  elif id == 0x00000A6F: funcName = "UpnpAVServerSearchDestroy"
  elif id == 0x00000A70: funcName = "UpnpAVServerSearchStart"
  elif id == 0x00000A71: funcName = "Destroy"
  elif id == 0x00000A72: funcName = "UpnpAVServerSearchDoWork"
  elif id == 0x00000A73: funcName = "UpnpAVServerSearchGetNextServer"
  elif id == 0x00000A8C: funcName = "XCustomBroadcastGamercardEvent"
  elif id == 0x00000A8D: funcName = "XamCustomGetCurrentActions"
  elif id == 0x00000AA0: funcName = "XamInstrumentationLogEvent"
  elif id == 0x00000AA1: funcName = "XamRegisterSMCNotification"
  elif id == 0x00000AAA: funcName = "XamInstrumentationLogEventEx"
  elif id == 0x00000AAB: funcName = "XamInstrumentationGetSourceConfig"
  elif id == 0x00000AAC: funcName = "XamInstrumentationDebugConfig"
  elif id == 0x00000ADC: funcName = "CurlCreateCacheEntry"
  elif id == 0x00000ADD: funcName = "CurlOpenCacheEntry"
  elif id == 0x00000ADE: funcName = "CurlSetCacheEntryExpireTime"
  elif id == 0x00000ADF: funcName = "CurlReadCacheEntryHeaders"
  elif id == 0x00000AE0: funcName = "CurlReadCacheEntryContent"
  elif id == 0x00000AE1: funcName = "CurlWriteCacheEntryContent"
  elif id == 0x00000AE2: funcName = "CurlCloseCacheEntry"
  elif id == 0x00000AE3: funcName = "CurlEnumerateCacheEntry"
  elif id == 0x00000AE5: funcName = "CurlWipeBackingFiles"
  elif id == 0x00000AE7: funcName = "CurlOpenTitleBackingFile"
  elif id == 0x00000AF0: funcName = "XamSetSecurityViolationDetected"
  elif id == 0x00000AF1: funcName = "XamIsSecurityViolationDetected"
  elif id == 0x00000AF2: funcName = "XamIsAnySecurityViolationDetected"
  elif id == 0x00000AF3: funcName = "XamGetSecurityViolationsDetected"
  elif id == 0x00000AF4: funcName = "XamActivateCounterMeasure"
  elif id == 0x00000AF5: funcName = "XamDeactivateCounterMeasure"
  elif id == 0x00000AF6: funcName = "XamIsCounterMeasureActivated"
  elif id == 0x00000AF7: funcName = "XamGetActiveCounterMeasures"
  elif id == 0x00000AFC: funcName = "XamPartyCreate"
  elif id == 0x00000AFD: funcName = "XamPartyLeave"
  elif id == 0x00000AFE: funcName = "XamPartySendInviteDeprecated"
  elif id == 0x00000AFF: funcName = "XamPartyGetUserList"
  elif id == 0x00000B00: funcName = "XamPartySendGameInvites"
  elif id == 0x00000B01: funcName = "XamPartyJoin"
  elif id == 0x00000B02: funcName = "XamPartyKickUser"
  elif id == 0x00000B03: funcName = "XamPartyAddLocalUsers"
  elif id == 0x00000B04: funcName = "XamConvertEmoticons"
  elif id == 0x00000B05: funcName = "XamGetLocaleTimeFormat"
  elif id == 0x00000B06: funcName = "XamPartyRemoveLocalUsers"
  elif id == 0x00000B07: funcName = "XamPartyGetUserListInternal"
  elif id == 0x00000B08: funcName = "XamPartySetJoinable"
  elif id == 0x00000B09: funcName = "XamPartyGetJoinable"
  elif id == 0x00000B0A: funcName = "XamPartyGetInfo"
  elif id == 0x00000B0B: funcName = "XamPartySetCustomData"
  elif id == 0x00000B0C: funcName = "XamPartySetConnectivityGraph"
  elif id == 0x00000B0D: funcName = "XamPartyGetRoutingTable"
  elif id == 0x00000B0E: funcName = "XamPartyAutomationInprocCall"
  elif id == 0x00000B0F: funcName = "XamPartyGetState"
  elif id == 0x00000B10: funcName = "XamPartyGetBandwidth"
  elif id == 0x00000B11: funcName = "XamPartyGetNetworkCounters"
  elif id == 0x00000B12: funcName = "XamShowQuickLaunchUI"
  elif id == 0x00000B13: funcName = "XamPartyIsCoordinator"
  elif id == 0x00000B14: funcName = "XamPartyGetFormation"
  elif id == 0x00000B15: funcName = "XamPartySendInvite"
  elif id == 0x00000B16: funcName = "XamPartySetTestDelay"
  elif id == 0x00000B17: funcName = "XamPartyOverrideNatType"
  elif id == 0x00000B18: funcName = "XamPartyGetAccessLevel"
  elif id == 0x00000B19: funcName = "XamPartySetTestFlags"
  elif id == 0x00000B1A: funcName = "XamIsSystemExperienceTitleId"
  elif id == 0x00000B22: funcName = "XamTaskSetCancelSubTasks"
  elif id == 0x00000B23: funcName = "XamTaskGetCompletionStatus"
  elif id == 0x00000B24: funcName = "XamTaskCancelWaitAndCloseWaitTask"
  elif id == 0x00000B2C: funcName = "XamWebInstrumentationCreateReport"
  elif id == 0x00000B2D: funcName = "XamWebInstrumentationSetUserVar"
  elif id == 0x00000B2E: funcName = "XamWebInstrumentationSetUserVarNoEscape"
  elif id == 0x00000B2F: funcName = "XamWebInstrumentationGetURL"
  elif id == 0x00000B30: funcName = "XamWebInstrumentationSendReport"
  elif id == 0x00000B31: funcName = "XamWebInstrumentationDestroyReport"
  elif id == 0x00000B32: funcName = "XamWebInstrumentationCreateSampledReport"
  elif id == 0x00000B33: funcName = "XampSetSamplingRandomValue"
  elif id == 0x00000B34: funcName = "XampWebInstrumentationSetProfileCounts"
  elif id == 0x00000B35: funcName = "XamWebInstrumentationGetURLEx"
  elif id == 0x00000B36: funcName = "XampSetOmnitureCallbackFunction"
  elif id == 0x00000B37: funcName = "XamShowQuickChatUIp"
  elif id == 0x00000B4A: funcName = "XamVerifyXSignerSignature"
  
  return funcName
  
def xapiNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000001: funcName = "XapiProcessHeap"
  elif id == 0x00000002: funcName = "_locktable"
  elif id == 0x00000003: funcName = "__tlsindexXapi"
  elif id == 0x00000004: funcName = "XapiTermHeapNoop"
  elif id == 0x00000005: funcName = "XapiDebugHeap"
  
  return funcName
  
def xbdmNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000001: funcName = "DmAllocatePool"
  elif id == 0x00000002: funcName = "DmAllocatePoolWithTag"
  elif id == 0x00000003: funcName = "DmCloseCounters"
  elif id == 0x00000004: funcName = "DmCloseModuleSections"
  elif id == 0x00000005: funcName = "DmCloseModuleSections"
  elif id == 0x00000006: funcName = "DmCloseNotificationSession"
  elif id == 0x00000007: funcName = "DmClosePerformanceCounter"
  elif id == 0x00000008: funcName = "DmContinueThread"
  elif id == 0x00000009: funcName = "DmFreePool"
  elif id == 0x0000000A: funcName = "DmGetMemory"
  elif id == 0x0000000B: funcName = "DmGetModuleLongName"
  elif id == 0x0000000C: funcName = "DmGetProcAddress"
  elif id == 0x0000000D: funcName = "DmGetThreadContext"
  elif id == 0x0000000F: funcName = "DmGetThreadList"
  elif id == 0x00000010: funcName = "DmGetXbeInfo"
  elif id == 0x00000011: funcName = "DmGetXboxName"
  elif id == 0x00000013: funcName = "DmGo"
  elif id == 0x00000014: funcName = "DmHaltThread"
  elif id == 0x00000015: funcName = "DmIsDebuggerPresent"
  elif id == 0x00000016: funcName = "DmIsThreadStopped"
  elif id == 0x00000017: funcName = "DmLoadExtension"
  elif id == 0x00000018: funcName = "DmNotify"
  elif id == 0x00000019: funcName = "DmOpenNotificationSession"
  elif id == 0x0000001A: funcName = "DmOpenPerformanceCounter"
  elif id == 0x0000001B: funcName = "DmQueryPerformanceCounterHandle"
  elif id == 0x0000001C: funcName = "DmReboot"
  elif id == 0x0000001E: funcName = "DmRegisterCommandProcessor"
  elif id == 0x00000020: funcName = "DmRegisterNotificationProcessor"
  elif id == 0x00000021: funcName = "DmRegisterPerformanceCounter"
  elif id == 0x00000022: funcName = "DmRemoveBreakpoint"
  elif id == 0x00000023: funcName = "DmResumeThread"
  elif id == 0x00000024: funcName = "DmSendNotificationString"
  elif id == 0x00000025: funcName = "DmSetBreakpoint"
  elif id == 0x00000026: funcName = "DmSetDataBreakpoint"
  elif id == 0x00000027: funcName = "DmSetInitialBreakpoint"
  elif id == 0x00000028: funcName = "DmSetMemory"
  elif id == 0x00000029: funcName = "DmSetThreadContext"
  elif id == 0x0000002A: funcName = "DmSetTitle"
  elif id == 0x0000002B: funcName = "DmSetXboxName"
  elif id == 0x0000002D: funcName = "DmStop"
  elif id == 0x0000002E: funcName = "DmStopOn"
  elif id == 0x00000030: funcName = "DmSuspendThread"
  elif id == 0x00000031: funcName = "DmThreadUserData"
  elif id == 0x00000032: funcName = "DmUnloadExtension"
  elif id == 0x00000033: funcName = "DmWalkLoadedModules"
  elif id == 0x00000034: funcName = "DmWalkModuleSections"
  elif id == 0x00000035: funcName = "DmWalkPerformanceCounters"
  elif id == 0x00000037: funcName = "DmCloseCounters"
  elif id == 0x00000038: funcName = "DmIsBreakpoint"
  elif id == 0x00000039: funcName = "DmCloseCounters"
  elif id == 0x0000003A: funcName = "DmSetUserAccess"
  elif id == 0x0000003B: funcName = "DmGetUserAccess"
  elif id == 0x0000003C: funcName = "DmWalkUserList"
  elif id == 0x0000003D: funcName = "DmAddUser"
  elif id == 0x0000003E: funcName = "DmEnableSecurity"
  elif id == 0x0000003F: funcName = "DmIsSecurityEnabled"
  elif id == 0x00000040: funcName = "DmRemoveUser"
  elif id == 0x00000041: funcName = "__CAP_Start_Profiling"
  elif id == 0x00000042: funcName = "__CAP_End_Profiling"
  elif id == 0x00000046: funcName = "__CAP_Enter_Function"
  elif id == 0x00000047: funcName = "__CAP_Exit_Function"
  elif id == 0x00000048: funcName = "DmRegisterCommandProcessorEx"
  elif id == 0x00000049: funcName = "DmStartProfiling"
  elif id == 0x0000004A: funcName = "DmStopProfiling"
  elif id == 0x0000004B: funcName = "DmQueryMemoryStatistics"
  elif id == 0x0000004C: funcName = "DmEnableStackTrace"
  elif id == 0x0000004D: funcName = "DmQueryAllocationTypeName"
  elif id == 0x0000004E: funcName = "DmRegisterAllocationType"
  elif id == 0x0000004F: funcName = "DmInsertAllocationEntry"
  elif id == 0x00000050: funcName = "DmRemoveAllocationEntry"
  elif id == 0x00000051: funcName = "DmSetTitleEx"
  elif id == 0x00000052: funcName = "DmCaptureStackBackTrace"
  elif id == 0x00000053: funcName = "DmCrashDump"
  elif id == 0x00000054: funcName = "DmIsFastCAPEnabled"
  elif id == 0x00000055: funcName = "DmGetFileAccessCount"
  elif id == 0x00000058: funcName = "DmGetUtilityDriveInfo"
  elif id == 0x00000059: funcName = "DmGetThreadInfoEx"
  elif id == 0x0000005A: funcName = "DmSetProfilingOptions"
  elif id == 0x0000005B: funcName = "DmQuerySystemSettings"
  elif id == 0x0000005C: funcName = "DmSaveSystemSettings"
  elif id == 0x0000006A: funcName = "DmpGetPgoModuleHandleForBaseAddress"
  elif id == 0x0000006B: funcName = "DmpOnPgoModuleLoad"
  elif id == 0x0000006C: funcName = "DmPgoStartDataCollection"
  elif id == 0x0000006D: funcName = "DmPgoStopDataCollection"
  elif id == 0x0000006E: funcName = "DmPgoSaveSnapshot"
  elif id == 0x0000006F: funcName = "IrtClientAbort"
  elif id == 0x00000070: funcName = "IrtPogoInit"
  elif id == 0x00000071: funcName = "IrtSetStaticInfo"
  elif id == 0x00000072: funcName = "IrtAutoSweepW"
  elif id == 0x00000073: funcName = "IrtAutoSweepA"
  elif id == 0x00000075: funcName = "DmGetDumpMode"
  elif id == 0x00000076: funcName = "DmSetDumpMode"
  elif id == 0x00000077: funcName = "DmGetDumpSettings"
  elif id == 0x00000078: funcName = "DmSetDumpSettings"
  elif id == 0x00000079: funcName = "DmGetEventDeferFlags"
  elif id == 0x0000007A: funcName = "DmSetEventDeferFlags"
  elif id == 0x0000007B: funcName = "DmWalkCommittedMemory"
  elif id == 0x0000007C: funcName = "DmCloseCounters"
  elif id == 0x0000007D: funcName = "DmRebootEx"
  elif id == 0x00000082: funcName = "DmMountFdfxVolume"
  elif id == 0x00000083: funcName = "DmCapGetFileHeader"
  elif id == 0x00000084: funcName = "DmCapFreeFileHeader"
  elif id == 0x00000085: funcName = "DmTraceStartRecording"
  elif id == 0x00000086: funcName = "DmTraceStartRecordingFunction"
  elif id == 0x00000087: funcName = "DmTraceSetBufferSize"
  elif id == 0x00000088: funcName = "DmTraceStopRecording"
  elif id == 0x00000089: funcName = "DmTraceSaveBuffer"
  elif id == 0x0000008C: funcName = "DmGetConsoleType"
  elif id == 0x0000008D: funcName = "DmMapDevkitDrive"
  elif id == 0x0000008E: funcName = "DmWalkLoadedModulesEx"
  elif id == 0x0000008F: funcName = "DmGetXexHeaderField"
  elif id == 0x00000090: funcName = "DmGetMouseChanges"
  elif id == 0x00000091: funcName = "DmFindPdbSignature"
  elif id == 0x00000092: funcName = "DmGetProfilingStatus"
  elif id == 0x00000093: funcName = "DmOpticalDiscLogStart"
  elif id == 0x00000094: funcName = "DmOpticalDiscLogStop"
  elif id == 0x00000095: funcName = "DmStartSamplingProfiler"
  elif id == 0x00000096: funcName = "DmStopSamplingProfiler"
  elif id == 0x00000097: funcName = "DmGetSamplingProfilerInfo"
  elif id == 0x00000098: funcName = "DmStartFileEventCapture"
  elif id == 0x00000099: funcName = "DmStopFileEventCapture"
  elif id == 0x0000009A: funcName = "DmSetFileEventMarker"
  elif id == 0x0000009B: funcName = "DmMarkPseudoCreateBegin"
  elif id == 0x0000009C: funcName = "DmMarkPseudoCreateEnd"
  elif id == 0x0000009D: funcName = "DmMarkPseudoEventBegin"
  elif id == 0x0000009E: funcName = "DmMarkPseudoEventEnd"
  elif id == 0x0000009F: funcName = "DmMarkFileEventWorkerThreadBegin"
  elif id == 0x000000A0: funcName = "DmMarkFileEventWorkerThreadEnd"
  elif id == 0x000000A1: funcName = "DmGetSystemInfo"
  elif id == 0x000000A2: funcName = "DmAbortProfiling"
  elif id == 0x000000A3: funcName = "DmNetCaptureStart"
  elif id == 0x000000A4: funcName = "DmNetCaptureStop"
  elif id == 0x000000A5: funcName = "DmQueryTitleMemoryStatistics"
  elif id == 0x000000A6: funcName = "DmAutomationGetInputProcess"
  elif id == 0x000000A7: funcName = "DmAutomationBindController"
  elif id == 0x000000A8: funcName = "DmAutomationUnbindController"
  elif id == 0x000000A9: funcName = "DmAutomationConnectController"
  elif id == 0x000000AA: funcName = "DmAutomationDisconnectController"
  elif id == 0x000000AB: funcName = "DmAutomationSetGamepadState"
  elif id == 0x000000AC: funcName = "DmAutomationQueueGamepadState"
  elif id == 0x000000AD: funcName = "DmAutomationClearGamepadQueue"
  elif id == 0x000000AE: funcName = "DmAutomationQueryGamepadQueue"
  elif id == 0x000000AF: funcName = "DmAutomationGetUserDefaultProfile"
  elif id == 0x000000B0: funcName = "DmAutomationSetUserDefaultProfile"
  elif id == 0x000000B1: funcName = "DmTraceIsRecording"
  elif id == 0x000000B2: funcName = "DmLoadDebuggerExtension"
  elif id == 0x000000B3: funcName = "DmUnloadDebuggerExtension"
  elif id == 0x000000B4: funcName = "DmCreateSystemThread"
  elif id == 0x000000B5: funcName = "PEPLELookup"
  elif id == 0x000000B6: funcName = "PEPLELookupCompact"
  elif id == 0x000000B7: funcName = "PVPLELookup"
  elif id == 0x000000B8: funcName = "PVPLELookupCompact"
  elif id == 0x000000B9: funcName = "PVPLELookupCompactMDS"
  elif id == 0x000000BA: funcName = "PVPLEFilteredLookup"
  elif id == 0x000000BB: funcName = "PVPLEFilteredLookupCompact"
  elif id == 0x000000BC: funcName = "PVPLEFilteredLookupCompactMDS"
  elif id == 0x000000BD: funcName = "PVPLETemplatedLookup"
  elif id == 0x000000BE: funcName = "PVPLETemplatedLookupCompact"
  elif id == 0x000000BF: funcName = "PVPLETemplatedLookupCompactMDS"
  elif id == 0x000000C0: funcName = "DmpPgoCounterOverflow"
  elif id == 0x000000C1: funcName = "UpdateMDSProbeState"
  elif id == 0x000000C2: funcName = "DmGetHttpRegistration"
  elif id == 0x000000C3: funcName = "DmTraceSetIOThread"
  elif id == 0x000000C4: funcName = "DmPMCInstallAndStart"
  elif id == 0x000000C5: funcName = "DmPMCStopAndReport"
  elif id == 0x000000C6: funcName = "DmPMCInstallSetup"
  elif id == 0x000000C7: funcName = "DmPMCUnInstallSetup"
  elif id == 0x000000C8: funcName = "DmPMCResetCounters"
  elif id == 0x000000C9: funcName = "DmPMCSetTriggerProcessor"
  elif id == 0x000000CA: funcName = "DmPMCStart"
  elif id == 0x000000CB: funcName = "DmPMCStop"
  elif id == 0x000000CC: funcName = "DmPMCGetCounter"
  elif id == 0x000000CD: funcName = "DmPMCGetCounters"
  elif id == 0x000000CE: funcName = "DmPMCGetCounterName"
  elif id == 0x000000CF: funcName = "DmPMCDumpCounters"
  elif id == 0x000000D0: funcName = "DmPMCDumpCountersVerbose"
  elif id == 0x000000D1: funcName = "DmPMCGetCounterCostEstimate"
  elif id == 0x000000D2: funcName = "DmPMCGetCounterSource"
  elif id == 0x000000D3: funcName = "DmPMCComputeFrequency"
  elif id == 0x000000D4: funcName = "DmGetAdditionalTitleMemorySetting"
  elif id == 0x000000D5: funcName = "DmGetDebugMemorySize"
  elif id == 0x000000D6: funcName = "DmGetConsoleDebugMemoryStatus"
  elif id == 0x000000D7: funcName = "DmNetSimSetLinkStatusHidden"
  elif id == 0x000000D8: funcName = "DmNetSimInsertQueue"
  elif id == 0x000000D9: funcName = "DmNetSimRemoveQueue"
  elif id == 0x000000DA: funcName = "DmNetSimRemoveAllQueues"
  elif id == 0x000000DB: funcName = "DmNetSimModifyQueueSettings"
  elif id == 0x000000DC: funcName = "DmGetConsoleFeatures"
  elif id == 0x000000DD: funcName = "DmNetSimGetQueueStats"
  elif id == 0x000000DE: funcName = "DmNetSimGetQueueSettings"
  elif id == 0x000000DF: funcName = "DmNetSimGetNumQueues"
  elif id == 0x000000E0: funcName = "DmNetSimInsertIpv4Redirect"
  elif id == 0x000000E1: funcName = "DmNetSimRemoveIpv4Redirect"
  elif id == 0x000000E2: funcName = "DmNetSimGetNumIpv4Redirects"
  elif id == 0x0000012C: funcName = "XLFAllocate"
  elif id == 0x0000012D: funcName = "XLFFree"
  elif id == 0x0000012E: funcName = "XLFQueueAdd"
  elif id == 0x0000012F: funcName = "XLFQueueAllocated"
  elif id == 0x00000130: funcName = "XLFQueueCreate"
  elif id == 0x00000131: funcName = "XLFQueueDestroy"
  elif id == 0x00000132: funcName = "XLFQueueGetEntryCount"
  elif id == 0x00000133: funcName = "XLFQueueIsEmpty"
  elif id == 0x00000134: funcName = "XLFQueueRemove"
  elif id == 0x00000135: funcName = "XLFQueueUnsafeDump"
  elif id == 0x00000136: funcName = "XLFStackAllocated"
  elif id == 0x00000137: funcName = "XLFStackCreate"
  elif id == 0x00000138: funcName = "XLFStackDestroy"
  elif id == 0x00000139: funcName = "XLFStackGetEntryCount"
  elif id == 0x0000013A: funcName = "XLFStackIsEmpty"
  elif id == 0x0000013B: funcName = "XLFStackPop"
  elif id == 0x0000013C: funcName = "XLFStackPush"
  elif id == 0x0000013D: funcName = "XLFStackUnsafeDump"
  elif id == 0x00000140: funcName = "XLFPriorityQueueAdd"
  elif id == 0x00000141: funcName = "XLFPriorityQueueAllocated"
  elif id == 0x00000142: funcName = "XLFPriorityQueueCreate"
  elif id == 0x00000143: funcName = "XLFPriorityQueueDestroy"
  elif id == 0x00000144: funcName = "XLFPriorityQueueGetEntryCount"
  elif id == 0x00000145: funcName = "XLFPriorityQueueIsEmpty"
  elif id == 0x00000146: funcName = "XLFPriorityQueueRemoveFirst"
  elif id == 0x00000147: funcName = "XLFPriorityQueueRemove"
  elif id == 0x00000148: funcName = "XLFPriorityQueueUnsafeDump"
  elif id == 0x0000014A: funcName = "XLFHashTableAdd"
  elif id == 0x0000014B: funcName = "XLFHashTableAllocated"
  elif id == 0x0000014C: funcName = "XLFHashTableCreate"
  elif id == 0x0000014D: funcName = "XLFHashTableDestroy"
  elif id == 0x0000014E: funcName = "XLFHashTableGetEntryCount"
  elif id == 0x0000014F: funcName = "XLFHashTableIsEmpty"
  elif id == 0x00000150: funcName = "XLFHashTableRemoveFirst"
  elif id == 0x00000151: funcName = "XLFHashTableRemove"
  elif id == 0x00000152: funcName = "XLFHashTableUnsafeDump"
  elif id == 0x00000154: funcName = "XLFPoolAcquireLock"
  elif id == 0x00000155: funcName = "XLFPoolAllocated"
  elif id == 0x00000156: funcName = "XLFPoolCreate"
  elif id == 0x00000157: funcName = "XLFPoolCreateLock"
  elif id == 0x00000158: funcName = "XLFPoolDestroy"
  elif id == 0x00000159: funcName = "XLFPoolDestroyLock"
  elif id == 0x0000015A: funcName = "XLFPoolIncreaseEvents"
  elif id == 0x0000015B: funcName = "XLFPoolIncreaseLocks"
  elif id == 0x0000015C: funcName = "XLFPoolInitializeLock"
  elif id == 0x0000015D: funcName = "XLFPoolNumberOfEvents"
  elif id == 0x0000015E: funcName = "XLFPoolNumberOfLocks"
  elif id == 0x0000015F: funcName = "XLFPoolReleaseLock"
  elif id == 0x00000163: funcName = "XLFStartLog"
  elif id == 0x00000164: funcName = "XLFStartUserLog"
  elif id == 0x00000165: funcName = "XLFInitializeLog"
  elif id == 0x00000166: funcName = "XLFInitializeUserLog"
  elif id == 0x00000168: funcName = "XLFEndLog"
  elif id == 0x00000169: funcName = "XLFLogPrint"
  elif id == 0x0000016A: funcName = "XLFLogPrintV"
  elif id == 0x0000016B: funcName = "XLFLogBuffer"
  elif id == 0x0000016C: funcName = "XLFLogMessageStats"
  elif id == 0x00000172: funcName = "XLockFreeGetErrorHandler"
  elif id == 0x00000173: funcName = "XLockFreeSetErrorHandler"
  
  return funcName
  
def xboxkrnlNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)

  if id == 0x00000001: funcName = "DbgBreakPoint"
  elif id == 0x00000002: funcName = "DbgBreakPointWithStatus"
  elif id == 0x00000003: funcName = "DbgPrint"
  elif id == 0x00000004: funcName = "DbgPrompt"
  elif id == 0x00000005: funcName = "DumpGetRawDumpInfo"
  elif id == 0x00000006: funcName = "DumpWriteDump"
  elif id == 0x00000007: funcName = "ExAcquireReadWriteLockExclusive"
  elif id == 0x00000008: funcName = "ExAcquireReadWriteLockShared"
  elif id == 0x00000009: funcName = "ExAllocatePool"
  elif id == 0x0000000A: funcName = "ExAllocatePoolWithTag"
  elif id == 0x0000000B: funcName = "ExAllocatePoolTypeWithTag"
  elif id == 0x0000000C: funcName = "ExConsoleGameRegion"
  elif id == 0x0000000D: funcName = "ExCreateThread"
  elif id == 0x0000000E: funcName = "ExEventObjectType"
  elif id == 0x0000000F: funcName = "ExFreePool"
  elif id == 0x00000010: funcName = "ExGetXConfigSetting"
  elif id == 0x00000011: funcName = "ExInitializeReadWriteLock"
  elif id == 0x00000012: funcName = "ExMutantObjectType"
  elif id == 0x00000013: funcName = "ExQueryPoolBlockSize"
  elif id == 0x00000014: funcName = "ExRegisterThreadNotification"
  elif id == 0x00000015: funcName = "ExRegisterTitleTerminateNotification"
  elif id == 0x00000016: funcName = "ExReleaseReadWriteLock"
  elif id == 0x00000017: funcName = "ExSemaphoreObjectType"
  elif id == 0x00000018: funcName = "ExSetXConfigSetting"
  elif id == 0x00000019: funcName = "ExTerminateThread"
  elif id == 0x0000001A: funcName = "ExTerminateTitleProcess"
  elif id == 0x0000001B: funcName = "ExThreadObjectType"
  elif id == 0x0000001C: funcName = "ExTimerObjectType"
  elif id == 0x0000001D: funcName = "MmDoubleMapMemory"
  elif id == 0x0000001E: funcName = "MmUnmapMemory"
  elif id == 0x0000001F: funcName = "XeKeysGetConsoleCertificate"
  elif id == 0x00000020: funcName = "FscGetCacheElementCount"
  elif id == 0x00000021: funcName = "FscSetCacheElementCount"
  elif id == 0x00000022: funcName = "HalGetCurrentAVPack"
  elif id == 0x00000023: funcName = "HalGpioControl"
  elif id == 0x00000024: funcName = "HalOpenCloseODDTray"
  elif id == 0x00000025: funcName = "HalReadWritePCISpace"
  elif id == 0x00000026: funcName = "HalRegisterPowerDownNotification"
  elif id == 0x00000027: funcName = "HalRegisterSMCNotification"
  elif id == 0x00000028: funcName = "HalReturnToFirmware"
  elif id == 0x00000029: funcName = "HalSendSMCMessage"
  elif id == 0x0000002A: funcName = "HalSetAudioEnable"
  elif id == 0x0000002B: funcName = "InterlockedFlushSList"
  elif id == 0x0000002C: funcName = "InterlockedPopEntrySList"
  elif id == 0x0000002D: funcName = "InterlockedPushEntrySList"
  elif id == 0x0000002E: funcName = "IoAcquireDeviceObjectLock"
  elif id == 0x0000002F: funcName = "IoAllocateIrp"
  elif id == 0x00000030: funcName = "IoBuildAsynchronousFsdRequest"
  elif id == 0x00000031: funcName = "IoBuildDeviceIoControlRequest"
  elif id == 0x00000032: funcName = "IoBuildSynchronousFsdRequest"
  elif id == 0x00000033: funcName = "IoCallDriver"
  elif id == 0x00000034: funcName = "IoCheckShareAccess"
  elif id == 0x00000035: funcName = "IoCompleteRequest"
  elif id == 0x00000036: funcName = "IoCompletionObjectType"
  elif id == 0x00000037: funcName = "IoCreateDevice"
  elif id == 0x00000038: funcName = "IoCreateFile"
  elif id == 0x00000039: funcName = "IoDeleteDevice"
  elif id == 0x0000003A: funcName = "IoDeviceObjectType"
  elif id == 0x0000003B: funcName = "IoDismountVolume"
  elif id == 0x0000003C: funcName = "IoDismountVolumeByFileHandle"
  elif id == 0x0000003D: funcName = "IoDismountVolumeByName"
  elif id == 0x0000003E: funcName = "IoFileObjectType"
  elif id == 0x0000003F: funcName = "IoFreeIrp"
  elif id == 0x00000040: funcName = "IoInitializeIrp"
  elif id == 0x00000041: funcName = "IoInvalidDeviceRequest"
  elif id == 0x00000042: funcName = "ExSetBetaFeaturesEnabled"
  elif id == 0x00000043: funcName = "IoQueueThreadIrp"
  elif id == 0x00000044: funcName = "IoReleaseDeviceObjectLock"
  elif id == 0x00000045: funcName = "IoRemoveShareAccess"
  elif id == 0x00000046: funcName = "IoSetIoCompletion"
  elif id == 0x00000047: funcName = "IoSetShareAccess"
  elif id == 0x00000048: funcName = "IoStartNextPacket"
  elif id == 0x00000049: funcName = "IoStartNextPacketByKey"
  elif id == 0x0000004A: funcName = "IoStartPacket"
  elif id == 0x0000004B: funcName = "IoSynchronousDeviceIoControlRequest"
  elif id == 0x0000004C: funcName = "IoSynchronousFsdRequest"
  elif id == 0x0000004D: funcName = "KeAcquireSpinLockAtRaisedIrql"
  elif id == 0x0000004E: funcName = "KeAlertResumeThread"
  elif id == 0x0000004F: funcName = "KeAlertThread"
  elif id == 0x00000050: funcName = "KeBlowFuses"
  elif id == 0x00000051: funcName = "KeBoostPriorityThread"
  elif id == 0x00000052: funcName = "KeBugCheck"
  elif id == 0x00000053: funcName = "KeBugCheckEx"
  elif id == 0x00000054: funcName = "KeCancelTimer"
  elif id == 0x00000055: funcName = "KeConnectInterrupt"
  elif id == 0x00000056: funcName = "KeContextFromKframes"
  elif id == 0x00000057: funcName = "KeContextToKframes"
  elif id == 0x00000058: funcName = "KeCreateUserMode"
  elif id == 0x00000059: funcName = "KeDebugMonitorData"
  elif id == 0x0000005A: funcName = "KeDelayExecutionThread"
  elif id == 0x0000005B: funcName = "KeDeleteUserMode"
  elif id == 0x0000005C: funcName = "KeDisconnectInterrupt"
  elif id == 0x0000005D: funcName = "KeEnableFpuExceptions"
  elif id == 0x0000005E: funcName = "KeEnablePPUPerformanceMonitor"
  elif id == 0x0000005F: funcName = "KeEnterCriticalRegion"
  elif id == 0x00000060: funcName = "KeEnterUserMode"
  elif id == 0x00000061: funcName = "KeFlushCacheRange"
  elif id == 0x00000062: funcName = "KeFlushCurrentEntireTb"
  elif id == 0x00000063: funcName = "KeFlushEntireTb"
  elif id == 0x00000064: funcName = "KeFlushUserModeCurrentTb"
  elif id == 0x00000065: funcName = "KeFlushUserModeTb"
  elif id == 0x00000066: funcName = "KeGetCurrentProcessType"
  elif id == 0x00000067: funcName = "KeGetPMWRegister"
  elif id == 0x00000068: funcName = "KeGetPRVRegister"
  elif id == 0x00000069: funcName = "KeGetSocRegister"
  elif id == 0x0000006A: funcName = "KeGetSpecialPurposeRegister"
  elif id == 0x0000006B: funcName = "KeLockL2"
  elif id == 0x0000006C: funcName = "KeUnlockL2"
  elif id == 0x0000006D: funcName = "KeInitializeApc"
  elif id == 0x0000006E: funcName = "KeInitializeDeviceQueue"
  elif id == 0x0000006F: funcName = "KeInitializeDpc"
  elif id == 0x00000070: funcName = "KeInitializeEvent"
  elif id == 0x00000071: funcName = "KeInitializeInterrupt"
  elif id == 0x00000072: funcName = "KeInitializeMutant"
  elif id == 0x00000073: funcName = "KeInitializeQueue"
  elif id == 0x00000074: funcName = "KeInitializeSemaphore"
  elif id == 0x00000075: funcName = "KeInitializeTimerEx"
  elif id == 0x00000076: funcName = "KeInsertByKeyDeviceQueue"
  elif id == 0x00000077: funcName = "KeInsertDeviceQueue"
  elif id == 0x00000078: funcName = "KeInsertHeadQueue"
  elif id == 0x00000079: funcName = "KeInsertQueue"
  elif id == 0x0000007A: funcName = "KeInsertQueueApc"
  elif id == 0x0000007B: funcName = "KeInsertQueueDpc"
  elif id == 0x0000007C: funcName = "KeIpiGenericCall"
  elif id == 0x0000007D: funcName = "KeLeaveCriticalRegion"
  elif id == 0x0000007E: funcName = "KeLeaveUserMode"
  elif id == 0x0000007F: funcName = "KePulseEvent"
  elif id == 0x00000080: funcName = "KeQueryBackgroundProcessors"
  elif id == 0x00000081: funcName = "KeQueryBasePriorityThread"
  elif id == 0x00000082: funcName = "KeQueryInterruptTime"
  elif id == 0x00000083: funcName = "KeQueryPerformanceFrequency"
  elif id == 0x00000084: funcName = "KeQuerySystemTime"
  elif id == 0x00000085: funcName = "KeRaiseIrqlToDpcLevel"
  elif id == 0x00000086: funcName = "KeRegisterDriverNotification"
  elif id == 0x00000087: funcName = "KeReleaseMutant"
  elif id == 0x00000088: funcName = "KeReleaseSemaphore"
  elif id == 0x00000089: funcName = "KeReleaseSpinLockFromRaisedIrql"
  elif id == 0x0000008A: funcName = "KeRemoveByKeyDeviceQueue"
  elif id == 0x0000008B: funcName = "KeRemoveDeviceQueue"
  elif id == 0x0000008C: funcName = "KeRemoveEntryDeviceQueue"
  elif id == 0x0000008D: funcName = "KeRemoveQueue"
  elif id == 0x0000008E: funcName = "KeRemoveQueueDpc"
  elif id == 0x0000008F: funcName = "KeResetEvent"
  elif id == 0x00000090: funcName = "KeRestoreFloatingPointState"
  elif id == 0x00000091: funcName = "KeRestoreVectorUnitState"
  elif id == 0x00000092: funcName = "KeResumeThread"
  elif id == 0x00000093: funcName = "KeRetireDpcList"
  elif id == 0x00000094: funcName = "KeRundownQueue"
  elif id == 0x00000095: funcName = "KeSaveFloatingPointState"
  elif id == 0x00000096: funcName = "KeSaveVectorUnitState"
  elif id == 0x00000097: funcName = "KeSetAffinityThread"
  elif id == 0x00000098: funcName = "KeSetBackgroundProcessors"
  elif id == 0x00000099: funcName = "KeSetBasePriorityThread"
  elif id == 0x0000009A: funcName = "KeSetCurrentProcessType"
  elif id == 0x0000009B: funcName = "KeSetCurrentStackPointers"
  elif id == 0x0000009C: funcName = "KeSetDisableBoostThread"
  elif id == 0x0000009D: funcName = "KeSetEvent"
  elif id == 0x0000009E: funcName = "KeSetEventBoostPriority"
  elif id == 0x0000009F: funcName = "KeSetPMWRegister"
  elif id == 0x000000A0: funcName = "KeSetPowerMode"
  elif id == 0x000000A1: funcName = "KeSetPRVRegister"
  elif id == 0x000000A2: funcName = "KeSetPriorityClassThread"
  elif id == 0x000000A3: funcName = "KeSetPriorityThread"
  elif id == 0x000000A4: funcName = "KeSetSocRegister"
  elif id == 0x000000A5: funcName = "KeSetSpecialPurposeRegister"
  elif id == 0x000000A6: funcName = "KeSetTimer"
  elif id == 0x000000A7: funcName = "KeSetTimerEx"
  elif id == 0x000000A8: funcName = "KeStallExecutionProcessor"
  elif id == 0x000000A9: funcName = "KeSuspendThread"
  elif id == 0x000000AA: funcName = "KeSweepDcacheRange"
  elif id == 0x000000AB: funcName = "KeSweepIcacheRange"
  elif id == 0x000000AC: funcName = "KeTestAlertThread"
  elif id == 0x000000AD: funcName = "KeTimeStampBundle"
  elif id == 0x000000AE: funcName = "KeTryToAcquireSpinLockAtRaisedIrql"
  elif id == 0x000000AF: funcName = "KeWaitForMultipleObjects"
  elif id == 0x000000B0: funcName = "KeWaitForSingleObject"
  elif id == 0x000000B1: funcName = "KfAcquireSpinLock"
  elif id == 0x000000B2: funcName = "KfRaiseIrql"
  elif id == 0x000000B3: funcName = "KfLowerIrql"
  elif id == 0x000000B4: funcName = "KfReleaseSpinLock"
  elif id == 0x000000B5: funcName = "KiBugCheckData"
  elif id == 0x000000B6: funcName = "LDICreateDecompression"
  elif id == 0x000000B7: funcName = "LDIDecompress"
  elif id == 0x000000B8: funcName = "LDIDestroyDecompression"
  elif id == 0x000000B9: funcName = "MmAllocatePhysicalMemory"
  elif id == 0x000000BA: funcName = "MmAllocatePhysicalMemoryEx"
  elif id == 0x000000BB: funcName = "MmCreateKernelStack"
  elif id == 0x000000BC: funcName = "MmDeleteKernelStack"
  elif id == 0x000000BD: funcName = "MmFreePhysicalMemory"
  elif id == 0x000000BE: funcName = "MmGetPhysicalAddress"
  elif id == 0x000000BF: funcName = "MmIsAddressValid"
  elif id == 0x000000C0: funcName = "MmLockAndMapSegmentArray"
  elif id == 0x000000C1: funcName = "MmLockUnlockBufferPages"
  elif id == 0x000000C2: funcName = "MmMapIoSpace"
  elif id == 0x000000C3: funcName = "MmPersistPhysicalMemoryAllocation"
  elif id == 0x000000C4: funcName = "MmQueryAddressProtect"
  elif id == 0x000000C5: funcName = "MmQueryAllocationSize"
  elif id == 0x000000C6: funcName = "MmQueryStatistics"
  elif id == 0x000000C7: funcName = "MmSetAddressProtect"
  elif id == 0x000000C8: funcName = "MmSplitPhysicalMemoryAllocation"
  elif id == 0x000000C9: funcName = "MmUnlockAndUnmapSegmentArray"
  elif id == 0x000000CA: funcName = "MmUnmapIoSpace"
  elif id == 0x000000CB: funcName = "Nls844UnicodeCaseTable"
  elif id == 0x000000CC: funcName = "NtAllocateVirtualMemory"
  elif id == 0x000000CD: funcName = "NtCancelTimer"
  elif id == 0x000000CE: funcName = "NtClearEvent"
  elif id == 0x000000CF: funcName = "NtClose"
  elif id == 0x000000D0: funcName = "NtCreateDirectoryObject"
  elif id == 0x000000D1: funcName = "NtCreateEvent"
  elif id == 0x000000D2: funcName = "NtCreateFile"
  elif id == 0x000000D3: funcName = "NtCreateIoCompletion"
  elif id == 0x000000D4: funcName = "NtCreateMutant"
  elif id == 0x000000D5: funcName = "NtCreateSemaphore"
  elif id == 0x000000D6: funcName = "NtCreateSymbolicLinkObject"
  elif id == 0x000000D7: funcName = "NtCreateTimer"
  elif id == 0x000000D8: funcName = "NtDeleteFile"
  elif id == 0x000000D9: funcName = "NtDeviceIoControlFile"
  elif id == 0x000000DA: funcName = "NtDuplicateObject"
  elif id == 0x000000DB: funcName = "NtFlushBuffersFile"
  elif id == 0x000000DC: funcName = "NtFreeVirtualMemory"
  elif id == 0x000000DD: funcName = "NtMakeTemporaryObject"
  elif id == 0x000000DE: funcName = "NtOpenDirectoryObject"
  elif id == 0x000000DF: funcName = "NtOpenFile"
  elif id == 0x000000E0: funcName = "NtOpenSymbolicLinkObject"
  elif id == 0x000000E1: funcName = "NtProtectVirtualMemory"
  elif id == 0x000000E2: funcName = "NtPulseEvent"
  elif id == 0x000000E3: funcName = "NtQueueApcThread"
  elif id == 0x000000E4: funcName = "NtQueryDirectoryFile"
  elif id == 0x000000E5: funcName = "NtQueryDirectoryObject"
  elif id == 0x000000E6: funcName = "NtQueryEvent"
  elif id == 0x000000E7: funcName = "NtQueryFullAttributesFile"
  elif id == 0x000000E8: funcName = "NtQueryInformationFile"
  elif id == 0x000000E9: funcName = "NtQueryIoCompletion"
  elif id == 0x000000EA: funcName = "NtQueryMutant"
  elif id == 0x000000EB: funcName = "NtQuerySemaphore"
  elif id == 0x000000EC: funcName = "NtQuerySymbolicLinkObject"
  elif id == 0x000000ED: funcName = "NtQueryTimer"
  elif id == 0x000000EE: funcName = "NtQueryVirtualMemory"
  elif id == 0x000000EF: funcName = "NtQueryVolumeInformationFile"
  elif id == 0x000000F0: funcName = "NtReadFile"
  elif id == 0x000000F1: funcName = "NtReadFileScatter"
  elif id == 0x000000F2: funcName = "NtReleaseMutant"
  elif id == 0x000000F3: funcName = "NtReleaseSemaphore"
  elif id == 0x000000F4: funcName = "NtRemoveIoCompletion"
  elif id == 0x000000F5: funcName = "NtResumeThread"
  elif id == 0x000000F6: funcName = "NtSetEvent"
  elif id == 0x000000F7: funcName = "NtSetInformationFile"
  elif id == 0x000000F8: funcName = "NtSetIoCompletion"
  elif id == 0x000000F9: funcName = "NtSetSystemTime"
  elif id == 0x000000FA: funcName = "NtSetTimerEx"
  elif id == 0x000000FB: funcName = "NtSignalAndWaitForSingleObjectEx"
  elif id == 0x000000FC: funcName = "NtSuspendThread"
  elif id == 0x000000FD: funcName = "NtWaitForSingleObjectEx"
  elif id == 0x000000FE: funcName = "NtWaitForMultipleObjectsEx"
  elif id == 0x000000FF: funcName = "NtWriteFile"
  elif id == 0x00000100: funcName = "NtWriteFileGather"
  elif id == 0x00000101: funcName = "NtYieldExecution"
  elif id == 0x00000102: funcName = "ObCreateObject"
  elif id == 0x00000103: funcName = "ObCreateSymbolicLink"
  elif id == 0x00000104: funcName = "ObDeleteSymbolicLink"
  elif id == 0x00000105: funcName = "ObDereferenceObject"
  elif id == 0x00000106: funcName = "ObDirectoryObjectType"
  elif id == 0x00000107: funcName = "ObGetWaitableObject"
  elif id == 0x00000108: funcName = "ObInsertObject"
  elif id == 0x00000109: funcName = "ObIsTitleObject"
  elif id == 0x0000010A: funcName = "ObLookupAnyThreadByThreadId"
  elif id == 0x0000010B: funcName = "ObLookupThreadByThreadId"
  elif id == 0x0000010C: funcName = "ObMakeTemporaryObject"
  elif id == 0x0000010D: funcName = "ObOpenObjectByName"
  elif id == 0x0000010E: funcName = "ObOpenObjectByPointer"
  elif id == 0x0000010F: funcName = "ObReferenceObject"
  elif id == 0x00000110: funcName = "ObReferenceObjectByHandle"
  elif id == 0x00000111: funcName = "ObReferenceObjectByName"
  elif id == 0x00000112: funcName = "ObSymbolicLinkObjectType"
  elif id == 0x00000113: funcName = "ObTranslateSymbolicLink"
  elif id == 0x00000114: funcName = "RtlAnsiStringToUnicodeString"
  elif id == 0x00000115: funcName = "RtlAppendStringToString"
  elif id == 0x00000116: funcName = "RtlAppendUnicodeStringToString"
  elif id == 0x00000117: funcName = "RtlAppendUnicodeToString"
  elif id == 0x00000118: funcName = "RtlAssert"
  elif id == 0x00000119: funcName = "RtlCaptureContext"
  elif id == 0x0000011A: funcName = "RtlCompareMemory"
  elif id == 0x0000011B: funcName = "RtlCompareMemoryUlong"
  elif id == 0x0000011C: funcName = "RtlCompareString"
  elif id == 0x0000011D: funcName = "RtlCompareStringN"
  elif id == 0x0000011E: funcName = "RtlCompareUnicodeString"
  elif id == 0x0000011F: funcName = "RtlCompareUnicodeStringN"
  elif id == 0x00000120: funcName = "RtlCompareUtf8ToUnicode"
  elif id == 0x00000121: funcName = "RtlCopyString"
  elif id == 0x00000122: funcName = "RtlCopyUnicodeString"
  elif id == 0x00000123: funcName = "RtlCreateUnicodeString"
  elif id == 0x00000124: funcName = "RtlDowncaseUnicodeChar"
  elif id == 0x00000125: funcName = "RtlEnterCriticalSection"
  elif id == 0x00000126: funcName = "RtlFillMemoryUlong"
  elif id == 0x00000127: funcName = "RtlFreeAnsiString"
  elif id == 0x00000128: funcName = "RtlFreeUnicodeString"
  elif id == 0x00000129: funcName = "RtlGetCallersAddress"
  elif id == 0x0000012A: funcName = "RtlGetStackLimits"
  elif id == 0x0000012B: funcName = "RtlImageXexHeaderField"
  elif id == 0x0000012C: funcName = "RtlInitAnsiString"
  elif id == 0x0000012D: funcName = "RtlInitUnicodeString"
  elif id == 0x0000012E: funcName = "RtlInitializeCriticalSection"
  elif id == 0x0000012F: funcName = "RtlInitializeCriticalSectionAndSpinCount"
  elif id == 0x00000130: funcName = "RtlLeaveCriticalSection"
  elif id == 0x00000131: funcName = "RtlLookupFunctionEntry"
  elif id == 0x00000132: funcName = "RtlLowerChar"
  elif id == 0x00000133: funcName = "RtlMultiByteToUnicodeN"
  elif id == 0x00000134: funcName = "RtlMultiByteToUnicodeSize"
  elif id == 0x00000135: funcName = "RtlNtStatusToDosError"
  elif id == 0x00000136: funcName = "RtlRaiseException"
  elif id == 0x00000137: funcName = "RtlRaiseStatus"
  elif id == 0x00000138: funcName = "RtlRip"
  elif id == 0x00000139: funcName = "_scprintf"
  elif id == 0x0000013A: funcName = "_snprintf"
  elif id == 0x0000013B: funcName = "sprintf"
  elif id == 0x0000013C: funcName = "_scwprintf"
  elif id == 0x0000013D: funcName = "_snwprintf"
  elif id == 0x0000013E: funcName = "swprintf"
  elif id == 0x0000013F: funcName = "RtlTimeFieldsToTime"
  elif id == 0x00000140: funcName = "RtlTimeToTimeFields"
  elif id == 0x00000141: funcName = "RtlTryEnterCriticalSection"
  elif id == 0x00000142: funcName = "RtlUnicodeStringToAnsiString"
  elif id == 0x00000143: funcName = "RtlUnicodeToMultiByteN"
  elif id == 0x00000144: funcName = "RtlUnicodeToMultiByteSize"
  elif id == 0x00000145: funcName = "RtlUnicodeToUtf8"
  elif id == 0x00000146: funcName = "RtlUnicodeToUtf8Size"
  elif id == 0x00000147: funcName = "RtlUnwind"
  elif id == 0x00000148: funcName = "RtlUnwind2"
  elif id == 0x00000149: funcName = "RtlUpcaseUnicodeChar"
  elif id == 0x0000014A: funcName = "RtlUpperChar"
  elif id == 0x0000014B: funcName = "RtlVirtualUnwind"
  elif id == 0x0000014C: funcName = "_vscprintf"
  elif id == 0x0000014D: funcName = "_vsnprintf"
  elif id == 0x0000014E: funcName = "vsprintf"
  elif id == 0x0000014F: funcName = "_vscwprintf"
  elif id == 0x00000150: funcName = "_vsnwprintf"
  elif id == 0x00000151: funcName = "vswprintf"
  elif id == 0x00000152: funcName = "KeTlsAlloc"
  elif id == 0x00000153: funcName = "KeTlsFree"
  elif id == 0x00000154: funcName = "KeTlsGetValue"
  elif id == 0x00000155: funcName = "KeTlsSetValue"
  elif id == 0x00000156: funcName = "XboxHardwareInfo"
  elif id == 0x00000157: funcName = "XboxKrnlBaseVersion"
  elif id == 0x00000158: funcName = "XboxKrnlVersion"
  elif id == 0x00000159: funcName = "XeCryptAesKey"
  elif id == 0x0000015A: funcName = "XeCryptAesEcb"
  elif id == 0x0000015B: funcName = "XeCryptAesCbc"
  elif id == 0x0000015C: funcName = "XeCryptBnDwLeDhEqualBase"
  elif id == 0x0000015D: funcName = "XeCryptBnDwLeDhInvalBase"
  elif id == 0x0000015E: funcName = "XeCryptBnDwLeDhModExp"
  elif id == 0x0000015F: funcName = "XeCryptBnDw_Copy"
  elif id == 0x00000160: funcName = "XeCryptBnDw_SwapLeBe"
  elif id == 0x00000161: funcName = "XeCryptBnDw_Zero"
  elif id == 0x00000162: funcName = "XeCryptBnDwLePkcs1Format"
  elif id == 0x00000163: funcName = "XeCryptBnDwLePkcs1Verify"
  elif id == 0x00000164: funcName = "XeCryptBnQwBeSigCreate"
  elif id == 0x00000165: funcName = "XeCryptBnQwBeSigFormat"
  elif id == 0x00000166: funcName = "XeCryptBnQwBeSigVerify"
  elif id == 0x00000167: funcName = "XeCryptBnQwNeModExp"
  elif id == 0x00000168: funcName = "XeCryptBnQwNeModExpRoot"
  elif id == 0x00000169: funcName = "XeCryptBnQwNeModInv"
  elif id == 0x0000016A: funcName = "XeCryptBnQwNeModMul"
  elif id == 0x0000016B: funcName = "XeCryptBnQwNeRsaKeyGen"
  elif id == 0x0000016C: funcName = "XeCryptBnQwNeRsaPrvCrypt"
  elif id == 0x0000016D: funcName = "XeCryptBnQwNeRsaPubCrypt"
  elif id == 0x0000016E: funcName = "XeCryptBnQw_Copy"
  elif id == 0x0000016F: funcName = "XeCryptBnQw_SwapDwQw"
  elif id == 0x00000170: funcName = "XeCryptBnQw_SwapDwQwLeBe"
  elif id == 0x00000171: funcName = "XeCryptBnQw_SwapLeBe"
  elif id == 0x00000172: funcName = "XeCryptBnQw_Zero"
  elif id == 0x00000173: funcName = "XeCryptChainAndSumMac"
  elif id == 0x00000174: funcName = "XeCryptDesParity"
  elif id == 0x00000175: funcName = "XeCryptDesKey"
  elif id == 0x00000176: funcName = "XeCryptDesEcb"
  elif id == 0x00000177: funcName = "XeCryptDesCbc"
  elif id == 0x00000178: funcName = "XeCryptDes3Key"
  elif id == 0x00000179: funcName = "XeCryptDes3Ecb"
  elif id == 0x0000017A: funcName = "XeCryptDes3Cbc"
  elif id == 0x0000017B: funcName = "XeCryptHmacMd5Init"
  elif id == 0x0000017C: funcName = "XeCryptHmacMd5Update"
  elif id == 0x0000017D: funcName = "XeCryptHmacMd5Final"
  elif id == 0x0000017E: funcName = "XeCryptHmacMd5"
  elif id == 0x0000017F: funcName = "XeCryptHmacShaInit"
  elif id == 0x00000180: funcName = "XeCryptHmacShaUpdate"
  elif id == 0x00000181: funcName = "XeCryptHmacShaFinal"
  elif id == 0x00000182: funcName = "XeCryptHmacSha"
  elif id == 0x00000183: funcName = "XeCryptHmacShaVerify"
  elif id == 0x00000184: funcName = "XeCryptMd5Init"
  elif id == 0x00000185: funcName = "XeCryptMd5Update"
  elif id == 0x00000186: funcName = "XeCryptMd5Final"
  elif id == 0x00000187: funcName = "XeCryptMd5"
  elif id == 0x00000188: funcName = "XeCryptParveEcb"
  elif id == 0x00000189: funcName = "XeCryptParveCbcMac"
  elif id == 0x0000018A: funcName = "XeCryptRandom"
  elif id == 0x0000018B: funcName = "XeCryptRc4Key"
  elif id == 0x0000018C: funcName = "XeCryptRc4Ecb"
  elif id == 0x0000018D: funcName = "XeCryptRc4"
  elif id == 0x0000018E: funcName = "XeCryptRotSumSha"
  elif id == 0x0000018F: funcName = "XeCryptShaInit"
  elif id == 0x00000190: funcName = "XeCryptShaUpdate"
  elif id == 0x00000191: funcName = "XeCryptShaFinal"
  elif id == 0x00000192: funcName = "XeCryptSha"
  elif id == 0x00000193: funcName = "XexExecutableModuleHandle"
  elif id == 0x00000194: funcName = "XexCheckExecutablePrivilege"
  elif id == 0x00000195: funcName = "XexGetModuleHandle"
  elif id == 0x00000196: funcName = "XexGetModuleSection"
  elif id == 0x00000197: funcName = "XexGetProcedureAddress"
  elif id == 0x00000198: funcName = "XexLoadExecutable"
  elif id == 0x00000199: funcName = "XexLoadImage"
  elif id == 0x0000019A: funcName = "XexLoadImageFromMemory"
  elif id == 0x0000019B: funcName = "XexLoadImageHeaders"
  elif id == 0x0000019C: funcName = "XexPcToFileHeader"
  elif id == 0x0000019D: funcName = "KiApcNormalRoutineNop_"
  elif id == 0x0000019E: funcName = "XexRegisterPatchDescriptor"
  elif id == 0x0000019F: funcName = "XexSendDeferredNotifications"
  elif id == 0x000001A0: funcName = "XexStartExecutable"
  elif id == 0x000001A1: funcName = "XexUnloadImage"
  elif id == 0x000001A2: funcName = "XexUnloadImageAndExitThread"
  elif id == 0x000001A3: funcName = "XexUnloadTitleModules"
  elif id == 0x000001A4: funcName = "XexVerifyImageHeaders"
  elif id == 0x000001A5: funcName = "__C_specific_handler"
  elif id == 0x000001A6: funcName = "DbgLoadImageSymbols"
  elif id == 0x000001A7: funcName = "DbgUnLoadImageSymbols"
  elif id == 0x000001A8: funcName = "RtlImageDirectoryEntryToData"
  elif id == 0x000001A9: funcName = "RtlImageNtHeader"
  elif id == 0x000001AA: funcName = "ExDebugMonitorService"
  elif id == 0x000001AB: funcName = "MmDbgReadCheck"
  elif id == 0x000001AC: funcName = "MmDbgReleaseAddress"
  elif id == 0x000001AD: funcName = "MmDbgWriteCheck"
  elif id == 0x000001AE: funcName = "ExLoadedCommandLine"
  elif id == 0x000001AF: funcName = "ExLoadedImageName"
  elif id == 0x000001B0: funcName = "VdBlockUntilGUIIdle"
  elif id == 0x000001B1: funcName = "VdCallGraphicsNotificationRoutines"
  elif id == 0x000001B2: funcName = "VdDisplayFatalError"
  elif id == 0x000001B3: funcName = "VdEnableClosedCaption"
  elif id == 0x000001B4: funcName = "VdEnableDisableClockGating"
  elif id == 0x000001B5: funcName = "VdEnableDisablePowerSavingMode"
  elif id == 0x000001B6: funcName = "VdEnableRingBufferRPtrWriteBack"
  elif id == 0x000001B7: funcName = "VdGenerateGPUCSCCoefficients"
  elif id == 0x000001B8: funcName = "VdGetClosedCaptionReadyStatus"
  elif id == 0x000001B9: funcName = "VdGetCurrentDisplayGamma"
  elif id == 0x000001BA: funcName = "VdGetCurrentDisplayInformation"
  elif id == 0x000001BB: funcName = "VdGetDisplayModeOverride"
  elif id == 0x000001BC: funcName = "VdGetGraphicsAsicID"
  elif id == 0x000001BD: funcName = "VdGetSystemCommandBuffer"
  elif id == 0x000001BE: funcName = "VdGlobalDevice"
  elif id == 0x000001BF: funcName = "VdGlobalXamDevice"
  elif id == 0x000001C0: funcName = "VdGpuClockInMHz"
  elif id == 0x000001C1: funcName = "VdHSIOCalibrationLock"
  elif id == 0x000001C2: funcName = "VdInitializeEngines"
  elif id == 0x000001C3: funcName = "VdInitializeRingBuffer"
  elif id == 0x000001C4: funcName = "VdInitializeScaler"
  elif id == 0x000001C5: funcName = "VdInitializeScalerCommandBuffer"
  elif id == 0x000001C6: funcName = "VdIsHSIOTrainingSucceeded"
  elif id == 0x000001C7: funcName = "VdPersistDisplay"
  elif id == 0x000001C8: funcName = "VdQuerySystemCommandBuffer"
  elif id == 0x000001C9: funcName = "VdQueryVideoFlags"
  elif id == 0x000001CA: funcName = "VdQueryVideoMode"
  elif id == 0x000001CB: funcName = "VdReadDVERegisterUlong"
  elif id == 0x000001CC: funcName = "VdReadWriteHSIOCalibrationFlag"
  elif id == 0x000001CD: funcName = "VdRegisterGraphicsNotification"
  elif id == 0x000001CE: funcName = "VdRegisterXamGraphicsNotification"
  elif id == 0x000001CF: funcName = "VdSendClosedCaptionData"
  elif id == 0x000001D0: funcName = "VdSetCGMSOption"
  elif id == 0x000001D1: funcName = "VdSetColorProfileAdjustment"
  elif id == 0x000001D2: funcName = "VdSetCscMatricesOverride"
  elif id == 0x000001D3: funcName = "VdSetDisplayMode"
  elif id == 0x000001D4: funcName = "VdSetDisplayModeOverride"
  elif id == 0x000001D5: funcName = "VdSetGraphicsInterruptCallback"
  elif id == 0x000001D6: funcName = "VdSetHDCPOption"
  elif id == 0x000001D7: funcName = "VdSetMacrovisionOption"
  elif id == 0x000001D8: funcName = "VdSetSystemCommandBuffer"
  elif id == 0x000001D9: funcName = "VdSetSystemCommandBufferGpuIdentifierAddress"
  elif id == 0x000001DA: funcName = "VdSetWSSData"
  elif id == 0x000001DB: funcName = "VdSetWSSOption"
  elif id == 0x000001DC: funcName = "VdShutdownEngines"
  elif id == 0x000001DD: funcName = "VdTurnDisplayOff"
  elif id == 0x000001DE: funcName = "VdTurnDisplayOn"
  elif id == 0x000001DF: funcName = "KiApcNormalRoutineNop"
  elif id == 0x000001E0: funcName = "VdWriteDVERegisterUlong"
  elif id == 0x000001E1: funcName = "XVoicedHeadsetPresent"
  elif id == 0x000001E2: funcName = "XVoicedSubmitPacket"
  elif id == 0x000001E3: funcName = "XVoicedClose"
  elif id == 0x000001E4: funcName = "XVoicedActivate"
  elif id == 0x000001E5: funcName = "XInputdGetCapabilities"
  elif id == 0x000001E6: funcName = "XInputdReadState"
  elif id == 0x000001E7: funcName = "XInputdWriteState"
  elif id == 0x000001E8: funcName = "XInputdNotify"
  elif id == 0x000001E9: funcName = "XInputdRawState"
  elif id == 0x000001EA: funcName = "HidGetCapabilities"
  elif id == 0x000001EB: funcName = "HidReadKeys"
  elif id == 0x000001EC: funcName = "XInputdGetDeviceStats"
  elif id == 0x000001ED: funcName = "XInputdResetDevice"
  elif id == 0x000001EE: funcName = "XInputdSetRingOfLight"
  elif id == 0x000001EF: funcName = "XInputdSetRFPowerMode"
  elif id == 0x000001F0: funcName = "XInputdSetRadioFrequency"
  elif id == 0x000001F1: funcName = "HidGetLastInputTime"
  elif id == 0x000001F2: funcName = "XAudioRenderDriverInitialize"
  elif id == 0x000001F3: funcName = "XAudioRegisterRenderDriverClient"
  elif id == 0x000001F4: funcName = "XAudioUnregisterRenderDriverClient"
  elif id == 0x000001F5: funcName = "XAudioSubmitRenderDriverFrame"
  elif id == 0x000001F6: funcName = "XAudioRenderDriverLock"
  elif id == 0x000001F7: funcName = "XAudioGetVoiceCategoryVolumeChangeMask"
  elif id == 0x000001F8: funcName = "XAudioGetVoiceCategoryVolume"
  elif id == 0x000001F9: funcName = "XAudioSetVoiceCategoryVolume"
  elif id == 0x000001FA: funcName = "XAudioBeginDigitalBypassMode"
  elif id == 0x000001FB: funcName = "XAudioEndDigitalBypassMode"
  elif id == 0x000001FC: funcName = "XAudioSubmitDigitalPacket"
  elif id == 0x000001FD: funcName = "XAudioQueryDriverPerformance"
  elif id == 0x000001FE: funcName = "XAudioGetRenderDriverThread"
  elif id == 0x000001FF: funcName = "XAudioGetSpeakerConfig"
  elif id == 0x00000200: funcName = "XAudioSetSpeakerConfig"
  elif id == 0x00000201: funcName = "NicSetUnicastAddress"
  elif id == 0x00000202: funcName = "NicAttach"
  elif id == 0x00000203: funcName = "NicDetach"
  elif id == 0x00000204: funcName = "NicXmit"
  elif id == 0x00000205: funcName = "NicUpdateMcastMembership"
  elif id == 0x00000206: funcName = "NicFlushXmitQueue"
  elif id == 0x00000207: funcName = "NicShutdown"
  elif id == 0x00000208: funcName = "NicGetLinkState"
  elif id == 0x00000209: funcName = "NicGetStats"
  elif id == 0x0000020A: funcName = "NicGetOpt"
  elif id == 0x0000020B: funcName = "NicSetOpt"
  elif id == 0x0000020C: funcName = "DrvSetSysReqCallback"
  elif id == 0x0000020D: funcName = "DrvSetUserBindingCallback"
  elif id == 0x0000020E: funcName = "DrvSetContentStorageCallback"
  elif id == 0x0000020F: funcName = "DrvSetAutobind"
  elif id == 0x00000210: funcName = "DrvGetContentStorageNotification"
  elif id == 0x00000211: funcName = "MtpdBeginTransaction"
  elif id == 0x00000212: funcName = "MtpdCancelTransaction"
  elif id == 0x00000213: funcName = "MtpdEndTransaction"
  elif id == 0x00000214: funcName = "MtpdGetCurrentDevices"
  elif id == 0x00000215: funcName = "MtpdReadData"
  elif id == 0x00000216: funcName = "MtpdReadEvent"
  elif id == 0x00000217: funcName = "MtpdResetDevice"
  elif id == 0x00000218: funcName = "MtpdSendData"
  elif id == 0x00000219: funcName = "MtpdVerifyProximity"
  elif id == 0x0000021A: funcName = "XUsbcamSetCaptureMode"
  elif id == 0x0000021B: funcName = "XUsbcamGetConfig"
  elif id == 0x0000021C: funcName = "XUsbcamSetConfig"
  elif id == 0x0000021D: funcName = "XUsbcamGetState"
  elif id == 0x0000021E: funcName = "XUsbcamReadFrame"
  elif id == 0x0000021F: funcName = "XUsbcamSnapshot"
  elif id == 0x00000220: funcName = "XUsbcamSetView"
  elif id == 0x00000221: funcName = "XUsbcamGetView"
  elif id == 0x00000222: funcName = "XUsbcamCreate"
  elif id == 0x00000223: funcName = "XUsbcamDestroy"
  elif id == 0x00000224: funcName = "XMACreateContext"
  elif id == 0x00000225: funcName = "XMAInitializeContext"
  elif id == 0x00000226: funcName = "XMAReleaseContext"
  elif id == 0x00000227: funcName = "XMAEnableContext"
  elif id == 0x00000228: funcName = "XMADisableContext"
  elif id == 0x00000229: funcName = "XMAGetOutputBufferWriteOffset"
  elif id == 0x0000022A: funcName = "XMASetOutputBufferReadOffset"
  elif id == 0x0000022B: funcName = "XMAGetOutputBufferReadOffset"
  elif id == 0x0000022C: funcName = "XMASetOutputBufferValid"
  elif id == 0x0000022D: funcName = "XMAIsOutputBufferValid"
  elif id == 0x0000022E: funcName = "XMASetInputBuffer0Valid"
  elif id == 0x0000022F: funcName = "XMAIsInputBuffer0Valid"
  elif id == 0x00000230: funcName = "XMASetInputBuffer1Valid"
  elif id == 0x00000231: funcName = "XMAIsInputBuffer1Valid"
  elif id == 0x00000232: funcName = "XMASetInputBuffer0"
  elif id == 0x00000233: funcName = "XMASetInputBuffer1"
  elif id == 0x00000234: funcName = "XMAGetPacketMetadata"
  elif id == 0x00000235: funcName = "XMABlockWhileInUse"
  elif id == 0x00000236: funcName = "XMASetLoopData"
  elif id == 0x00000237: funcName = "XMASetInputBufferReadOffset"
  elif id == 0x00000238: funcName = "XMAGetInputBufferReadOffset"
  elif id == 0x00000239: funcName = "ExIsBetaFeatureEnabled"
  elif id == 0x0000023A: funcName = "XeKeysGetFactoryChallenge"
  elif id == 0x0000023B: funcName = "XeKeysSetFactoryResponse"
  elif id == 0x0000023C: funcName = "XeKeysInitializeFuses"
  elif id == 0x0000023D: funcName = "XeKeysSaveBootLoader"
  elif id == 0x0000023E: funcName = "XeKeysSaveKeyVault"
  elif id == 0x0000023F: funcName = "XeKeysGetStatus"
  elif id == 0x00000240: funcName = "XeKeysGeneratePrivateKey"
  elif id == 0x00000241: funcName = "XeKeysGetKeyProperties"
  elif id == 0x00000242: funcName = "XeKeysSetKey"
  elif id == 0x00000243: funcName = "XeKeysGenerateRandomKey"
  elif id == 0x00000244: funcName = "XeKeysGetKey"
  elif id == 0x00000245: funcName = "XeKeysGetDigest"
  elif id == 0x00000246: funcName = "XeKeysGetConsoleID"
  elif id == 0x00000247: funcName = "XeKeysGetConsoleType"
  elif id == 0x00000248: funcName = "XeKeysQwNeRsaPrvCrypt"
  elif id == 0x00000249: funcName = "XeKeysHmacSha"
  elif id == 0x0000024A: funcName = "XInputdPassThroughRFCommand"
  elif id == 0x0000024B: funcName = "XeKeysAesCbc"
  elif id == 0x0000024C: funcName = "XeKeysDes2Cbc"
  elif id == 0x0000024D: funcName = "XeKeysDesCbc"
  elif id == 0x0000024E: funcName = "XeKeysObscureKey"
  elif id == 0x0000024F: funcName = "XeKeysHmacShaUsingKey"
  elif id == 0x00000250: funcName = "XeKeysSaveBootLoaderEx"
  elif id == 0x00000251: funcName = "XeKeysAesCbcUsingKey"
  elif id == 0x00000252: funcName = "XeKeysDes2CbcUsingKey"
  elif id == 0x00000253: funcName = "XeKeysDesCbcUsingKey"
  elif id == 0x00000254: funcName = "XeKeysObfuscate"
  elif id == 0x00000255: funcName = "XeKeysUnObfuscate"
  elif id == 0x00000256: funcName = "XeKeysConsolePrivateKeySign"
  elif id == 0x00000257: funcName = "XeKeysConsoleSignatureVerification"
  elif id == 0x00000258: funcName = "XeKeysVerifyRSASignature"
  elif id == 0x00000259: funcName = "StfsCreateDevice"
  elif id == 0x0000025A: funcName = "StfsControlDevice"
  elif id == 0x0000025B: funcName = "VdSwap"
  elif id == 0x0000025C: funcName = "HalFsbInterruptCount"
  elif id == 0x0000025D: funcName = "XeKeysSaveSystemUpdate"
  elif id == 0x0000025E: funcName = "XeKeysLockSystemUpdate"
  elif id == 0x0000025F: funcName = "XeKeysExecute"
  elif id == 0x00000260: funcName = "XeKeysGetVersions"
  elif id == 0x00000261: funcName = "XInputdPowerDownDevice"
  elif id == 0x00000262: funcName = "AniBlockOnAnimation"
  elif id == 0x00000263: funcName = "AniTerminateAnimation"
  elif id == 0x00000264: funcName = "XUsbcamReset"
  elif id == 0x00000265: funcName = "AniSetLogo"
  elif id == 0x00000266: funcName = "KeCertMonitorData"
  elif id == 0x00000267: funcName = "HalIsExecutingPowerDownDpc"
  elif id == 0x00000268: funcName = "VdInitializeEDRAM"
  elif id == 0x00000269: funcName = "VdRetrainEDRAM"
  elif id == 0x0000026A: funcName = "VdRetrainEDRAMWorker"
  elif id == 0x0000026B: funcName = "VdHSIOTrainCount"
  elif id == 0x0000026C: funcName = "HalGetPowerUpCause"
  elif id == 0x0000026D: funcName = "VdHSIOTrainingStatus"
  elif id == 0x0000026E: funcName = "RgcBindInfo"
  elif id == 0x0000026F: funcName = "VdReadEEDIDBlock"
  elif id == 0x00000270: funcName = "VdEnumerateVideoModes"
  elif id == 0x00000271: funcName = "VdEnableHDCP"
  elif id == 0x00000272: funcName = "VdRegisterHDCPNotification"
  elif id == 0x00000273: funcName = "HidReadMouseChanges"
  elif id == 0x00000274: funcName = "DumpSetCollectionFacility"
  elif id == 0x00000275: funcName = "XexTransformImageKey"
  elif id == 0x00000276: funcName = "XAudioOverrideSpeakerConfig"
  elif id == 0x00000277: funcName = "XInputdReadTextKeystroke"
  elif id == 0x00000278: funcName = "DrvXenonButtonPressed"
  elif id == 0x00000279: funcName = "DrvBindToUser"
  elif id == 0x0000027A: funcName = "XexGetModuleImportVersions"
  elif id == 0x0000027B: funcName = "RtlComputeCrc32"
  elif id == 0x0000027C: funcName = "XeKeysSetRevocationList"
  elif id == 0x0000027D: funcName = "HalRegisterPowerDownCallback"
  elif id == 0x0000027E: funcName = "VdGetDisplayDiscoveryData"
  elif id == 0x0000027F: funcName = "XInputdSendStayAliveRequest"
  elif id == 0x00000280: funcName = "XVoicedSendVPort"
  elif id == 0x00000281: funcName = "XVoicedGetBatteryStatus"
  elif id == 0x00000282: funcName = "XInputdFFGetDeviceInfo"
  elif id == 0x00000283: funcName = "XInputdFFSetEffect"
  elif id == 0x00000284: funcName = "XInputdFFUpdateEffect"
  elif id == 0x00000285: funcName = "XInputdFFEffectOperation"
  elif id == 0x00000286: funcName = "XInputdFFDeviceControl"
  elif id == 0x00000287: funcName = "XInputdFFSetDeviceGain"
  elif id == 0x00000288: funcName = "XInputdFFCancelIo"
  elif id == 0x00000289: funcName = "XInputdFFSetRumble"
  elif id == 0x0000028A: funcName = "NtAllocateEncryptedMemory"
  elif id == 0x0000028B: funcName = "NtFreeEncryptedMemory"
  elif id == 0x0000028C: funcName = "XeKeysExSaveKeyVault"
  elif id == 0x0000028D: funcName = "XeKeysExSetKey"
  elif id == 0x0000028E: funcName = "XeKeysExGetKey"
  elif id == 0x0000028F: funcName = "DrvSetDeviceConfigChangeCallback"
  elif id == 0x00000290: funcName = "DrvDeviceConfigChange"
  elif id == 0x00000291: funcName = "HalRegisterHdDvdRomNotification"
  elif id == 0x00000292: funcName = "XeKeysSecurityInitialize"
  elif id == 0x00000293: funcName = "XeKeysSecurityLoadSettings"
  elif id == 0x00000294: funcName = "XeKeysSecuritySaveSettings"
  elif id == 0x00000295: funcName = "XeKeysSecuritySetDetected"
  elif id == 0x00000296: funcName = "XeKeysSecurityGetDetected"
  elif id == 0x00000297: funcName = "XeKeysSecuritySetActivated"
  elif id == 0x00000298: funcName = "XeKeysSecurityGetActivated"
  elif id == 0x00000299: funcName = "XeKeysDvdAuthAP25InstallTable"
  elif id == 0x0000029A: funcName = "XeKeysDvdAuthAP25GetTableVersion"
  elif id == 0x0000029B: funcName = "XeKeysGetProtectedFlag"
  elif id == 0x0000029C: funcName = "XeKeysSetProtectedFlag"
  elif id == 0x0000029D: funcName = "KeEnablePFMInterrupt"
  elif id == 0x0000029E: funcName = "KeDisablePFMInterrupt"
  elif id == 0x0000029F: funcName = "KeSetProfilerISR"
  elif id == 0x000002A0: funcName = "VdStartDisplayDiscovery"
  elif id == 0x000002A1: funcName = "VdSetHDCPRevocationList"
  elif id == 0x000002A2: funcName = "XeKeysGetUpdateSequence"
  elif id == 0x000002A3: funcName = "XeKeysDvdAuthExActivate"
  elif id == 0x000002A4: funcName = "KeGetImagePageTableEntry"
  elif id == 0x000002A5: funcName = "HalRegisterBackgroundModeTransitionCallback"
  elif id == 0x000002A6: funcName = "AniStartBootAnimation"
  elif id == 0x000002A7: funcName = "HalClampUnclampOutputDACs"
  elif id == 0x000002A8: funcName = "HalPowerDownToBackgroundMode"
  elif id == 0x000002A9: funcName = "HalNotifyAddRemoveBackgroundTask"
  elif id == 0x000002AA: funcName = "HalCallBackgroundModeNotificationRoutines"
  elif id == 0x000002AB: funcName = "HalFsbResetCount"
  elif id == 0x000002AC: funcName = "HalGetMemoryInformation"
  elif id == 0x000002AD: funcName = "XInputdGetLastTextInputTime"
  elif id == 0x000002AE: funcName = "VdEnableWMAProOverHDMI"
  elif id == 0x000002AF: funcName = "XeKeysRevokeSaveSettings"
  elif id == 0x000002B0: funcName = "XInputdSetTextMessengerIndicator"
  elif id == 0x000002B1: funcName = "MicDeviceRequest"
  elif id == 0x000002B2: funcName = "XeKeysGetMediaID"
  elif id == 0x000002B3: funcName = "XeKeysLoadKeyVault"
  elif id == 0x000002B4: funcName = "KeGetVidInfo"
  elif id == 0x000002B5: funcName = "HalNotifyBackgroundModeTransitionComplete"
  elif id == 0x000002B6: funcName = "IoAcquireCancelSpinLock"
  elif id == 0x000002B7: funcName = "IoReleaseCancelSpinLock"
  elif id == 0x000002B8: funcName = "NtCancelIoFile"
  elif id == 0x000002B9: funcName = "NtCancelIoFileEx"
  elif id == 0x000002BA: funcName = "HalFinalizePowerLossRecovery"
  elif id == 0x000002BB: funcName = "HalSetPowerLossRecovery"
  elif id == 0x000002BC: funcName = "ExReadModifyWriteXConfigSettingUlong"
  elif id == 0x000002BD: funcName = "HalRegisterXamPowerDownCallback"
  elif id == 0x000002BE: funcName = "ExCancelAlarm"
  elif id == 0x000002BF: funcName = "ExInitializeAlarm"
  elif id == 0x000002C0: funcName = "ExSetAlarm"
  elif id == 0x000002C1: funcName = "XexActivationGetNonce"
  elif id == 0x000002C2: funcName = "XexActivationSetLicense"
  elif id == 0x000002C3: funcName = "IptvSetBoundaryKey"
  elif id == 0x000002C4: funcName = "IptvSetSessionKey"
  elif id == 0x000002C5: funcName = "IptvVerifyOmac1Signature"
  elif id == 0x000002C6: funcName = "IptvGetAesCtrTransform"
  elif id == 0x000002C7: funcName = "SataCdRomRecordReset"
  elif id == 0x000002C8: funcName = "XInputdSetTextDeviceKeyLocks"
  elif id == 0x000002C9: funcName = "XInputdGetTextDeviceKeyLocks"
  elif id == 0x000002CA: funcName = "XexActivationVerifyOwnership"
  elif id == 0x000002CB: funcName = "XexDisableVerboseDbgPrint"
  elif id == 0x000002CC: funcName = "SvodCreateDevice"
  elif id == 0x000002CD: funcName = "RtlCaptureStackBackTrace"
  elif id == 0x000002CE: funcName = "XeKeysRevokeUpdateDynamic"
  elif id == 0x000002CF: funcName = "XexImportTraceEnable"
  elif id == 0x000002D0: funcName = "ExRegisterXConfigNotification"
  elif id == 0x000002D1: funcName = "XeKeysSecuritySetStat"
  elif id == 0x000002D2: funcName = "VdQueryRealVideoMode"
  elif id == 0x000002D3: funcName = "XexSetExecutablePrivilege"
  elif id == 0x000002D4: funcName = "XAudioSuspendRenderDriverClients"
  elif id == 0x000002D5: funcName = "IptvGetSessionKeyHash"
  elif id == 0x000002D6: funcName = "VdSetCGMSState"
  elif id == 0x000002D7: funcName = "VdSetSCMSState"
  elif id == 0x000002D8: funcName = "KeFlushMultipleTb"
  elif id == 0x000002D9: funcName = "VdGetOption"
  elif id == 0x000002DA: funcName = "VdSetOption"
  elif id == 0x000002DB: funcName = "UsbdBootEnumerationDoneEvent"
  elif id == 0x000002DC: funcName = "StfsDeviceErrorEvent"
  elif id == 0x000002DD: funcName = "ExTryToAcquireReadWriteLockExclusive"
  elif id == 0x000002DE: funcName = "ExTryToAcquireReadWriteLockShared"
  elif id == 0x000002DF: funcName = "XexSetLastKdcTime"
  elif id == 0x000002E0: funcName = "XInputdControl"
  elif id == 0x000002E1: funcName = "RmcDeviceRequest"
  elif id == 0x000002E2: funcName = "LDIResetDecompression"
  elif id == 0x000002E3: funcName = "NicRegisterDevice"
  elif id == 0x000002E4: funcName = "UsbdAddDeviceComplete"
  elif id == 0x000002E5: funcName = "UsbdCancelAsyncTransfer"
  elif id == 0x000002E6: funcName = "UsbdGetDeviceSpeed"
  elif id == 0x000002E7: funcName = "UsbdGetDeviceTopology"
  elif id == 0x000002E8: funcName = "UsbdGetEndpointDescriptor"
  elif id == 0x000002E9: funcName = "UsbdIsDeviceAuthenticated"
  elif id == 0x000002EA: funcName = "UsbdOpenDefaultEndpoint"
  elif id == 0x000002EB: funcName = "UsbdOpenEndpoint"
  elif id == 0x000002EC: funcName = "UsbdQueueAsyncTransfer"
  elif id == 0x000002ED: funcName = "UsbdQueueCloseDefaultEndpoint"
  elif id == 0x000002EE: funcName = "UsbdQueueCloseEndpoint"
  elif id == 0x000002EF: funcName = "UsbdRemoveDeviceComplete"
  elif id == 0x000002F0: funcName = "KeRemoveQueueApc"
  elif id == 0x000002F1: funcName = "UsbdDriverLoadRequiredEvent"
  elif id == 0x000002F2: funcName = "UsbdGetRequiredDrivers"
  elif id == 0x000002F3: funcName = "UsbdRegisterDriverObject"
  elif id == 0x000002F4: funcName = "UsbdUnregisterDriverObject"
  elif id == 0x000002F5: funcName = "UsbdCallAndBlockOnDpcRoutine"
  elif id == 0x000002F6: funcName = "UsbdResetDevice"
  elif id == 0x000002F7: funcName = "UsbdGetDeviceDescriptor"
  elif id == 0x000002F8: funcName = "NomnilGetExtension"
  elif id == 0x000002F9: funcName = "NomnilStartCloseDevice"
  elif id == 0x000002FA: funcName = "WifiBeginAuthentication"
  elif id == 0x000002FB: funcName = "WifiCheckCounterMeasures"
  elif id == 0x000002FC: funcName = "WifiChooseAuthenCipherSetFromBSSID"
  elif id == 0x000002FD: funcName = "WifiCompleteAuthentication"
  elif id == 0x000002FE: funcName = "WifiGetAssociationIE"
  elif id == 0x000002FF: funcName = "WifiOnMICError"
  elif id == 0x00000300: funcName = "WifiPrepareAuthenticationContext"
  elif id == 0x00000301: funcName = "WifiRecvEAPOLPacket"
  elif id == 0x00000302: funcName = "WifiDeduceNetworkType"
  elif id == 0x00000303: funcName = "NicUnregisterDevice"
  elif id == 0x00000304: funcName = "DumpXitThread"
  elif id == 0x00000305: funcName = "XInputdSetWifiChannel"
  elif id == 0x00000306: funcName = "NomnilSetLed"
  elif id == 0x00000307: funcName = "WifiCalculateRegulatoryDomain"
  elif id == 0x00000308: funcName = "WifiSelectAdHocChannel"
  elif id == 0x00000309: funcName = "WifiChannelToFrequency"
  elif id == 0x0000030A: funcName = "MmGetPoolPagesType"
  elif id == 0x0000030B: funcName = "ExExpansionInstall"
  elif id == 0x0000030C: funcName = "ExExpansionCall"
  elif id == 0x0000030D: funcName = "PsCamDeviceRequest"
  elif id == 0x0000030E: funcName = "McaDeviceRequest"
  elif id == 0x0000030F: funcName = "DetroitDeviceRequest"
  elif id == 0x00000310: funcName = "XeCryptSha256Init"
  elif id == 0x00000311: funcName = "XeCryptSha256Update"
  elif id == 0x00000312: funcName = "XeCryptSha256Final"
  elif id == 0x00000313: funcName = "XeCryptSha256"
  elif id == 0x00000314: funcName = "XeCryptSha384Init"
  elif id == 0x00000315: funcName = "XeCryptSha384Update"
  elif id == 0x00000316: funcName = "XInputdGetDevicePid"
  elif id == 0x00000317: funcName = "HalGetNotedArgonErrors"
  elif id == 0x00000318: funcName = "XeCryptSha384Final"
  elif id == 0x00000319: funcName = "HalReadArgonEeprom"
  elif id == 0x0000031A: funcName = "HalWriteArgonEeprom"
  elif id == 0x0000031B: funcName = "XeKeysFcrtLoad"
  elif id == 0x0000031C: funcName = "XeKeysFcrtSave"
  elif id == 0x0000031D: funcName = "XeKeysFcrtSet"
  elif id == 0x0000031E: funcName = "XeCryptSha384"
  elif id == 0x0000031F: funcName = "XeCryptSha512Init"
  elif id == 0x00000320: funcName = "XAudioRegisterRenderDriverMECClient"
  elif id == 0x00000321: funcName = "XAudioUnregisterRenderDriverMECClient"
  elif id == 0x00000322: funcName = "XAudioCaptureRenderDriverFrame"
  elif id == 0x00000323: funcName = "XeCryptSha512Update"
  elif id == 0x00000324: funcName = "XeCryptSha512Final"
  elif id == 0x00000325: funcName = "XeCryptSha512"
  elif id == 0x00000326: funcName = "XeCryptBnQwNeCompare"
  elif id == 0x00000327: funcName = "XVoicedGetDirectionalData"
  elif id == 0x00000328: funcName = "DrvSetMicArrayStartCallback"
  elif id == 0x00000329: funcName = "DevAuthGetStatistics"
  elif id == 0x0000032A: funcName = "NullCableRequest"
  elif id == 0x0000032B: funcName = "XeKeysRevokeIsDeviceRevoked"
  elif id == 0x0000032C: funcName = "DumpUpdateDumpSettings"
  elif id == 0x0000032D: funcName = "EtxConsumerDisableEventType"
  elif id == 0x0000032E: funcName = "EtxConsumerEnableEventType"
  elif id == 0x0000032F: funcName = "EtxConsumerProcessLogs"
  elif id == 0x00000330: funcName = "EtxConsumerRegister"
  elif id == 0x00000331: funcName = "EtxConsumerUnregister"
  elif id == 0x00000332: funcName = "EtxProducerLog"
  elif id == 0x00000333: funcName = "EtxProducerLogV"
  elif id == 0x00000334: funcName = "EtxProducerRegister"
  elif id == 0x00000335: funcName = "EtxProducerUnregister"
  elif id == 0x00000336: funcName = "EtxConsumerFlushBuffers"
  elif id == 0x00000337: funcName = "EtxProducerLogXwpp"
  elif id == 0x00000338: funcName = "EtxProducerLogXwppV"
  elif id == 0x00000339: funcName = "UsbdEnableDisableRootHubPort"
  elif id == 0x0000033A: funcName = "EtxBufferRegister"
  elif id == 0x0000033B: funcName = "EtxBufferUnregister"
  elif id == 0x0000033C: funcName = "DumpRegisterDedicatedDataBlock"
  elif id == 0x0000033D: funcName = "XeKeysDvdAuthExSave"
  elif id == 0x0000033E: funcName = "XeKeysDvdAuthExInstall"
  elif id == 0x0000033F: funcName = "XexShimDisable"
  elif id == 0x00000340: funcName = "XexShimEnable"
  elif id == 0x00000341: funcName = "XexShimEntryDisable"
  elif id == 0x00000342: funcName = "XexShimEntryEnable"
  elif id == 0x00000343: funcName = "XexShimEntryRegister"
  elif id == 0x00000344: funcName = "XexShimLock"
  elif id == 0x00000345: funcName = "XboxKrnlVersion4Digit"
  elif id == 0x00000346: funcName = "XeKeysObfuscateEx"
  elif id == 0x00000347: funcName = "XeKeysUnObfuscateEx"
  elif id == 0x00000348: funcName = "XexTitleHash"
  elif id == 0x00000349: funcName = "XexTitleHashClose"
  elif id == 0x0000034A: funcName = "XexTitleHashContinue"
  elif id == 0x0000034B: funcName = "XexTitleHashOpen"
  elif id == 0x0000034C: funcName = "XAudioGetRenderDriverTic"
  elif id == 0x0000034D: funcName = "XAudioEnableDucker"
  elif id == 0x0000034E: funcName = "XAudioSetDuckerLevel"
  elif id == 0x0000034F: funcName = "XAudioIsDuckerEnabled"
  elif id == 0x00000350: funcName = "XAudioGetDuckerLevel"
  elif id == 0x00000351: funcName = "XAudioGetDuckerThreshold"
  elif id == 0x00000352: funcName = "XAudioSetDuckerThreshold"
  elif id == 0x00000353: funcName = "XAudioGetDuckerAttackTime"
  elif id == 0x00000354: funcName = "XAudioSetDuckerAttackTime"
  elif id == 0x00000355: funcName = "XAudioGetDuckerReleaseTime"
  elif id == 0x00000356: funcName = "XAudioSetDuckerReleaseTime"
  elif id == 0x00000357: funcName = "XAudioGetDuckerHoldTime"
  elif id == 0x00000358: funcName = "XAudioSetDuckerHoldTime"
  elif id == 0x00000359: funcName = "DevAuthShouldAlwaysEnforce"
  elif id == 0x0000035A: funcName = "XAudioGetUnderrunCount"
  elif id == 0x0000035B: funcName = "DrvSetAudioLatencyCallback"
  elif id == 0x0000035C: funcName = "XVoicedIsActiveProcess"
  elif id == 0x0000035D: funcName = "KeExecuteOnProtectedStack"
  elif id == 0x0000035E: funcName = "XeKeysVerifyPIRSSignature"
  elif id == 0x0000035F: funcName = "XeCryptAesCtr"
  elif id == 0x00000360: funcName = "XeCryptAesCbcMac"
  elif id == 0x00000361: funcName = "XeCryptAesDmMac"
  elif id == 0x00000362: funcName = "EmaExecute"
  elif id == 0x00000363: funcName = "XeKeysGetTruncatedSecondaryConsoleId"
  elif id == 0x00000364: funcName = "ExFreeDebugPool"
  elif id == 0x00000365: funcName = "VdQueryVideoCapabilities"
  elif id == 0x00000366: funcName = "UsbdGetDeviceRootPortType"
  elif id == 0x00000367: funcName = "VdGet3dVideoFormat"
  elif id == 0x00000368: funcName = "VdGetWSS2Data"
  elif id == 0x00000369: funcName = "VdSet3dVideoFormat"
  elif id == 0x0000036A: funcName = "VdSetWSS2Data"
  elif id == 0x0000036B: funcName = "XexReserveCodeBuffer"
  elif id == 0x0000036C: funcName = "XexCommitCodeBuffer"
  elif id == 0x0000036D: funcName = "RtlSetVectoredExceptionHandler"
  elif id == 0x0000036E: funcName = "RtlClearVectoredExceptionHandler"
  elif id == 0x0000036F: funcName = "XAudioSetProcessFrameCallback"
  elif id == 0x00000370: funcName = "UsbdGetRootHubDeviceNode"
  elif id == 0x00000371: funcName = "UsbdGetPortDeviceNode"
  elif id == 0x00000372: funcName = "UsbdGetNatalHub"
  elif id == 0x00000373: funcName = "UsbdGetNatalHardwareVersion"
  elif id == 0x00000374: funcName = "UsbdNatalHubRegisterNotificationCallback"
  elif id == 0x00000375: funcName = "KeCallAndBlockOnDpcRoutine"
  elif id == 0x00000376: funcName = "KeCallAndWaitForDpcRoutine"
  elif id == 0x00000377: funcName = "TidDeviceRequest"
  elif id == 0x00000378: funcName = "DmPrintData"
  elif id == 0x00000379: funcName = "VdSetStudioRGBMode"
  elif id == 0x0000037A: funcName = "UsbdTitleDriverResetAllUnrecognizedPorts"
  elif id == 0x0000037B: funcName = "UsbdTitleDriverSetUnrecognizedPort"
  elif id == 0x0000037C: funcName = "UsbdResetEndpoint"
  elif id == 0x0000037D: funcName = "UsbdSetTimer"
  elif id == 0x0000037E: funcName = "UsbdCancelTimer"
  elif id == 0x0000037F: funcName = "UsbdQueueIsochTransfer"
  elif id == 0x00000380: funcName = "KeSetPageRelocationCallback"
  elif id == 0x00000381: funcName = "XexRegisterUsermodeModule"
  elif id == 0x00000383: funcName = "TitleDeviceAuthRequest"
  elif id == 0x00000384: funcName = "KeRegisterSwapNotification"
  elif id == 0x00000385: funcName = "XInputdGetFailedConnectionOrBind"
  elif id == 0x00000386: funcName = "XInputdSetFailedConnectionOrBindCallback"
  elif id == 0x00000388: funcName = "XInputdSetMinMaxAuthDelay"
  elif id == 0x00000389: funcName = "VgcHandler_SetHandlers"
  elif id == 0x0000038A: funcName = "VvcHandlerCancelTransfers"
  elif id == 0x0000038B: funcName = "VvcHandlerRetrieveVoiceExtension"
  elif id == 0x0000038D: funcName = "MmResetLowestAvailablePages"
  elif id == 0x00000394: funcName = "VeSetHandlers"
  elif id == 0x00000395: funcName = "HalConfigureVeDevice"
  elif id == 0x00000396: funcName = "XeCryptSha224Init"
  elif id == 0x00000397: funcName = "XeCryptAesCreateKeySchedule"
  elif id == 0x00000398: funcName = "XeCryptAesEncryptOne"
  elif id == 0x00000399: funcName = "XeCryptAesDecryptOne"
  elif id == 0x0000039A: funcName = "XeCryptAesCbcEncrypt"
  elif id == 0x0000039B: funcName = "XeCryptAesCbcDecrypt"
  elif id == 0x0000039C: funcName = "XeCryptAesGcmInitialize"
  elif id == 0x0000039D: funcName = "XeCryptAesGcmUpdate"
  elif id == 0x0000039E: funcName = "XeCryptAesGcmFinalize"
  elif id == 0x0000039F: funcName = "XeCryptEccGetCurveParameters"
  elif id == 0x000003A0: funcName = "XeCryptEccEcdhGenerateKeypair"
  elif id == 0x000003A1: funcName = "XeCryptEccEcdhExponentiate"
  elif id == 0x000003A2: funcName = "XeCryptEccEcdsaGenerateSignature"
  elif id == 0x000003A3: funcName = "XeCryptEccEcdsaVerifySignature"
  
  return funcName
  
def syscallNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  if id == 0x00000000: funcName = "HvxGetVersions"
  elif id == 0x00000001: funcName = "HvxStartupProcessors"
  elif id == 0x00000002: funcName = "HvxQuiesceProcessor"
  elif id == 0x00000003: funcName = "HvxFlushEntireTb"
  elif id == 0x00000004: funcName = "HvxFlushSingleTb"
  elif id == 0x00000005: funcName = "HvxRelocateAndFlush"
  elif id == 0x00000006: funcName = "HvxGetSpecialPurposeRegister"
  elif id == 0x00000007: funcName = "HvxSetSpecialPurposeRegister"
  elif id == 0x00000008: funcName = "HvxGetSocRegister"
  elif id == 0x00000009: funcName = "HvxSetSocRegister"
  elif id == 0x0000000A: funcName = "HvxSetTimeBaseToZero"
  elif id == 0x0000000B: funcName = "HvxZeroPage"
  elif id == 0x0000000C: funcName = "HvxFlushDcacheRange"
  elif id == 0x0000000D: funcName = "HvxPostOutput"
  elif id == 0x0000000E: funcName = "HvxEnablePPUPerformanceMonitor"
  elif id == 0x0000000F: funcName = "HvxGetImagePageTableEntry"
  elif id == 0x00000010: funcName = "HvxSetImagePageTableEntry"
  elif id == 0x00000011: funcName = "HvxCreateImageMapping"
  elif id == 0x00000012: funcName = "HvxMapImagePage"
  elif id == 0x00000013: funcName = "HvxCompleteImageMapping"
  elif id == 0x00000014: funcName = "HvxLoadImageData"
  elif id == 0x00000015: funcName = "HvxFinishImageDataLoad"
  elif id == 0x00000016: funcName = "HvxStartResolveImports"
  elif id == 0x00000017: funcName = "HvxResolveImports"
  elif id == 0x00000018: funcName = "HvxFinishImageLoad"
  elif id == 0x00000019: funcName = "HvxAbandonImageLoad"
  elif id == 0x0000001A: funcName = "HvxUnmapImagePages"
  elif id == 0x0000001B: funcName = "HvxUnmapImage"
  elif id == 0x0000001C: funcName = "HvxUnmapImageRange"
  elif id == 0x0000001D: funcName = "HvxCreateUserMode"
  elif id == 0x0000001E: funcName = "HvxDeleteUserMode"
  elif id == 0x0000001F: funcName = "HvxFlushUserModeTb"
  elif id == 0x00000020: funcName = "HvxSetPowerMode"
  elif id == 0x00000021: funcName = "HvxShadowBoot"
  elif id == 0x00000022: funcName = "HvxBlowFuses"
  elif id == 0x00000023: funcName = "HvxFsbInterrupt"
  elif id == 0x00000024: funcName = "HvxLockL2"
  elif id == 0x00000025: funcName = "HvxDvdAuthBuildNVPage"
  elif id == 0x00000026: funcName = "HvxDvdAuthVerifyNVPage"
  elif id == 0x00000027: funcName = "HvxDvdAuthRecordAuthenticationPage"
  elif id == 0x00000028: funcName = "HvxDvdAuthRecordXControl"
  elif id == 0x00000029: funcName = "HvxDvdAuthGetAuthPage"
  elif id == 0x0000002A: funcName = "HvxDvdAuthVerifyAuthPage"
  elif id == 0x0000002B: funcName = "HvxDvdAuthGetNextLBAIndex"
  elif id == 0x0000002C: funcName = "HvxDvdAuthVerifyLBA"
  elif id == 0x0000002D: funcName = "HvxDvdAuthClearDiscAuthInfo"
  elif id == 0x0000002E: funcName = "HvxKeysInitialize"
  elif id == 0x0000002F: funcName = "HvxKeysGetKeyProperties"
  elif id == 0x00000030: funcName = "HvxKeysGetStatus"
  elif id == 0x00000031: funcName = "HvxKeysGenerateRandomKey"
  elif id == 0x00000032: funcName = "HvxKeysGetFactoryChallenge"
  elif id == 0x00000033: funcName = "HvxKeysSetFactoryResponse"
  elif id == 0x00000034: funcName = "HvxKeysSaveBootLoader"
  elif id == 0x00000035: funcName = "HvxKeysSaveKeyVault"
  elif id == 0x00000036: funcName = "HvxKeysSetKey"
  elif id == 0x00000037: funcName = "HvxKeysGetKey"
  elif id == 0x00000038: funcName = "HvxKeysGetDigest"
  elif id == 0x00000039: funcName = "HvxKeysRsaPrvCrypt"
  elif id == 0x0000003A: funcName = "HvxKeysHmacSha"
  elif id == 0x0000003B: funcName = "HvxKeysAesCbc"
  elif id == 0x0000003C: funcName = "HvxKeysDes2Cbc"
  elif id == 0x0000003D: funcName = "HvxKeysDesCbc"
  elif id == 0x0000003E: funcName = "HvxKeysObscureKey"
  elif id == 0x0000003F: funcName = "HvxKeysSaveSystemUpdate"
  elif id == 0x00000040: funcName = "HvxKeysExecute"
  elif id == 0x00000041: funcName = "HvxDvdAuthTestMode"
  elif id == 0x00000042: funcName = "HvxEnableTimebase"
  elif id == 0x00000043: funcName = "HvxHdcpCalculateMi"
  elif id == 0x00000044: funcName = "HvxHdcpCalculateAKsvSignature"
  elif id == 0x00000045: funcName = "HvxHdcpCalculateBKsvSignature"
  elif id == 0x00000046: funcName = "HvxSetRevocationList"
  elif id == 0x00000047: funcName = "HvxEncryptedReserveAllocation"
  elif id == 0x00000048: funcName = "HvxEncryptedReleaseAllocation"
  elif id == 0x00000049: funcName = "HvxEncryptedEncryptAllocation"
  elif id == 0x0000004A: funcName = "HvxEncryptedSweepAddressRange"
  elif id == 0x0000004B: funcName = "HvxKeysExCreateKeyVault"
  elif id == 0x0000004C: funcName = "HvxKeysExLoadKeyVault"
  elif id == 0x0000004D: funcName = "HvxKeysExSaveKeyVault"
  elif id == 0x0000004E: funcName = "HvxKeysExSetKey"
  elif id == 0x0000004F: funcName = "HvxKeysExGetKey"
  elif id == 0x00000050: funcName = "HvxGetUpdateSequence"
  elif id == 0x00000051: funcName = "HvxSecurityInitialize"
  elif id == 0x00000052: funcName = "HvxSecurityLoadSettings"
  elif id == 0x00000053: funcName = "HvxSecuritySaveSettings"
  elif id == 0x00000054: funcName = "HvxSecuritySetDetected"
  elif id == 0x00000055: funcName = "HvxSecurityGetDetected"
  elif id == 0x00000056: funcName = "HvxSecuritySetActivated"
  elif id == 0x00000057: funcName = "HvxSecurityGetActivated"
  elif id == 0x00000058: funcName = "HvxSecuritySetStat"
  elif id == 0x00000059: funcName = "HvxGetProtectedFlags"
  elif id == 0x0000005A: funcName = "HvxSetProtectedFlag"
  elif id == 0x0000005B: funcName = "HvxDvdAuthGetAuthResults"
  elif id == 0x0000005C: funcName = "HvxDvdAuthSetDriveAuthResult"
  elif id == 0x0000005D: funcName = "HvxDvdAuthSetDiscAuthResult"
  elif id == 0x0000005E: funcName = "HvxImageTransformImageKey"
  elif id == 0x0000005F: funcName = "HvxImageXexHeader"
  elif id == 0x00000060: funcName = "HvxRevokeLoad"
  elif id == 0x00000061: funcName = "HvxRevokeSave"
  elif id == 0x00000062: funcName = "HvxRevokeUpdate"
  elif id == 0x00000063: funcName = "HvxDvdAuthGetMediaId"
  elif id == 0x00000064: funcName = "HvxKeysLoadKeyVault"
  elif id == 0x00000065: funcName = "HvxXexActivationGetNonce"
  elif id == 0x00000066: funcName = "HvxXexActivationSetLicense"
  elif id == 0x00000067: funcName = "HvxXexActivationVerifyOwnership"
  elif id == 0x00000068: funcName = "HvxIptvSetBoundaryKey"
  elif id == 0x00000069: funcName = "HvxIptvSetSessionKey"
  elif id == 0x0000006A: funcName = "HvxIptvVerifyOmac1Signature"
  elif id == 0x0000006B: funcName = "HvxIptvGetAesCtrTransform"
  elif id == 0x0000006C: funcName = "HvxIptvGetSessionKeyHash"
  elif id == 0x0000006D: funcName = "HvxImageDvdEmulationMode"
  elif id == 0x0000006E: funcName = "HvxImageUserMode"
  elif id == 0x0000006F: funcName = "HvxImageShim"
  elif id == 0x00000070: funcName = "HvxExpansionInstall"
  elif id == 0x00000071: funcName = "HvxExpansionCall"
  elif id == 0x00000072: funcName = "HvxDvdAuthFwcr"
  elif id == 0x00000073: funcName = "HvxDvdAuthFcrt"
  elif id == 0x00000074: funcName = "HvxDvdAuthEx"
  elif id == 0x00000075: funcName = "HvxTest"
  
  return funcName
  
def unknownNameGen(libName, version, id):
  funcName = "%s_%08X" % (libName, id)
  
  return funcName
  
def accept_file(li, n):
  return 0

def load_file(li, neflags, format):
  return 0